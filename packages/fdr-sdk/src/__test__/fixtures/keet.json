{
  "baseUrl": {
    "domain": "keet.docs.buildwithfern.com"
  },
  "definition": {
    "config": {
      "navigation": {
        "tabs": [
          {
            "type": "group",
            "title": "Overview",
            "icon": "fa-solid fa-globe",
            "items": [
              {
                "type": "page",
                "id": "docs/contents/intro.mdx",
                "title": "Introduction",
                "urlSlug": "introduction",
                "hidden": false
              },
              {
                "type": "page",
                "id": "docs/contents/quick-start.mdx",
                "title": "Quick Start",
                "urlSlug": "quick-start",
                "hidden": false
              },
              {
                "type": "section",
                "title": "Integrations",
                "urlSlug": "integrations",
                "collapsed": false,
                "hidden": false,
                "items": [
                  {
                    "type": "page",
                    "id": "docs/contents/integration-overview.mdx",
                    "title": "Overview",
                    "urlSlug": "overview",
                    "hidden": false
                  },
                  {
                    "type": "page",
                    "id": "docs/contents/integration-sessions.mdx",
                    "title": "Custom Automations",
                    "urlSlug": "custom-automations",
                    "hidden": false
                  },
                  {
                    "type": "page",
                    "id": "docs/contents/integration-api-abstractions.mdx",
                    "title": "Using Our Abstractions",
                    "urlSlug": "using-our-abstractions",
                    "hidden": false
                  }
                ],
                "skipUrlSlug": false
              }
            ],
            "urlSlug": "overview",
            "skipUrlSlug": false
          },
          {
            "type": "group",
            "title": "API Reference",
            "icon": "fa-solid fa-code",
            "items": [
              {
                "type": "apiV2",
                "node": {
                  "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                  "type": "apiReference",
                  "title": "API Reference",
                  "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                  "paginated": false,
                  "slug": "api-reference/api-reference",
                  "hideTitle": false,
                  "showErrors": false,
                  "children": [
                    {
                      "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/amazon",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazon.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/amazon.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/amazon/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazon.getBuyAgainItems",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/amazon.getBuyAgainItems",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Buy Again Items",
                              "slug": "api-reference/api-reference/integrations/amazon/get-buy-again-items"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazon.buyNow",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/amazon.buyNow",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Buy Now",
                              "slug": "api-reference/api-reference/integrations/amazon/buy-now"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazon.addToCart",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/amazon.addToCart",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Add To Cart",
                              "slug": "api-reference/api-reference/integrations/amazon/add-to-cart"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazon.search",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/amazon.search",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Search",
                              "slug": "api-reference/api-reference/integrations/amazon/search"
                            }
                          ],
                          "title": "Amazon",
                          "slug": "api-reference/api-reference/integrations/amazon",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/amazon/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/amazonBusiness",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazonBusiness.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/amazonBusiness.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/amazon-business/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazonBusiness.getOrders",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/amazonBusiness.getOrders",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Orders",
                              "slug": "api-reference/api-reference/integrations/amazon-business/get-orders"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazonBusiness.getBuyAgainItems",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/amazonBusiness.getBuyAgainItems",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Buy Again Items",
                              "slug": "api-reference/api-reference/integrations/amazon-business/get-buy-again-items"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazonBusiness.buyNow",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/amazonBusiness.buyNow",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Buy Now",
                              "slug": "api-reference/api-reference/integrations/amazon-business/buy-now"
                            }
                          ],
                          "title": "Amazon Business",
                          "slug": "api-reference/api-reference/integrations/amazon-business",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/amazon-business/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/amazonSeller",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/amazonSeller.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/amazonSeller.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/amazon-seller/create-session"
                            }
                          ],
                          "title": "Amazon Seller",
                          "slug": "api-reference/api-reference/integrations/amazon-seller",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/amazon-seller/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/dispatchMe",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/dispatchMe.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.editCustomer",
                              "type": "endpoint",
                              "method": "PUT",
                              "endpointId": "endpoint_integrations/dispatchMe.editCustomer",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Edit Customer",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/edit-customer"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.createCustomer",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/dispatchMe.createCustomer",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Customer",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/create-customer"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.getCustomers",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/dispatchMe.getCustomers",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Customers",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/get-customers"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.getAccountOrganizations",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/dispatchMe.getAccountOrganizations",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Account Organizations",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/get-account-organizations"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.getJobs",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/dispatchMe.getJobs",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Jobs",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/get-jobs"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.getUsers",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/dispatchMe.getUsers",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Users",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/get-users"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.createAppointment",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/dispatchMe.createAppointment",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Appointment",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/create-appointment"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/dispatchMe.createNote",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/dispatchMe.createNote",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Note",
                              "slug": "api-reference/api-reference/integrations/dispatch-me/create-note"
                            }
                          ],
                          "title": "Dispatch Me",
                          "slug": "api-reference/api-reference/integrations/dispatch-me",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/dispatch-me/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/facebook",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/facebook.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/facebook.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/facebook/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/facebook.postGroupMessage",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/facebook.postGroupMessage",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Post Group Message",
                              "slug": "api-reference/api-reference/integrations/facebook/post-group-message"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/facebook.joinGroup",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/facebook.joinGroup",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Join Group",
                              "slug": "api-reference/api-reference/integrations/facebook/join-group"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/facebook.searchGroups",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/facebook.searchGroups",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Search Groups",
                              "slug": "api-reference/api-reference/integrations/facebook/search-groups"
                            }
                          ],
                          "title": "Facebook",
                          "slug": "api-reference/api-reference/integrations/facebook",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/facebook/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/instagram",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/instagram.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/instagram.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/instagram/create-session"
                            }
                          ],
                          "title": "Instagram",
                          "slug": "api-reference/api-reference/integrations/instagram",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/instagram/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/linkedin",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/linkedin.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/linkedin/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.getConnectionInvitations",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/linkedin.getConnectionInvitations",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Connection Invitations",
                              "slug": "api-reference/api-reference/integrations/linkedin/get-connection-invitations"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.acceptConnectionInvitation",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/linkedin.acceptConnectionInvitation",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Accept Connection Invitation",
                              "slug": "api-reference/api-reference/integrations/linkedin/accept-connection-invitation"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.createPost",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/linkedin.createPost",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Post",
                              "slug": "api-reference/api-reference/integrations/linkedin/create-post"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.search",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/linkedin.search",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Search",
                              "slug": "api-reference/api-reference/integrations/linkedin/search"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.getConnections",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/linkedin.getConnections",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Connections",
                              "slug": "api-reference/api-reference/integrations/linkedin/get-connections"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.sendMessage",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/linkedin.sendMessage",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Send Message",
                              "slug": "api-reference/api-reference/integrations/linkedin/send-message"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/linkedin.getMessages",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/linkedin.getMessages",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Messages",
                              "slug": "api-reference/api-reference/integrations/linkedin/get-messages"
                            }
                          ],
                          "title": "Linkedin",
                          "slug": "api-reference/api-reference/integrations/linkedin",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/linkedin/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/ppp",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/ppp.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/ppp/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.createCustomer",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/ppp.createCustomer",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Customer",
                              "slug": "api-reference/api-reference/integrations/ppp/create-customer"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.searchCustomerDetails",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.searchCustomerDetails",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Search Customer Details",
                              "slug": "api-reference/api-reference/integrations/ppp/search-customer-details"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.createAppointment",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/ppp.createAppointment",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Appointment",
                              "slug": "api-reference/api-reference/integrations/ppp/create-appointment"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getBillingTerms",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getBillingTerms",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Billing Terms",
                              "slug": "api-reference/api-reference/integrations/ppp/get-billing-terms"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getInvoiceTypes",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getInvoiceTypes",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Invoice Types",
                              "slug": "api-reference/api-reference/integrations/ppp/get-invoice-types"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getCustomerTypes",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getCustomerTypes",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Customer Types",
                              "slug": "api-reference/api-reference/integrations/ppp/get-customer-types"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getArrivalWindow",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getArrivalWindow",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Arrival Window",
                              "slug": "api-reference/api-reference/integrations/ppp/get-arrival-window"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getServiceCallType",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getServiceCallType",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Service Call Type",
                              "slug": "api-reference/api-reference/integrations/ppp/get-service-call-type"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getDiagnosticFee",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getDiagnosticFee",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Diagnostic Fee",
                              "slug": "api-reference/api-reference/integrations/ppp/get-diagnostic-fee"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getServiceCallStatus",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getServiceCallStatus",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Service Call Status",
                              "slug": "api-reference/api-reference/integrations/ppp/get-service-call-status"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getLeadSource",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getLeadSource",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Lead Source",
                              "slug": "api-reference/api-reference/integrations/ppp/get-lead-source"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getBoardIds",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getBoardIds",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Board Ids",
                              "slug": "api-reference/api-reference/integrations/ppp/get-board-ids"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getTechnicians",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getTechnicians",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Technicians",
                              "slug": "api-reference/api-reference/integrations/ppp/get-technicians"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/ppp.getCalendar",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/ppp.getCalendar",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Calendar",
                              "slug": "api-reference/api-reference/integrations/ppp/get-calendar"
                            }
                          ],
                          "title": "Ppp",
                          "slug": "api-reference/api-reference/integrations/ppp",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/ppp/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/servicebox",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/servicebox.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/servicebox.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/servicebox/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/servicebox.getReceptionnaires",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/servicebox.getReceptionnaires",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Receptionnaires",
                              "slug": "api-reference/api-reference/integrations/servicebox/get-receptionnaires"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/servicebox.getEquippes",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/servicebox.getEquippes",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Equippes",
                              "slug": "api-reference/api-reference/integrations/servicebox/get-equippes"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/servicebox.getBarGraph",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/servicebox.getBarGraph",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Bar Graph",
                              "slug": "api-reference/api-reference/integrations/servicebox/get-bar-graph"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/servicebox.getCalendar",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/servicebox.getCalendar",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Calendar",
                              "slug": "api-reference/api-reference/integrations/servicebox/get-calendar"
                            }
                          ],
                          "title": "Servicebox",
                          "slug": "api-reference/api-reference/integrations/servicebox",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/servicebox/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/toast",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/toast.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/toast.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/toast/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/toast.getMenu",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/toast.getMenu",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Menu",
                              "slug": "api-reference/api-reference/integrations/toast/get-menu"
                            }
                          ],
                          "title": "Toast",
                          "slug": "api-reference/api-reference/integrations/toast",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/toast/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/uber",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/uber.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/uber.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/uber/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/uber.orderRide",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/uber.orderRide",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Order Ride",
                              "slug": "api-reference/api-reference/integrations/uber/order-ride"
                            }
                          ],
                          "title": "Uber",
                          "slug": "api-reference/api-reference/integrations/uber",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/uber/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/venmo",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/venmo.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/venmo.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/venmo/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/venmo.getTransactions",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/venmo.getTransactions",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Transactions",
                              "slug": "api-reference/api-reference/integrations/venmo/get-transactions"
                            }
                          ],
                          "title": "Venmo",
                          "slug": "api-reference/api-reference/integrations/venmo",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/venmo/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/vin",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/vin.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/vin/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.createSalesAppointment",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/vin.createSalesAppointment",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Sales Appointment",
                              "slug": "api-reference/api-reference/integrations/vin/create-sales-appointment"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.getAppointments",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/vin.getAppointments",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Appointments",
                              "slug": "api-reference/api-reference/integrations/vin/get-appointments"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.getUsers",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/vin.getUsers",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Users",
                              "slug": "api-reference/api-reference/integrations/vin/get-users"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.getDealers",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/vin.getDealers",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Dealers",
                              "slug": "api-reference/api-reference/integrations/vin/get-dealers"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.searchCustomers",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/vin.searchCustomers",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Search Customers",
                              "slug": "api-reference/api-reference/integrations/vin/search-customers"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.getVehicles",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/vin.getVehicles",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Vehicles",
                              "slug": "api-reference/api-reference/integrations/vin/get-vehicles"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/vin.createCustomer",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/vin.createCustomer",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Customer",
                              "slug": "api-reference/api-reference/integrations/vin/create-customer"
                            }
                          ],
                          "title": "Vin",
                          "slug": "api-reference/api-reference/integrations/vin",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/vin/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/whatsapp",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/whatsapp.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/whatsapp.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/whatsapp/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/whatsapp.sendMessage",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/whatsapp.sendMessage",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Send Message",
                              "slug": "api-reference/api-reference/integrations/whatsapp/send-message"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/whatsapp.changeStatus",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/whatsapp.changeStatus",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Change Status",
                              "slug": "api-reference/api-reference/integrations/whatsapp/change-status"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/whatsapp.readMessages",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/whatsapp.readMessages",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Read Messages",
                              "slug": "api-reference/api-reference/integrations/whatsapp/read-messages"
                            }
                          ],
                          "title": "Whatsapp",
                          "slug": "api-reference/api-reference/integrations/whatsapp",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/whatsapp/create-session"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_integrations/x",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/x.createSession",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_integrations/x.createSession",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Create Session",
                              "slug": "api-reference/api-reference/integrations/x/create-session"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/x.getFollowers",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/x.getFollowers",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Followers",
                              "slug": "api-reference/api-reference/integrations/x/get-followers"
                            },
                            {
                              "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_integrations/x.getFollowingTweets",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_integrations/x.getFollowingTweets",
                              "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                              "isResponseStream": false,
                              "title": "Get Following Tweets",
                              "slug": "api-reference/api-reference/integrations/x/get-following-tweets"
                            }
                          ],
                          "title": "X",
                          "slug": "api-reference/api-reference/integrations/x",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "pointsTo": "api-reference/api-reference/integrations/x/create-session"
                        }
                      ],
                      "title": "Integrations",
                      "slug": "api-reference/api-reference/integrations",
                      "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                      "pointsTo": "api-reference/api-reference/integrations/amazon/create-session"
                    },
                    {
                      "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_link",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_link.createLinkToken",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_link.createLinkToken",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "isResponseStream": false,
                          "title": "Create Link Token",
                          "slug": "api-reference/api-reference/link/create-link-token"
                        }
                      ],
                      "title": "Link",
                      "slug": "api-reference/api-reference/link",
                      "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                      "pointsTo": "api-reference/api-reference/link/create-link-token"
                    },
                    {
                      "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:subpackage_linked-accounts",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_linked-accounts.getLinkedAccounts",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_linked-accounts.getLinkedAccounts",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "isResponseStream": false,
                          "title": "Get Linked Accounts",
                          "slug": "api-reference/api-reference/linked-accounts/get-linked-accounts"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_linked-accounts.getLinkedAccount",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_linked-accounts.getLinkedAccount",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "isResponseStream": false,
                          "title": "Get Linked Account",
                          "slug": "api-reference/api-reference/linked-accounts/get-linked-account"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_linked-accounts.deleteLinkedAccount",
                          "type": "endpoint",
                          "method": "DELETE",
                          "endpointId": "endpoint_linked-accounts.deleteLinkedAccount",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "isResponseStream": false,
                          "title": "Delete Linked Account",
                          "slug": "api-reference/api-reference/linked-accounts/delete-linked-account"
                        },
                        {
                          "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a:endpoint_linked-accounts.getToken",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_linked-accounts.getToken",
                          "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                          "isResponseStream": false,
                          "title": "Get Token",
                          "slug": "api-reference/api-reference/linked-accounts/get-token"
                        }
                      ],
                      "title": "Linked Accounts",
                      "slug": "api-reference/api-reference/linked-accounts",
                      "apiDefinitionId": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
                      "pointsTo": "api-reference/api-reference/linked-accounts/get-linked-accounts"
                    }
                  ],
                  "pointsTo": "api-reference/api-reference/integrations/amazon/create-session"
                }
              }
            ],
            "urlSlug": "api-reference",
            "skipUrlSlug": false
          }
        ]
      },
      "logoHref": "https://app.trykeet.com",
      "colorsV3": {
        "type": "light",
        "accentPrimary": {
          "r": 66,
          "g": 65,
          "b": 75,
          "a": 1
        },
        "logo": "00bfa8f7-65f4-434f-b8d7-ac40252c7ca0",
        "background": {
          "type": "solid",
          "r": 252,
          "g": 252,
          "b": 253,
          "a": 1
        }
      },
      "navbarLinks": [
        {
          "type": "secondary",
          "text": "Talk to us",
          "url": "https://calendar.app.google/kbnwhaubx2AzXdQd6"
        },
        {
          "type": "primary",
          "text": "Get started",
          "url": "https://app.trykeet.com"
        }
      ],
      "title": "Keet | Documentation",
      "favicon": "dcfb0b88-8beb-4f49-918e-5acfd22f15ab",
      "layout": {
        "searchbarPlacement": "HEADER",
        "tabsPlacement": "HEADER",
        "contentAlignment": "CENTER",
        "headerPosition": "FIXED",
        "disableHeader": false
      },
      "css": {
        "inline": [
          ".fern-button.primary {\n  border-radius: 0.6rem;\n  display: flex;\n  flex-direction: row;\n  gap: 0.75rem; /* Gap corresponds to the gap-3 class */\n  font-size: 0.875rem; /* This corresponds to text-sm */\n  font-weight: 500; /* This corresponds to font-medium */\n  transition: all 0.8s ease-in-out;\n  background-image: linear-gradient(to bottom, #42414b, #3a3941, #232227);\n  border: 1px solid #42414b;\n  color: #fff !important;\n  box-shadow:\n    inset 0 0 3px 0.5px rgba(252, 252, 253, 0.4),\n    0 1px 2px 0 rgba(0, 0, 0, 0.05);\n}\n\n.fern-button.primary svg {\n  fill: #fff !important;\n  stroke: #fff !important;\n  color: #fff !important;\n}\n\n.fern-button-content {\n  /* color: #fff !important;\n    fill: #fff !important;\n    path: #fff !important;\n    stroke: #fff !important; */\n}\n\n.fern-button.primary:hover {\n  background-image: linear-gradient(to bottom, #5f5c6d, #42414b, #3a3941);\n}\n\n.fern-button.primary:active {\n  outline: 2px solid rgba(116, 114, 133, 0.5);\n  background-image: linear-gradient(to bottom, #3a3941, #3a3941, #3a3941);\n  box-shadow: none;\n}\n\n.fern-header {\n  background-color: #fff !important;\n  border-bottom: 1px solid #eaecf0 !important;\n}\n\n.fern-header-tabs {\n  background-color: #fff !important;\n  border-bottom: 1px solid #eaecf0 !important;\n}\n\nfigure.bg-tag-default-soft {\n  background-color: #808080;\n}\n"
        ]
      },
      "js": {
        "files": []
      },
      "analyticsConfig": {
        "posthog": {
          "apiKey": "phc_XGQwmyPwAW2aKCaDXNIl3y3syaHYmY7B1I6zqv2vtcG",
          "endpoint": "https://us.i.posthog.com"
        }
      }
    },
    "apis": {
      "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a": {
        "id": "0cead0e0-caf2-4fff-8e42-cf483e3f8c8a",
        "rootPackage": {
          "endpoints": [],
          "subpackages": [
            "subpackage_common",
            "subpackage_integrations",
            "subpackage_link",
            "subpackage_linked-accounts"
          ],
          "types": [],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_common/errors:BaseError": {
            "name": "BaseError",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_common/types:LinkedAccount": {
            "name": "LinkedAccount",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "endUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "integrations",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_common/types:Integration"
                    }
                  }
                }
              ]
            }
          },
          "type_common/types:Integration": {
            "name": "Integration",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "integration",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "isAlive",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_common/types:LinkConfig": {
            "name": "LinkConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "endUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "integration",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:OfferedIntegrations"
                  }
                },
                {
                  "key": "companyName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "companyLogoUri",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_common/types:OfferedIntegrations": {
            "name": "OfferedIntegrations",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "Venmo"
                },
                {
                  "value": "LinkedIn"
                },
                {
                  "value": "Amazon Business"
                },
                {
                  "value": "Amazon"
                },
                {
                  "value": "Uber"
                },
                {
                  "value": "Instagram"
                },
                {
                  "value": "X"
                },
                {
                  "value": "Facebook"
                },
                {
                  "value": "Amazon Seller"
                },
                {
                  "value": "WhatsApp"
                },
                {
                  "value": "Jane"
                },
                {
                  "value": "PPP"
                },
                {
                  "value": "ServiceBox"
                },
                {
                  "value": "DispatchMe"
                },
                {
                  "value": "Toast"
                },
                {
                  "value": "Vin"
                }
              ]
            }
          },
          "type_common/types:ResponseStatus": {
            "name": "ResponseStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ok"
                },
                {
                  "value": "error"
                }
              ]
            }
          },
          "type_common/types:CreateSessionResponse": {
            "name": "CreateSessionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "wsUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "postSignInUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazon:AmazonItem": {
            "name": "AmazonItem",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "price",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "pricePerUnit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "rating",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "reviewCount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "imageUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "merchant",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "availability",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazon:AmazonGetBuyAgainResponse": {
            "name": "AmazonGetBuyAgainResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "items",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/amazon:AmazonItem"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazon:AmazonSearchItemsResponse": {
            "name": "AmazonSearchItemsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "items",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/amazon:AmazonItem"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazon:AmazonOrderItemResponse": {
            "name": "AmazonOrderItemResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/amazon:AmazonAddToCartResponse": {
            "name": "AmazonAddToCartResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:PageInfo": {
            "name": "PageInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "next",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:AmazonBusinessGetOrdersResponse": {
            "name": "AmazonBusinessGetOrdersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "orders",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/amazonBusiness:AmazonBusinessOrder"
                    }
                  }
                },
                {
                  "key": "pageInfo",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/amazonBusiness:PageInfo"
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:AmazonBusinessAddress": {
            "name": "AmazonBusinessAddress",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:AmazonBusinessOrder": {
            "name": "AmazonBusinessOrder",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/amazonBusiness:AmazonBusinessAddress"
                    }
                  }
                },
                {
                  "key": "orderNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "items",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:AmazonBusinessItem": {
            "name": "AmazonBusinessItem",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "price",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "pricePerUnit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "rating",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "reviewCount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "imageUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "merchant",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "availability",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:AmazonBusinessGetBuyAgainResponse": {
            "name": "AmazonBusinessGetBuyAgainResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "items",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/amazonBusiness:AmazonBusinessItem"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:AmazonBusinessOrderItemResponse": {
            "name": "AmazonBusinessOrderItemResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/amazonBusiness:OrdersTimespan": {
            "name": "OrdersTimespan",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "30d"
                },
                {
                  "value": "3m"
                },
                {
                  "value": "1y"
                }
              ]
            }
          },
          "type_integrations/dispatchMe:DispatchMeAddress": {
            "name": "DispatchMeAddress",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "street1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "street2",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "district",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "county",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "formattedAddress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "timezone",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "latitude",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "longitude",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:DispatchMePhoneNumber": {
            "name": "DispatchMePhoneNumber",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "primary",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "number",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:DispatchMeCustomer": {
            "name": "DispatchMeCustomer",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "organizationId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/dispatchMe:DispatchMeAddress"
                  }
                },
                {
                  "key": "homeAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/dispatchMe:DispatchMeAddress"
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "notes",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "phoneNumbers",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:DispatchMePhoneNumber"
                    }
                  }
                },
                {
                  "key": "labels",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:DispatchMeJobStatus": {
            "name": "DispatchMeJobStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "offered"
                },
                {
                  "value": "scheduled"
                },
                {
                  "value": "un-scheduled"
                },
                {
                  "value": "paused"
                },
                {
                  "value": "in_progress"
                },
                {
                  "value": "complete"
                }
              ]
            }
          },
          "type_integrations/dispatchMe:EditCustomerResponse": {
            "name": "EditCustomerResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "customer",
                  "valueType": {
                    "type": "unknown"
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:CreateDispatchMeCustomerResponse": {
            "name": "CreateDispatchMeCustomerResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "customer",
                  "valueType": {
                    "type": "unknown"
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:GetCustomersResponse": {
            "name": "GetCustomersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "customers",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:GetAccountOrganizationsResponse": {
            "name": "GetAccountOrganizationsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "organizations",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:GetJobsResponse": {
            "name": "GetJobsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "jobs",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:DispatchMeNote": {
            "name": "DispatchMeNote",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "jobId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "private",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "priority",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:DispatchMeAppointment": {
            "name": "DispatchMeAppointment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "duration",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "time",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "secondaryUserIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "organizationId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "jobId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:CreateDispatchMeNoteResponse": {
            "name": "CreateDispatchMeNoteResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:CreateDispatchMeAppointmentResponse": {
            "name": "CreateDispatchMeAppointmentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/dispatchMe:GetDispatchMeUsersResponse": {
            "name": "GetDispatchMeUsersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "users",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/facebook:PostGroupMessageResponse": {
            "name": "PostGroupMessageResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/facebook:JoinGroupResponse": {
            "name": "JoinGroupResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/facebook:FacebookGroup": {
            "name": "FacebookGroup",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "numMembers",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "postsPerDay",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "privacy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/facebook:SearchGroupsResponse": {
            "name": "SearchGroupsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "groups",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/facebook:FacebookGroup"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:PersonSearchResult": {
            "name": "PersonSearchResult",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "premium",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "primarySubtitle",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "connectionDegree",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "summary",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "secondarySubtitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "navigationUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "navigationContext",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:InvitationRequest": {
            "name": "InvitationRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "profileUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sentTimeLabel",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sharedConnections",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:InvitationRequestsResponse": {
            "name": "InvitationRequestsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "invitationRequests",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/linkedin:InvitationRequest"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:AcceptInvitationResponse": {
            "name": "AcceptInvitationResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:CreatePostResponse": {
            "name": "CreatePostResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:SearchResponse": {
            "name": "SearchResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "results",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/linkedin:PersonSearchResult"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:GetConnectionsResult": {
            "name": "GetConnectionsResult",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "connections",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/linkedin:LinkedInConnection"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:LinkedInConnection": {
            "name": "LinkedInConnection",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "profileUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "headline",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "publicIdentifier",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:LinkedInSendMessageResponse": {
            "name": "LinkedInSendMessageResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:LinkedInMessage": {
            "name": "LinkedInMessage",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "content",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sentTime",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "from",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/linkedin:LinkedInGetMessagesResponse": {
            "name": "LinkedInGetMessagesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "messages",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/linkedin:LinkedInMessage"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:CreateCustomerResponse": {
            "name": "CreateCustomerResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:SearchCustomerDetailsResponse": {
            "name": "SearchCustomerDetailsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "customerDetails",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:CreateAppointmentResponse": {
            "name": "CreateAppointmentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetBillingTermsResponse": {
            "name": "GetBillingTermsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "billingTerms",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetInvoiceTypesResponse": {
            "name": "GetInvoiceTypesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "invoiceTypes",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetCustomerTypesResponse": {
            "name": "GetCustomerTypesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "customerTypes",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetArrivalWindowResponse": {
            "name": "GetArrivalWindowResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "arrivalWindow",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetServiceCallStatusResponse": {
            "name": "GetServiceCallStatusResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "serviceCallStatus",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetServiceCallTypeResponse": {
            "name": "GetServiceCallTypeResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "serviceCallType",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetLeadSourceResponse": {
            "name": "GetLeadSourceResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "leadSource",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetBoardIdsResponse": {
            "name": "GetBoardIdsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "boardIds",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetTechniciansResponse": {
            "name": "GetTechniciansResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "technicians",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetCalendarResponse": {
            "name": "GetCalendarResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "calendar",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:GetDiagnosticFeeResponse": {
            "name": "GetDiagnosticFeeResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "diagnosticFee",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:appointmentType": {
            "name": "appointmentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "scheduled"
                },
                {
                  "value": "open"
                }
              ]
            }
          },
          "type_integrations/ppp:multiTechOrNot": {
            "name": "multiTechOrNot",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "Add_New_Technician"
                },
                {
                  "value": ""
                }
              ]
            }
          },
          "type_integrations/ppp:mutliTech": {
            "name": "mutliTech",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "techID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "start_time",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "end_time",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:ServiceCallRequest": {
            "name": "ServiceCallRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "locationContactInfoID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "appointmentType",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/ppp:appointmentType"
                  }
                },
                {
                  "key": "openServiceCallDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "serviceCallTypeId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "hours",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "minutes",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "arrivalWindow",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "diagnosticFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "serviceCallStatus",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "leadSourceId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "poNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "notes",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "datepicker1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "dispatchBoardId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "callTypeID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "startTime",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "endTime",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "technicianID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "sendEmail",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "doNotEmail",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "arrivalWindowID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "newCustomer",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "customerFirstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "customerLastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "customerCompanyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "customerFullName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "newServiceCallDefLeadSourID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "appointmentSaveFrom",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "selectedMultiTechSameCall",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_integrations/ppp:mutliTech"
                      }
                    }
                  }
                },
                {
                  "key": "primaryOpenCallTech",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "selectedMultiTechSameCallOrNot",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/ppp:multiTechOrNot"
                    }
                  }
                },
                {
                  "key": "isMultipleTech",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isPrimaryTechID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "isPrimaryTech",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isSecondaryServiceCallData",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/ppp:phoneType": {
            "name": "phoneType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "Home"
                },
                {
                  "value": "Work"
                },
                {
                  "value": "Cell"
                },
                {
                  "value": "Fax"
                },
                {
                  "value": "Other"
                }
              ]
            }
          },
          "type_integrations/ppp:emailType": {
            "name": "emailType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "Work"
                },
                {
                  "value": "Home"
                },
                {
                  "value": "Other"
                }
              ]
            }
          },
          "type_integrations/ppp:commPreferences": {
            "name": "commPreferences",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "None"
                },
                {
                  "value": "Email"
                },
                {
                  "value": "Text"
                },
                {
                  "value": "Both"
                }
              ]
            }
          },
          "type_integrations/ppp:Customer": {
            "name": "Customer",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "primaryPhoneType",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/ppp:phoneType"
                  }
                },
                {
                  "key": "primaryPhone",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "primaryPhoneLabel",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "primaryEmailType",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/ppp:emailType"
                  }
                },
                {
                  "key": "primaryEmail",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "commPreferences",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/ppp:commPreferences"
                  }
                },
                {
                  "key": "billingTerm",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "leadSource",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "customerType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "comments",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "invoiceType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "billingLocationName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingStreet1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "billingStreet2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingCity",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "billingState",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "billingZip",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "billingComments",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "primaryLocationName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "primaryStreet1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "primaryStreet2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "primaryCity",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "primaryState",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "primaryZip",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "salesTax",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "primaryComments",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/servicebox:ServiceBoxReceptionnaire": {
            "name": "ServiceBoxReceptionnaire",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "text",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/servicebox:ServiceBoxEquippe": {
            "name": "ServiceBoxEquippe",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "text",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/servicebox:EquippesResponse": {
            "name": "EquippesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "equippes",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/servicebox:ServiceBoxReceptionnaire"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/servicebox:ReceptionnairesResponse": {
            "name": "ReceptionnairesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "receptionnaires",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/servicebox:ServiceBoxEquippe"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/servicebox:BarGraphResponse": {
            "name": "BarGraphResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "barGraph",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/servicebox:CalendarResponse": {
            "name": "CalendarResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "calendar",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/toast:GetMenusResponse": {
            "name": "GetMenusResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "menus",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/uber:OrderRideResponse": {
            "name": "OrderRideResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/uber:UberCarTypes": {
            "name": "UberCarTypes",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UberX"
                },
                {
                  "value": "UberXL"
                },
                {
                  "value": "Comfort"
                },
                {
                  "value": "Share"
                },
                {
                  "value": "ComfortElectric"
                },
                {
                  "value": "Green"
                },
                {
                  "value": "UberPet"
                },
                {
                  "value": "UberBlack"
                },
                {
                  "value": "UberBlackSUV"
                },
                {
                  "value": "WAV"
                }
              ]
            }
          },
          "type_integrations/uber:UberAddress": {
            "name": "UberAddress",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:GetTransactionsResponse": {
            "name": "GetTransactionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "transactions",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:StoryResponse"
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:StoryResponse": {
            "name": "StoryResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "nextId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "stories",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/venmo:Story"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:Story": {
            "name": "Story",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "avatar",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "initials",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "audience",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "note",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:Note"
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "attachments",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "title",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:Title"
                  }
                },
                {
                  "key": "mentions",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:Mentions"
                  }
                },
                {
                  "key": "externWalletStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "likes",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:Likes"
                  }
                },
                {
                  "key": "comments",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:Comments"
                  }
                },
                {
                  "key": "subType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:Note": {
            "name": "Note",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "content",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:Title": {
            "name": "Title",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "titleType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payload",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:Payload"
                  }
                },
                {
                  "key": "receiver",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:User"
                  }
                },
                {
                  "key": "sender",
                  "valueType": {
                    "type": "id",
                    "value": "type_integrations/venmo:User"
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:Payload": {
            "name": "Payload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "action",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "subType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:User": {
            "name": "User",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "displayName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "username",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:Mentions": {
            "name": "Mentions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "count",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:Likes": {
            "name": "Likes",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "count",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "userCommentedOrLiked",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/venmo:Comments": {
            "name": "Comments",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "count",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "userCommentedOrLiked",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/vin:CreateVinAppointmentResponse": {
            "name": "CreateVinAppointmentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/vin:GetSalesAppointmentsResponse": {
            "name": "GetSalesAppointmentsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "appointments",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/vin:GetUsersResponse": {
            "name": "GetUsersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "users",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/vin:GetVinDealersResponse": {
            "name": "GetVinDealersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "dealers",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/vin:SearchVinCustomersResponse": {
            "name": "SearchVinCustomersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "customers",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/vin:GetVinVehiclesResponse": {
            "name": "GetVinVehiclesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "vehicles",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_integrations/vin:CreateVinCustomerResponse": {
            "name": "CreateVinCustomerResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/vin:VinCustomer": {
            "name": "VinCustomer",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "homePhone",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "workPhone",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cellPhone",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "middleName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "vehicleNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/whatsapp:SendMessageResponse": {
            "name": "SendMessageResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/whatsapp:ChangeStatusResponse": {
            "name": "ChangeStatusResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/whatsapp:WhatsAppMessage": {
            "name": "WhatsAppMessage",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sender",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "timestamp",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/whatsapp:ReadMessagesResponse": {
            "name": "ReadMessagesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "messages",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/whatsapp:WhatsAppMessage"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_integrations/x:XProfile": {
            "name": "XProfile",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "restId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "profileUrl",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "numFollowers",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "numFollowing",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "verified",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "userIsFollowing",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/x:GetXFollowersResponse": {
            "name": "GetXFollowersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "profiles",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/x:XProfile"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/x:XPost": {
            "name": "XPost",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_integrations/x:GetXFollowingTweetsResponse": {
            "name": "GetXFollowingTweetsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "posts",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_integrations/x:XPost"
                    }
                  }
                }
              ]
            }
          },
          "type_link:CreateLinkResponse": {
            "name": "CreateLinkResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "linkToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_linked-accounts:GetLinkedAccountResponse": {
            "name": "GetLinkedAccountResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "linkedAccount",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:LinkedAccount"
                  }
                }
              ]
            }
          },
          "type_linked-accounts:DeleteLinkedAccountResponse": {
            "name": "DeleteLinkedAccountResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                }
              ]
            }
          },
          "type_linked-accounts:GetLinkedAccountsResponse": {
            "name": "GetLinkedAccountsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "linkedAccounts",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_common/types:LinkedAccount"
                    }
                  }
                }
              ]
            }
          },
          "type_linked-accounts:GetTokenResponse": {
            "name": "GetTokenResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_common/types:ResponseStatus"
                  }
                },
                {
                  "key": "accountToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_common": {
            "subpackageId": "subpackage_common",
            "name": "common",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_common/errors", "subpackage_common/types"],
            "urlSlug": "common",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_common/errors": {
            "subpackageId": "subpackage_common/errors",
            "parent": "subpackage_common",
            "name": "errors",
            "endpoints": [],
            "types": ["type_common/errors:BaseError"],
            "subpackages": [],
            "urlSlug": "errors",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_common/types": {
            "subpackageId": "subpackage_common/types",
            "parent": "subpackage_common",
            "name": "types",
            "endpoints": [],
            "types": [
              "type_common/types:LinkedAccount",
              "type_common/types:Integration",
              "type_common/types:LinkConfig",
              "type_common/types:OfferedIntegrations",
              "type_common/types:ResponseStatus",
              "type_common/types:CreateSessionResponse"
            ],
            "subpackages": [],
            "urlSlug": "types",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations": {
            "subpackageId": "subpackage_integrations",
            "name": "integrations",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_integrations/amazon",
              "subpackage_integrations/amazonBusiness",
              "subpackage_integrations/amazonSeller",
              "subpackage_integrations/dispatchMe",
              "subpackage_integrations/facebook",
              "subpackage_integrations/instagram",
              "subpackage_integrations/linkedin",
              "subpackage_integrations/ppp",
              "subpackage_integrations/servicebox",
              "subpackage_integrations/toast",
              "subpackage_integrations/uber",
              "subpackage_integrations/venmo",
              "subpackage_integrations/vin",
              "subpackage_integrations/whatsapp",
              "subpackage_integrations/x"
            ],
            "urlSlug": "integrations",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/amazon": {
            "subpackageId": "subpackage_integrations/amazon",
            "parent": "subpackage_integrations",
            "name": "amazon",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/amazon.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Amazon session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazon.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-buy-again-items",
                "method": "GET",
                "id": "getBuyAgainItems",
                "originalEndpointId": "endpoint_integrations/amazon.getBuyAgainItems",
                "name": "Get Buy Again Items",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon"
                    },
                    {
                      "type": "literal",
                      "value": "/items/buy-again"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/amazon:AmazonGetBuyAgainResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "items": [
                          {
                            "title": "string",
                            "brand": "string",
                            "price": "string",
                            "url": "string",
                            "pricePerUnit": "string",
                            "rating": "string",
                            "reviewCount": "string",
                            "imageUrl": "string",
                            "merchant": "string",
                            "availability": "string",
                            "purchaseDate": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a list of products that you can buy again or have purchased before.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazon.getBuyAgainItems()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "buy-now",
                "method": "POST",
                "id": "buyNow",
                "originalEndpointId": "endpoint_integrations/amazon.buyNow",
                "name": "Buy Now",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon"
                    },
                    {
                      "type": "literal",
                      "value": "/items/buy-now"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "asin",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "itemUrl",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/amazon:AmazonOrderItemResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.buyNow({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Order an item. **The end user must have a default address and payment method set**. Either ASIN or a valid amazon url to the item must be present. If both are present, the ASIN will be used.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazon.buyNow(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "asin: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "asin"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "itemUrl: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "itemUrl"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "add-to-cart",
                "method": "POST",
                "id": "addToCart",
                "originalEndpointId": "endpoint_integrations/amazon.addToCart",
                "name": "Add To Cart",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon"
                    },
                    {
                      "type": "literal",
                      "value": "/items/add-to-cart"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "asin",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "itemUrl",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/amazon:AmazonAddToCartResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon/items/add-to-cart",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/add-to-cart",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/add-to-cart",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/add-to-cart",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/add-to-cart",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/add-to-cart",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.addToCart({\n    asin: \"string\",\n    itemUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Add an item to the cart. **The end user must have a default address and payment method set**. Either ASIN or a valid amazon url to the item must be present. If both are present, the ASIN will be used.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazon.addToCart(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "asin: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "asin"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "itemUrl: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "itemUrl"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "search",
                "method": "GET",
                "id": "search",
                "originalEndpointId": "endpoint_integrations/amazon.search",
                "name": "Search",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon"
                    },
                    {
                      "type": "literal",
                      "value": "/items/search"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "query",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "isWholeFoods",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/amazon:AmazonSearchItemsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon/items/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string",
                      "isWholeFoods": true
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "items": [
                          {
                            "title": "string",
                            "brand": "string",
                            "price": "string",
                            "url": "string",
                            "pricePerUnit": "string",
                            "rating": "string",
                            "reviewCount": "string",
                            "imageUrl": "string",
                            "merchant": "string",
                            "availability": "string",
                            "purchaseDate": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string",
                      "isWholeFoods": true
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string",
                      "isWholeFoods": true
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string",
                      "isWholeFoods": true
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string",
                      "isWholeFoods": true
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon/items/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string",
                      "isWholeFoods": true
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazon.search({\n    query: \"string\",\n    isWholeFoods: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Search for items.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazon.search(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "query: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "query"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "isWholeFoods: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "isWholeFoods"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/amazon:AmazonItem",
              "type_integrations/amazon:AmazonGetBuyAgainResponse",
              "type_integrations/amazon:AmazonSearchItemsResponse",
              "type_integrations/amazon:AmazonOrderItemResponse",
              "type_integrations/amazon:AmazonAddToCartResponse"
            ],
            "subpackages": [],
            "urlSlug": "amazon",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/amazonBusiness": {
            "subpackageId": "subpackage_integrations/amazonBusiness",
            "parent": "subpackage_integrations",
            "name": "amazonBusiness",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/amazonBusiness.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon-business"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon-business/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Amazon business session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazonBusiness.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-orders",
                "method": "GET",
                "id": "getOrders",
                "originalEndpointId": "endpoint_integrations/amazonBusiness.getOrders",
                "name": "Get Orders",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon-business"
                    },
                    {
                      "type": "literal",
                      "value": "/orders"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "timespan",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_integrations/amazonBusiness:OrdersTimespan"
                      }
                    }
                  },
                  {
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "key": "startIndex",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/amazonBusiness:AmazonBusinessGetOrdersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon-business/orders",
                    "pathParameters": {},
                    "queryParameters": {
                      "timespan": "30d",
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "orders": [
                          {
                            "date": "2023-01-01T00:00:00Z",
                            "total": "string",
                            "address": {
                              "name": "string",
                              "addressLine1": "string",
                              "addressLine2": "string",
                              "country": "string"
                            },
                            "orderNumber": "string",
                            "items": ["string"]
                          }
                        ],
                        "pageInfo": {
                          "total": 0,
                          "next": 0
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/orders",
                    "pathParameters": {},
                    "queryParameters": {
                      "timespan": "30d",
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/orders",
                    "pathParameters": {},
                    "queryParameters": {
                      "timespan": "30d",
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/orders",
                    "pathParameters": {},
                    "queryParameters": {
                      "timespan": "30d",
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/orders",
                    "pathParameters": {},
                    "queryParameters": {
                      "timespan": "30d",
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/orders",
                    "pathParameters": {},
                    "queryParameters": {
                      "timespan": "30d",
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getOrders({\n    timespan: Keet.OrdersTimespan.ThirtyDays,\n    limit: 1,\n    startIndex: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get your Amazon Business orders. The default timespan is 30 days and default startIndex is 0.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazonBusiness.getOrders(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "30d": "Keet.OrdersTimespan.ThirtyDays",
                                    "3m": "Keet.OrdersTimespan.ThreeMonths",
                                    "1y": "Keet.OrdersTimespan.OneYear"
                                  },
                                  "templateString": "timespan: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "QUERY",
                                    "path": "timespan"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "startIndex: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "startIndex"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-buy-again-items",
                "method": "GET",
                "id": "getBuyAgainItems",
                "originalEndpointId": "endpoint_integrations/amazonBusiness.getBuyAgainItems",
                "name": "Get Buy Again Items",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon-business"
                    },
                    {
                      "type": "literal",
                      "value": "/items/buy-again"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/amazonBusiness:AmazonBusinessGetBuyAgainResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon-business/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "items": [
                          {
                            "title": "string",
                            "brand": "string",
                            "price": "string",
                            "url": "string",
                            "pricePerUnit": "string",
                            "rating": "string",
                            "reviewCount": "string",
                            "imageUrl": "string",
                            "merchant": "string",
                            "availability": "string",
                            "purchaseDate": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-again",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.getBuyAgainItems();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a list of products that you can buy again or have purchased before.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazonBusiness.getBuyAgainItems()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "buy-now",
                "method": "POST",
                "id": "buyNow",
                "originalEndpointId": "endpoint_integrations/amazonBusiness.buyNow",
                "name": "Buy Now",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon-business"
                    },
                    {
                      "type": "literal",
                      "value": "/items/buy-now"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "itemUrl",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "asin",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/amazonBusiness:AmazonBusinessOrderItemResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon-business/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-business/items/buy-now",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonBusiness.buyNow({\n    itemUrl: \"string\",\n    asin: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Order an item. **The end user must have a default address and payment method set**. Either ASIN or a valid amazon url to the item must be present. If both are present, the ASIN will be used.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazonBusiness.buyNow(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "itemUrl: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "itemUrl"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "asin: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "asin"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/amazonBusiness:PageInfo",
              "type_integrations/amazonBusiness:AmazonBusinessGetOrdersResponse",
              "type_integrations/amazonBusiness:AmazonBusinessAddress",
              "type_integrations/amazonBusiness:AmazonBusinessOrder",
              "type_integrations/amazonBusiness:AmazonBusinessItem",
              "type_integrations/amazonBusiness:AmazonBusinessGetBuyAgainResponse",
              "type_integrations/amazonBusiness:AmazonBusinessOrderItemResponse",
              "type_integrations/amazonBusiness:OrdersTimespan"
            ],
            "subpackages": [],
            "urlSlug": "amazon-business",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/amazonSeller": {
            "subpackageId": "subpackage_integrations/amazonSeller",
            "parent": "subpackage_integrations",
            "name": "amazonSeller",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/amazonSeller.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/amazon-seller"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/amazon-seller/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-seller/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-seller/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-seller/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-seller/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/amazon-seller/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.amazonSeller.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Amazon Seller session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.amazonSeller.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "amazon-seller",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/dispatchMe": {
            "subpackageId": "subpackage_integrations/dispatchMe",
            "parent": "subpackage_integrations",
            "name": "dispatchMe",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/dispatchMe.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Dispatch Me session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "edit-customer",
                "method": "PUT",
                "id": "editCustomer",
                "originalEndpointId": "endpoint_integrations/dispatchMe.editCustomer",
                "name": "Edit Customer",
                "path": {
                  "pathParameters": [
                    {
                      "key": "customerId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/customers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "customerId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "customer",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/dispatchMe:DispatchMeCustomer"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:EditCustomerResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/customers/:customerId",
                    "pathParameters": {
                      "customerId": ":customerId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {},
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers/:customerId",
                    "pathParameters": {
                      "customerId": ":customerId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers/:customerId",
                    "pathParameters": {
                      "customerId": ":customerId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers/:customerId",
                    "pathParameters": {
                      "customerId": ":customerId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers/:customerId",
                    "pathParameters": {
                      "customerId": ":customerId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers/:customerId",
                    "pathParameters": {
                      "customerId": ":customerId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.editCustomer(\"string\", {\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.editCustomer(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": false,
                            "inputDelimiter": ",\n\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "PATH",
                                      "path": "customerId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "customer: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "firstName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.firstName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "lastName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.lastName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "organizationId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.organizationId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "companyName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.companyName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street1: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.street1"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street2: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.street2"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "city: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.city"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "state: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.state"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "postalCode: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.postalCode"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "district: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.district"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "county: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.county"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "country: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.country"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "formattedAddress: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.formattedAddress"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "timezone: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.timezone"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "latitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.latitude"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "longitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.longitude"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "homeAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street1: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.street1"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street2: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.street2"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "city: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.city"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "state: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.state"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "postalCode: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.postalCode"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "district: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.district"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "county: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.county"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "country: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.country"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "formattedAddress: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.formattedAddress"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "timezone: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.timezone"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "latitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.latitude"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "longitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.longitude"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "email: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.email"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "notes: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.notes"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "phoneNumbers: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "primary: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "primary"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "number: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "number"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "customer.phoneNumbers"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "labels: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "customer.labels"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-customer",
                "method": "POST",
                "id": "createCustomer",
                "originalEndpointId": "endpoint_integrations/dispatchMe.createCustomer",
                "name": "Create Customer",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/customers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "customer",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/dispatchMe:DispatchMeCustomer"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:CreateDispatchMeCustomerResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {},
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createCustomer({\n    customer: {\n        firstName: \"string\",\n        lastName: \"string\",\n        organizationId: \"string\",\n        companyName: \"string\",\n        billingAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        homeAddress: {\n            street1: \"string\",\n            street2: \"string\",\n            city: \"string\",\n            state: \"string\",\n            postalCode: \"string\",\n            district: \"string\",\n            county: \"string\",\n            country: \"string\",\n            formattedAddress: \"string\",\n            timezone: \"string\",\n            latitude: 1.1,\n            longitude: 1.1\n        },\n        email: \"string\",\n        notes: \"string\",\n        phoneNumbers: [{\n                primary: true,\n                number: \"string\"\n            }],\n        labels: [\"string\"]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "firstName": "string",
                          "lastName": "string",
                          "organizationId": "string",
                          "companyName": "string",
                          "billingAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "homeAddress": {
                            "street1": "string",
                            "street2": "string",
                            "city": "string",
                            "state": "string",
                            "postalCode": "string",
                            "district": "string",
                            "county": "string",
                            "country": "string",
                            "formattedAddress": "string",
                            "timezone": "string",
                            "latitude": 1,
                            "longitude": 1
                          },
                          "email": "string",
                          "notes": "string",
                          "phoneNumbers": [
                            {
                              "primary": true,
                              "number": "string"
                            }
                          ],
                          "labels": ["string"]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.createCustomer(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "customer: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "firstName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.firstName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "lastName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.lastName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "organizationId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.organizationId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "companyName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.companyName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street1: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.street1"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street2: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.street2"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "city: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.city"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "state: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.state"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "postalCode: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.postalCode"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "district: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.district"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "county: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.county"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "country: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.country"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "formattedAddress: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.formattedAddress"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "timezone: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.timezone"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "latitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.latitude"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "longitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.billingAddress.longitude"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "homeAddress: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                        "isOptional": true,
                                        "inputDelimiter": ",\n\t\t\t\t",
                                        "templateInputs": [
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street1: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.street1"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "street2: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.street2"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "city: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.city"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "state: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.state"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "postalCode: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.postalCode"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "district: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.district"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "county: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.county"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "country: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.country"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "formattedAddress: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.formattedAddress"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "timezone: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.timezone"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "latitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.latitude"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "template",
                                            "value": {
                                              "type": "generic",
                                              "imports": [],
                                              "templateString": "longitude: $FERN_INPUT",
                                              "isOptional": true,
                                              "templateInputs": [
                                                {
                                                  "type": "payload",
                                                  "location": "BODY",
                                                  "path": "customer.homeAddress.longitude"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "email: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.email"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "notes: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.notes"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "phoneNumbers: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "primary: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "primary"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "number: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "number"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "customer.phoneNumbers"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "labels: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "customer.labels"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-customers",
                "method": "GET",
                "id": "getCustomers",
                "originalEndpointId": "endpoint_integrations/dispatchMe.getCustomers",
                "name": "Get Customers",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/customers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:GetCustomersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "customers": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getCustomers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.getCustomers()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-account-organizations",
                "method": "GET",
                "id": "getAccountOrganizations",
                "originalEndpointId": "endpoint_integrations/dispatchMe.getAccountOrganizations",
                "name": "Get Account Organizations",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/organizations"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:GetAccountOrganizationsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/organizations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "organizations": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/organizations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/organizations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/organizations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/organizations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/organizations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getAccountOrganizations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.getAccountOrganizations()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-jobs",
                "method": "GET",
                "id": "getJobs",
                "originalEndpointId": "endpoint_integrations/dispatchMe.getJobs",
                "name": "Get Jobs",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/jobs"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "organizationId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "limit",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  {
                    "key": "status",
                    "type": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:DispatchMeJobStatus"
                    }
                  },
                  {
                    "key": "offset",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:GetJobsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/jobs",
                    "pathParameters": {},
                    "queryParameters": {
                      "organizationId": "string",
                      "limit": 0,
                      "status": "offered",
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "jobs": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/jobs",
                    "pathParameters": {},
                    "queryParameters": {
                      "organizationId": "string",
                      "limit": 0,
                      "status": "offered",
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/jobs",
                    "pathParameters": {},
                    "queryParameters": {
                      "organizationId": "string",
                      "limit": 0,
                      "status": "offered",
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/jobs",
                    "pathParameters": {},
                    "queryParameters": {
                      "organizationId": "string",
                      "limit": 0,
                      "status": "offered",
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/jobs",
                    "pathParameters": {},
                    "queryParameters": {
                      "organizationId": "string",
                      "limit": 0,
                      "status": "offered",
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/jobs",
                    "pathParameters": {},
                    "queryParameters": {
                      "organizationId": "string",
                      "limit": 0,
                      "status": "offered",
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getJobs({\n    organizationId: \"string\",\n    limit: 1,\n    status: Keet.DispatchMeJobStatus.Offered,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.getJobs(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "organizationId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "organizationId"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "offered": "Keet.DispatchMeJobStatus.Offered",
                                    "scheduled": "Keet.DispatchMeJobStatus.Scheduled",
                                    "un-scheduled": "Keet.DispatchMeJobStatus.Unscheduled",
                                    "paused": "Keet.DispatchMeJobStatus.Paused",
                                    "in_progress": "Keet.DispatchMeJobStatus.InProgress",
                                    "complete": "Keet.DispatchMeJobStatus.Complete"
                                  },
                                  "templateString": "status: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "QUERY",
                                    "path": "status"
                                  }
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "offset: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "offset"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-users",
                "method": "GET",
                "id": "getUsers",
                "originalEndpointId": "endpoint_integrations/dispatchMe.getUsers",
                "name": "Get Users",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/users"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "limit",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  {
                    "key": "offset",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:GetDispatchMeUsersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/users",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0,
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "users": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/users",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0,
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/users",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0,
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/users",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0,
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/users",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0,
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/users",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0,
                      "offset": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.getUsers({\n    limit: 1,\n    offset: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.getUsers(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "offset: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "offset"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-appointment",
                "method": "POST",
                "id": "createAppointment",
                "originalEndpointId": "endpoint_integrations/dispatchMe.createAppointment",
                "name": "Create Appointment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/appointments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "appointment",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/dispatchMe:DispatchMeAppointment"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:CreateDispatchMeAppointmentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "appointment": {
                          "duration": 0,
                          "time": "string",
                          "userId": 0,
                          "secondaryUserIds": [0],
                          "type": "string",
                          "organizationId": 0,
                          "jobId": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "appointment": {
                          "duration": 0,
                          "time": "string",
                          "userId": 0,
                          "secondaryUserIds": [0],
                          "type": "string",
                          "organizationId": 0,
                          "jobId": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "appointment": {
                          "duration": 0,
                          "time": "string",
                          "userId": 0,
                          "secondaryUserIds": [0],
                          "type": "string",
                          "organizationId": 0,
                          "jobId": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "appointment": {
                          "duration": 0,
                          "time": "string",
                          "userId": 0,
                          "secondaryUserIds": [0],
                          "type": "string",
                          "organizationId": 0,
                          "jobId": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "appointment": {
                          "duration": 0,
                          "time": "string",
                          "userId": 0,
                          "secondaryUserIds": [0],
                          "type": "string",
                          "organizationId": 0,
                          "jobId": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createAppointment({\n    appointment: {\n        duration: 1,\n        time: \"string\",\n        userId: 1,\n        secondaryUserIds: [1],\n        type: \"string\",\n        organizationId: 1,\n        jobId: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "appointment": {
                          "duration": 0,
                          "time": "string",
                          "userId": 0,
                          "secondaryUserIds": [0],
                          "type": "string",
                          "organizationId": 0,
                          "jobId": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.createAppointment(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "appointment: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "duration: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "appointment.duration"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "time: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "appointment.time"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "userId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "appointment.userId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "secondaryUserIds: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "$FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "RELATIVE",
                                              "path": null
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "appointment.secondaryUserIds"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "type: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "appointment.type"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "organizationId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "appointment.organizationId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "jobId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "appointment.jobId"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-note",
                "method": "POST",
                "id": "createNote",
                "originalEndpointId": "endpoint_integrations/dispatchMe.createNote",
                "name": "Create Note",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/dispatch-me"
                    },
                    {
                      "type": "literal",
                      "value": "/notes"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "note",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/dispatchMe:DispatchMeNote"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/dispatchMe:CreateDispatchMeNoteResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/dispatch-me/notes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "note": {
                          "jobId": 0,
                          "description": "string",
                          "private": true,
                          "priority": true
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/notes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "note": {
                          "jobId": 0,
                          "description": "string",
                          "private": true,
                          "priority": true
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/notes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "note": {
                          "jobId": 0,
                          "description": "string",
                          "private": true,
                          "priority": true
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/notes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "note": {
                          "jobId": 0,
                          "description": "string",
                          "private": true,
                          "priority": true
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/notes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "note": {
                          "jobId": 0,
                          "description": "string",
                          "private": true,
                          "priority": true
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/dispatch-me/notes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.dispatchMe.createNote({\n    note: {\n        jobId: 1,\n        description: \"string\",\n        private: true,\n        priority: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "note": {
                          "jobId": 0,
                          "description": "string",
                          "private": true,
                          "priority": true
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.dispatchMe.createNote(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "note: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "jobId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "note.jobId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "description: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "note.description"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "private: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "note.private"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "priority: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "note.priority"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/dispatchMe:DispatchMeAddress",
              "type_integrations/dispatchMe:DispatchMePhoneNumber",
              "type_integrations/dispatchMe:DispatchMeCustomer",
              "type_integrations/dispatchMe:DispatchMeJobStatus",
              "type_integrations/dispatchMe:EditCustomerResponse",
              "type_integrations/dispatchMe:CreateDispatchMeCustomerResponse",
              "type_integrations/dispatchMe:GetCustomersResponse",
              "type_integrations/dispatchMe:GetAccountOrganizationsResponse",
              "type_integrations/dispatchMe:GetJobsResponse",
              "type_integrations/dispatchMe:DispatchMeNote",
              "type_integrations/dispatchMe:DispatchMeAppointment",
              "type_integrations/dispatchMe:CreateDispatchMeNoteResponse",
              "type_integrations/dispatchMe:CreateDispatchMeAppointmentResponse",
              "type_integrations/dispatchMe:GetDispatchMeUsersResponse"
            ],
            "subpackages": [],
            "urlSlug": "dispatch-me",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/facebook": {
            "subpackageId": "subpackage_integrations/facebook",
            "parent": "subpackage_integrations",
            "name": "facebook",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/facebook.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/facebook"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/facebook/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Facebook session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.facebook.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "post-group-message",
                "method": "POST",
                "id": "postGroupMessage",
                "originalEndpointId": "endpoint_integrations/facebook.postGroupMessage",
                "name": "Post Group Message",
                "path": {
                  "pathParameters": [
                    {
                      "key": "groupId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/facebook"
                    },
                    {
                      "type": "literal",
                      "value": "/groups/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "groupId"
                    },
                    {
                      "type": "literal",
                      "value": "/message"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The message to post to the group",
                        "key": "message",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/facebook:PostGroupMessageResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/facebook/groups/:groupId/message",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/message",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/message",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/message",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/message",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/message",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.postGroupMessage(\"string\", {\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Post a message to a group",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.facebook.postGroupMessage(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": false,
                            "inputDelimiter": ",\n\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "PATH",
                                      "path": "groupId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "message: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "message"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "join-group",
                "method": "POST",
                "id": "joinGroup",
                "originalEndpointId": "endpoint_integrations/facebook.joinGroup",
                "name": "Join Group",
                "path": {
                  "pathParameters": [
                    {
                      "key": "groupId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/facebook"
                    },
                    {
                      "type": "literal",
                      "value": "/groups/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "groupId"
                    },
                    {
                      "type": "literal",
                      "value": "/join"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/facebook:JoinGroupResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/facebook/groups/:groupId/join",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/join",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/join",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/join",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/join",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups/:groupId/join",
                    "pathParameters": {
                      "groupId": ":groupId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.joinGroup(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Join a group",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.facebook.joinGroup(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": false,
                            "inputDelimiter": ",\n\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "PATH",
                                      "path": "groupId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "search-groups",
                "method": "GET",
                "id": "searchGroups",
                "originalEndpointId": "endpoint_integrations/facebook.searchGroups",
                "name": "Search Groups",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/facebook"
                    },
                    {
                      "type": "literal",
                      "value": "/groups"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "query",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/facebook:SearchGroupsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/facebook/groups",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "groups": [
                          {
                            "name": "string",
                            "numMembers": "string",
                            "postsPerDay": "string",
                            "privacy": "string",
                            "url": "string",
                            "id": "string"
                          }
                        ],
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/facebook/groups",
                    "pathParameters": {},
                    "queryParameters": {
                      "query": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.facebook.searchGroups({\n    query: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Search for groups",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.facebook.searchGroups(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "query: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "query"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/facebook:PostGroupMessageResponse",
              "type_integrations/facebook:JoinGroupResponse",
              "type_integrations/facebook:FacebookGroup",
              "type_integrations/facebook:SearchGroupsResponse"
            ],
            "subpackages": [],
            "urlSlug": "facebook",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/instagram": {
            "subpackageId": "subpackage_integrations/instagram",
            "parent": "subpackage_integrations",
            "name": "instagram",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/instagram.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/instagram"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/instagram/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/instagram/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/instagram/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/instagram/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/instagram/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/instagram/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.instagram.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Instagram session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.instagram.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "instagram",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/linkedin": {
            "subpackageId": "subpackage_integrations/linkedin",
            "parent": "subpackage_integrations",
            "name": "linkedin",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/linkedin.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a LinkedIn session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-connection-invitations",
                "method": "GET",
                "id": "getConnectionInvitations",
                "originalEndpointId": "endpoint_integrations/linkedin.getConnectionInvitations",
                "name": "Get Connection Invitations",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/invitations"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/linkedin:InvitationRequestsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/invitations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "invitationRequests": [
                          {
                            "name": "string",
                            "profileUrl": "string",
                            "sentTimeLabel": "string",
                            "description": "string",
                            "sharedConnections": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnectionInvitations();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get your the list of pending LinkedIn connection requests.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.getConnectionInvitations()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "accept-connection-invitation",
                "method": "POST",
                "id": "acceptConnectionInvitation",
                "originalEndpointId": "endpoint_integrations/linkedin.acceptConnectionInvitation",
                "name": "Accept Connection Invitation",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/invitations/accept"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "profileUrl",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/linkedin:AcceptInvitationResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/invitations/accept",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "profileUrl": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations/accept",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "profileUrl": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations/accept",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "profileUrl": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations/accept",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "profileUrl": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations/accept",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "profileUrl": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/invitations/accept",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.acceptConnectionInvitation({\n    profileUrl: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "profileUrl": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Accept a LinkedIn connection invitation",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.acceptConnectionInvitation(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "profileUrl: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "profileUrl"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-post",
                "method": "POST",
                "id": "createPost",
                "originalEndpointId": "endpoint_integrations/linkedin.createPost",
                "name": "Create Post",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/posts"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "content",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/linkedin:CreatePostResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/posts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/posts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/posts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/posts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/posts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/posts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.createPost({\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a new LinkedIn post",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.createPost(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "content: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "content"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "search",
                "method": "GET",
                "id": "search",
                "originalEndpointId": "endpoint_integrations/linkedin.search",
                "name": "Search",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/search"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "firstName",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "key": "lastName",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/linkedin:SearchResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "results": [
                          {
                            "title": "string",
                            "premium": "string",
                            "primarySubtitle": "string",
                            "connectionDegree": "string",
                            "summary": "string",
                            "secondarySubtitle": "string",
                            "navigationUrl": "string",
                            "navigationContext": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.search({\n    firstName: \"string\",\n    lastName: \"string\",\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Search for people on LinkedIn",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.search(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "firstName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "firstName"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "lastName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "lastName"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-connections",
                "method": "GET",
                "id": "getConnections",
                "originalEndpointId": "endpoint_integrations/linkedin.getConnections",
                "name": "Get Connections",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/connections"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "key": "offset",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/linkedin:GetConnectionsResult"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/connections",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": "string",
                      "offset": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "connections": [
                          {
                            "firstName": "string",
                            "lastName": "string",
                            "profileUrl": "string",
                            "headline": "string",
                            "publicIdentifier": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/connections",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": "string",
                      "offset": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/connections",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": "string",
                      "offset": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/connections",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": "string",
                      "offset": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/connections",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": "string",
                      "offset": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/connections",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": "string",
                      "offset": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getConnections({\n    limit: \"string\",\n    offset: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get your LinkedIn connections",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.getConnections(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "offset: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "offset"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "send-message",
                "method": "POST",
                "id": "sendMessage",
                "originalEndpointId": "endpoint_integrations/linkedin.sendMessage",
                "name": "Send Message",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/messages"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The profile name of the person to send the message to. For example for the account with the url \"https://www.linkedin.com/in/zacharyashen/\" the profile name would be \"zacharyashen\"",
                        "key": "to",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "content",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/linkedin:LinkedInSendMessageResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.sendMessage({\n    to: \"string\",\n    content: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "content": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Send a LinkedIn message",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.sendMessage(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "to: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "to"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "content: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "content"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-messages",
                "method": "GET",
                "id": "getMessages",
                "originalEndpointId": "endpoint_integrations/linkedin.getMessages",
                "name": "Get Messages",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The profile name of the person to get the messages from. For example for the account with the url \"https://www.linkedin.com/in/zacharyashen/\" the profile name would be \"zacharyashen\"",
                      "key": "profileName",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linkedin"
                    },
                    {
                      "type": "literal",
                      "value": "/messages/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "profileName"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/linkedin:LinkedInGetMessagesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linkedin/messages/:profileName",
                    "pathParameters": {
                      "profileName": ":profileName"
                    },
                    "queryParameters": {
                      "limit": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "messages": [
                          {
                            "content": "string",
                            "sentTime": "string",
                            "from": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages/:profileName",
                    "pathParameters": {
                      "profileName": ":profileName"
                    },
                    "queryParameters": {
                      "limit": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages/:profileName",
                    "pathParameters": {
                      "profileName": ":profileName"
                    },
                    "queryParameters": {
                      "limit": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages/:profileName",
                    "pathParameters": {
                      "profileName": ":profileName"
                    },
                    "queryParameters": {
                      "limit": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages/:profileName",
                    "pathParameters": {
                      "profileName": ":profileName"
                    },
                    "queryParameters": {
                      "limit": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linkedin/messages/:profileName",
                    "pathParameters": {
                      "profileName": ":profileName"
                    },
                    "queryParameters": {
                      "limit": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.linkedin.getMessages(\"string\", {\n    limit: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get your LinkedIn messages",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.linkedin.getMessages(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": false,
                            "inputDelimiter": ",\n\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "PATH",
                                      "path": "profileName"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/linkedin:PersonSearchResult",
              "type_integrations/linkedin:InvitationRequest",
              "type_integrations/linkedin:InvitationRequestsResponse",
              "type_integrations/linkedin:AcceptInvitationResponse",
              "type_integrations/linkedin:CreatePostResponse",
              "type_integrations/linkedin:SearchResponse",
              "type_integrations/linkedin:GetConnectionsResult",
              "type_integrations/linkedin:LinkedInConnection",
              "type_integrations/linkedin:LinkedInSendMessageResponse",
              "type_integrations/linkedin:LinkedInMessage",
              "type_integrations/linkedin:LinkedInGetMessagesResponse"
            ],
            "subpackages": [],
            "urlSlug": "linkedin",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/ppp": {
            "subpackageId": "subpackage_integrations/ppp",
            "parent": "subpackage_integrations",
            "name": "ppp",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/ppp.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a perfect pricing session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-customer",
                "method": "POST",
                "id": "createCustomer",
                "originalEndpointId": "endpoint_integrations/ppp.createCustomer",
                "name": "Create Customer",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/customers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:Customer"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:CreateCustomerResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "firstName": "string",
                        "lastName": "string",
                        "companyName": "string",
                        "primaryPhoneType": "Home",
                        "primaryPhone": "string",
                        "primaryEmailType": "Work",
                        "primaryEmail": "string",
                        "commPreferences": "None",
                        "billingTerm": "string",
                        "leadSource": "string",
                        "customerType": "string",
                        "invoiceType": "string",
                        "billingStreet1": "string",
                        "billingCity": "string",
                        "billingState": "string",
                        "billingZip": "string",
                        "primaryLocationName": "string",
                        "primaryStreet1": "string",
                        "primaryCity": "string",
                        "primaryState": "string",
                        "primaryZip": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "firstName": "string",
                        "lastName": "string",
                        "companyName": "string",
                        "primaryPhoneType": "Home",
                        "primaryPhone": "string",
                        "primaryEmailType": "Work",
                        "primaryEmail": "string",
                        "commPreferences": "None",
                        "billingTerm": "string",
                        "leadSource": "string",
                        "customerType": "string",
                        "invoiceType": "string",
                        "billingStreet1": "string",
                        "billingCity": "string",
                        "billingState": "string",
                        "billingZip": "string",
                        "primaryLocationName": "string",
                        "primaryStreet1": "string",
                        "primaryCity": "string",
                        "primaryState": "string",
                        "primaryZip": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "firstName": "string",
                        "lastName": "string",
                        "companyName": "string",
                        "primaryPhoneType": "Home",
                        "primaryPhone": "string",
                        "primaryEmailType": "Work",
                        "primaryEmail": "string",
                        "commPreferences": "None",
                        "billingTerm": "string",
                        "leadSource": "string",
                        "customerType": "string",
                        "invoiceType": "string",
                        "billingStreet1": "string",
                        "billingCity": "string",
                        "billingState": "string",
                        "billingZip": "string",
                        "primaryLocationName": "string",
                        "primaryStreet1": "string",
                        "primaryCity": "string",
                        "primaryState": "string",
                        "primaryZip": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "firstName": "string",
                        "lastName": "string",
                        "companyName": "string",
                        "primaryPhoneType": "Home",
                        "primaryPhone": "string",
                        "primaryEmailType": "Work",
                        "primaryEmail": "string",
                        "commPreferences": "None",
                        "billingTerm": "string",
                        "leadSource": "string",
                        "customerType": "string",
                        "invoiceType": "string",
                        "billingStreet1": "string",
                        "billingCity": "string",
                        "billingState": "string",
                        "billingZip": "string",
                        "primaryLocationName": "string",
                        "primaryStreet1": "string",
                        "primaryCity": "string",
                        "primaryState": "string",
                        "primaryZip": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "firstName": "string",
                        "lastName": "string",
                        "companyName": "string",
                        "primaryPhoneType": "Home",
                        "primaryPhone": "string",
                        "primaryEmailType": "Work",
                        "primaryEmail": "string",
                        "commPreferences": "None",
                        "billingTerm": "string",
                        "leadSource": "string",
                        "customerType": "string",
                        "invoiceType": "string",
                        "billingStreet1": "string",
                        "billingCity": "string",
                        "billingState": "string",
                        "billingZip": "string",
                        "primaryLocationName": "string",
                        "primaryStreet1": "string",
                        "primaryCity": "string",
                        "primaryState": "string",
                        "primaryZip": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createCustomer({\n    firstName: \"string\",\n    lastName: \"string\",\n    companyName: \"string\",\n    primaryPhoneType: Keet.PhoneType.Home,\n    primaryPhone: \"string\",\n    primaryPhoneLabel: \"string\",\n    primaryEmailType: Keet.EmailType.Work,\n    primaryEmail: \"string\",\n    commPreferences: Keet.CommPreferences.None,\n    billingTerm: \"string\",\n    leadSource: \"string\",\n    customerType: \"string\",\n    comments: \"string\",\n    invoiceType: \"string\",\n    billingLocationName: \"string\",\n    billingStreet1: \"string\",\n    billingStreet2: \"string\",\n    billingCity: \"string\",\n    billingState: \"string\",\n    billingZip: \"string\",\n    billingComments: \"string\",\n    primaryLocationName: \"string\",\n    primaryStreet1: \"string\",\n    primaryStreet2: \"string\",\n    primaryCity: \"string\",\n    primaryState: \"string\",\n    primaryZip: \"string\",\n    salesTax: \"string\",\n    primaryComments: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "firstName": "string",
                        "lastName": "string",
                        "companyName": "string",
                        "primaryPhoneType": "Home",
                        "primaryPhone": "string",
                        "primaryEmailType": "Work",
                        "primaryEmail": "string",
                        "commPreferences": "None",
                        "billingTerm": "string",
                        "leadSource": "string",
                        "customerType": "string",
                        "invoiceType": "string",
                        "billingStreet1": "string",
                        "billingCity": "string",
                        "billingState": "string",
                        "billingZip": "string",
                        "primaryLocationName": "string",
                        "primaryStreet1": "string",
                        "primaryCity": "string",
                        "primaryState": "string",
                        "primaryZip": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a perfect pricing customer",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.createCustomer(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "firstName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "firstName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "lastName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "lastName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "companyName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "companyName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "Home": "Keet.PhoneType.Home",
                                          "Work": "Keet.PhoneType.Work",
                                          "Cell": "Keet.PhoneType.Cell",
                                          "Fax": "Keet.PhoneType.Fax",
                                          "Other": "Keet.PhoneType.Other"
                                        },
                                        "templateString": "primaryPhoneType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "primaryPhoneType"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryPhone: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryPhone"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryPhoneLabel: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryPhoneLabel"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "Work": "Keet.EmailType.Work",
                                          "Home": "Keet.EmailType.Home",
                                          "Other": "Keet.EmailType.Other"
                                        },
                                        "templateString": "primaryEmailType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "primaryEmailType"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryEmail: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryEmail"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "None": "Keet.CommPreferences.None",
                                          "Email": "Keet.CommPreferences.Email",
                                          "Text": "Keet.CommPreferences.Text",
                                          "Both": "Keet.CommPreferences.Both"
                                        },
                                        "templateString": "commPreferences: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "commPreferences"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingTerm: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingTerm"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "leadSource: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "leadSource"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "customerType: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customerType"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "comments: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "comments"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "invoiceType: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "invoiceType"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingLocationName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingLocationName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingStreet1: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingStreet1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingStreet2: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingStreet2"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingCity: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingCity"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingState: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingState"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingZip: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingZip"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "billingComments: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "billingComments"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryLocationName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryLocationName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryStreet1: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryStreet1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryStreet2: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryStreet2"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryCity: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryCity"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryState: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryState"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryZip: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryZip"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "salesTax: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "salesTax"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryComments: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "primaryComments"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "search-customer-details",
                "method": "GET",
                "id": "searchCustomerDetails",
                "originalEndpointId": "endpoint_integrations/ppp.searchCustomerDetails",
                "name": "Search Customer Details",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/customers/search"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "firstName",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "key": "lastName",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "key": "phoneNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:SearchCustomerDetailsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/customers/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "customerDetails": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customers/search",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.searchCustomerDetails({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Search for perfect pricing customer",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.searchCustomerDetails(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "firstName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "firstName"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "lastName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "lastName"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-appointment",
                "method": "POST",
                "id": "createAppointment",
                "originalEndpointId": "endpoint_integrations/ppp.createAppointment",
                "name": "Create Appointment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/appointments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "firstName",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "lastName",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "phoneNumber",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "serviceCallRequest",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/ppp:ServiceCallRequest"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:CreateAppointmentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "serviceCallRequest": {
                          "appointmentType": "scheduled",
                          "serviceCallTypeId": 0,
                          "hours": "string",
                          "minutes": "string",
                          "arrivalWindow": "string",
                          "diagnosticFee": 1,
                          "serviceCallStatus": "string",
                          "leadSourceId": 0,
                          "description": "string",
                          "datepicker1": "string",
                          "dispatchBoardId": 0,
                          "sendEmail": 0,
                          "arrivalWindowID": 0,
                          "newCustomer": 0,
                          "customerFirstName": "string",
                          "customerLastName": "string",
                          "customerCompanyName": "string",
                          "customerFullName": "string",
                          "newServiceCallDefLeadSourID": 0,
                          "appointmentSaveFrom": "string",
                          "isSecondaryServiceCallData": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "serviceCallRequest": {
                          "appointmentType": "scheduled",
                          "serviceCallTypeId": 0,
                          "hours": "string",
                          "minutes": "string",
                          "arrivalWindow": "string",
                          "diagnosticFee": 1,
                          "serviceCallStatus": "string",
                          "leadSourceId": 0,
                          "description": "string",
                          "datepicker1": "string",
                          "dispatchBoardId": 0,
                          "sendEmail": 0,
                          "arrivalWindowID": 0,
                          "newCustomer": 0,
                          "customerFirstName": "string",
                          "customerLastName": "string",
                          "customerCompanyName": "string",
                          "customerFullName": "string",
                          "newServiceCallDefLeadSourID": 0,
                          "appointmentSaveFrom": "string",
                          "isSecondaryServiceCallData": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "serviceCallRequest": {
                          "appointmentType": "scheduled",
                          "serviceCallTypeId": 0,
                          "hours": "string",
                          "minutes": "string",
                          "arrivalWindow": "string",
                          "diagnosticFee": 1,
                          "serviceCallStatus": "string",
                          "leadSourceId": 0,
                          "description": "string",
                          "datepicker1": "string",
                          "dispatchBoardId": 0,
                          "sendEmail": 0,
                          "arrivalWindowID": 0,
                          "newCustomer": 0,
                          "customerFirstName": "string",
                          "customerLastName": "string",
                          "customerCompanyName": "string",
                          "customerFullName": "string",
                          "newServiceCallDefLeadSourID": 0,
                          "appointmentSaveFrom": "string",
                          "isSecondaryServiceCallData": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "serviceCallRequest": {
                          "appointmentType": "scheduled",
                          "serviceCallTypeId": 0,
                          "hours": "string",
                          "minutes": "string",
                          "arrivalWindow": "string",
                          "diagnosticFee": 1,
                          "serviceCallStatus": "string",
                          "leadSourceId": 0,
                          "description": "string",
                          "datepicker1": "string",
                          "dispatchBoardId": 0,
                          "sendEmail": 0,
                          "arrivalWindowID": 0,
                          "newCustomer": 0,
                          "customerFirstName": "string",
                          "customerLastName": "string",
                          "customerCompanyName": "string",
                          "customerFullName": "string",
                          "newServiceCallDefLeadSourID": 0,
                          "appointmentSaveFrom": "string",
                          "isSecondaryServiceCallData": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "serviceCallRequest": {
                          "appointmentType": "scheduled",
                          "serviceCallTypeId": 0,
                          "hours": "string",
                          "minutes": "string",
                          "arrivalWindow": "string",
                          "diagnosticFee": 1,
                          "serviceCallStatus": "string",
                          "leadSourceId": 0,
                          "description": "string",
                          "datepicker1": "string",
                          "dispatchBoardId": 0,
                          "sendEmail": 0,
                          "arrivalWindowID": 0,
                          "newCustomer": 0,
                          "customerFirstName": "string",
                          "customerLastName": "string",
                          "customerCompanyName": "string",
                          "customerFullName": "string",
                          "newServiceCallDefLeadSourID": 0,
                          "appointmentSaveFrom": "string",
                          "isSecondaryServiceCallData": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.createAppointment({\n    firstName: \"string\",\n    lastName: \"string\",\n    serviceCallRequest: {\n        locationContactInfoId: \"string\",\n        appointmentType: Keet.AppointmentType.Scheduled,\n        openServiceCallDate: \"string\",\n        serviceCallTypeId: 1,\n        hours: \"string\",\n        minutes: \"string\",\n        arrivalWindow: \"string\",\n        diagnosticFee: 1.1,\n        serviceCallStatus: \"string\",\n        leadSourceId: 1,\n        poNumber: \"string\",\n        description: \"string\",\n        notes: \"string\",\n        datepicker1: \"string\",\n        dispatchBoardId: 1,\n        callTypeId: \"string\",\n        startTime: \"string\",\n        endTime: \"string\",\n        date: \"string\",\n        technicianId: 1,\n        sendEmail: 1,\n        doNotEmail: 1,\n        arrivalWindowId: 1,\n        id: \"string\",\n        newCustomer: 1,\n        customerFirstName: \"string\",\n        customerLastName: \"string\",\n        customerCompanyName: \"string\",\n        customerFullName: \"string\",\n        newServiceCallDefLeadSourId: 1,\n        appointmentSaveFrom: \"string\",\n        selectedMultiTechSameCall: [{\n                techId: \"string\",\n                startTime: \"string\",\n                endTime: \"string\"\n            }],\n        primaryOpenCallTech: \"string\",\n        selectedMultiTechSameCallOrNot: Keet.MultiTechOrNot.AddNewTechnician,\n        isMultipleTech: \"string\",\n        isPrimaryTechId: 1,\n        isPrimaryTech: \"string\",\n        isSecondaryServiceCallData: 1\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "serviceCallRequest": {
                          "appointmentType": "scheduled",
                          "serviceCallTypeId": 0,
                          "hours": "string",
                          "minutes": "string",
                          "arrivalWindow": "string",
                          "diagnosticFee": 1,
                          "serviceCallStatus": "string",
                          "leadSourceId": 0,
                          "description": "string",
                          "datepicker1": "string",
                          "dispatchBoardId": 0,
                          "sendEmail": 0,
                          "arrivalWindowID": 0,
                          "newCustomer": 0,
                          "customerFirstName": "string",
                          "customerLastName": "string",
                          "customerCompanyName": "string",
                          "customerFullName": "string",
                          "newServiceCallDefLeadSourID": 0,
                          "appointmentSaveFrom": "string",
                          "isSecondaryServiceCallData": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a perfect pricing appointment",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.createAppointment(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "firstName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "firstName"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "lastName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "lastName"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "serviceCallRequest: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "locationContactInfoId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.locationContactInfoID"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "scheduled": "Keet.AppointmentType.Scheduled",
                                          "open": "Keet.AppointmentType.Open"
                                        },
                                        "templateString": "appointmentType: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "serviceCallRequest.appointmentType"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "openServiceCallDate: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.openServiceCallDate"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "serviceCallTypeId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.serviceCallTypeId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "hours: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.hours"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "minutes: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.minutes"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "arrivalWindow: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.arrivalWindow"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "diagnosticFee: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.diagnosticFee"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "serviceCallStatus: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.serviceCallStatus"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "leadSourceId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.leadSourceId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "poNumber: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.poNumber"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "description: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.description"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "notes: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.notes"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "datepicker1: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.datepicker1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "dispatchBoardId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.dispatchBoardId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "callTypeId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.callTypeID"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "startTime: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.startTime"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "endTime: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.endTime"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "date: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.date"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "technicianId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.technicianID"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "sendEmail: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.sendEmail"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "doNotEmail: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.doNotEmail"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "arrivalWindowId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.arrivalWindowID"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "id: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.id"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "newCustomer: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.newCustomer"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "customerFirstName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.customerFirstName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "customerLastName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.customerLastName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "customerCompanyName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.customerCompanyName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "customerFullName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.customerFullName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "newServiceCallDefLeadSourId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.newServiceCallDefLeadSourID"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "appointmentSaveFrom: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.appointmentSaveFrom"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "iterable",
                                        "imports": [],
                                        "isOptional": true,
                                        "containerTemplateString": "selectedMultiTechSameCall: [\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                        "delimiter": ",\n\t\t\t\t",
                                        "innerTemplate": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "{\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "techId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "techID"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "startTime: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "start_time"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "endTime: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "RELATIVE",
                                                    "path": "end_time"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "serviceCallRequest.selectedMultiTechSameCall"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "primaryOpenCallTech: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.primaryOpenCallTech"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "Add_New_Technician": "Keet.MultiTechOrNot.AddNewTechnician",
                                          "": "Keet.MultiTechOrNot.Empty"
                                        },
                                        "templateString": "selectedMultiTechSameCallOrNot: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "serviceCallRequest.selectedMultiTechSameCallOrNot"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "isMultipleTech: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.isMultipleTech"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "isPrimaryTechId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.isPrimaryTechID"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "isPrimaryTech: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.isPrimaryTech"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "isSecondaryServiceCallData: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "serviceCallRequest.isSecondaryServiceCallData"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-billing-terms",
                "method": "GET",
                "id": "getBillingTerms",
                "originalEndpointId": "endpoint_integrations/ppp.getBillingTerms",
                "name": "Get Billing Terms",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/billing-terms"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetBillingTermsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/billing-terms",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "billingTerms": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/billing-terms",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/billing-terms",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/billing-terms",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/billing-terms",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/billing-terms",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBillingTerms();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing billing terms",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getBillingTerms()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-invoice-types",
                "method": "GET",
                "id": "getInvoiceTypes",
                "originalEndpointId": "endpoint_integrations/ppp.getInvoiceTypes",
                "name": "Get Invoice Types",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/invoice-types"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetInvoiceTypesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/invoice-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "invoiceTypes": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/invoice-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/invoice-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/invoice-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/invoice-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/invoice-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getInvoiceTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing invoice types",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getInvoiceTypes()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-customer-types",
                "method": "GET",
                "id": "getCustomerTypes",
                "originalEndpointId": "endpoint_integrations/ppp.getCustomerTypes",
                "name": "Get Customer Types",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/customer-types"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetCustomerTypesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/customer-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "customerTypes": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customer-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customer-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customer-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customer-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/customer-types",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCustomerTypes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing customer types",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getCustomerTypes()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-arrival-window",
                "method": "GET",
                "id": "getArrivalWindow",
                "originalEndpointId": "endpoint_integrations/ppp.getArrivalWindow",
                "name": "Get Arrival Window",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/arrival-window"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetArrivalWindowResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/arrival-window",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "arrivalWindow": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/arrival-window",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/arrival-window",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/arrival-window",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/arrival-window",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/arrival-window",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getArrivalWindow();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing arrival window",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getArrivalWindow()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-service-call-type",
                "method": "GET",
                "id": "getServiceCallType",
                "originalEndpointId": "endpoint_integrations/ppp.getServiceCallType",
                "name": "Get Service Call Type",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/service-call-type"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetServiceCallTypeResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/service-call-type",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "serviceCallType": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-type",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-type",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-type",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-type",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-type",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallType();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing service call type",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getServiceCallType()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-diagnostic-fee",
                "method": "GET",
                "id": "getDiagnosticFee",
                "originalEndpointId": "endpoint_integrations/ppp.getDiagnosticFee",
                "name": "Get Diagnostic Fee",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/diagnostic-fee"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetDiagnosticFeeResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/diagnostic-fee",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "diagnosticFee": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/diagnostic-fee",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/diagnostic-fee",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/diagnostic-fee",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/diagnostic-fee",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/diagnostic-fee",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getDiagnosticFee();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing diagnostic fee",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getDiagnosticFee()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-service-call-status",
                "method": "GET",
                "id": "getServiceCallStatus",
                "originalEndpointId": "endpoint_integrations/ppp.getServiceCallStatus",
                "name": "Get Service Call Status",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/service-call-status"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetServiceCallStatusResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/service-call-status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "serviceCallStatus": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/service-call-status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getServiceCallStatus();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing service call status",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getServiceCallStatus()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-lead-source",
                "method": "GET",
                "id": "getLeadSource",
                "originalEndpointId": "endpoint_integrations/ppp.getLeadSource",
                "name": "Get Lead Source",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/lead-source"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetLeadSourceResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/lead-source",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "leadSource": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/lead-source",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/lead-source",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/lead-source",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/lead-source",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/lead-source",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getLeadSource();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing lead source",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getLeadSource()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-board-ids",
                "method": "GET",
                "id": "getBoardIds",
                "originalEndpointId": "endpoint_integrations/ppp.getBoardIds",
                "name": "Get Board Ids",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/board-ids"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetBoardIdsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/board-ids",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "boardIds": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/board-ids",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/board-ids",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/board-ids",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/board-ids",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/board-ids",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getBoardIds();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing board ids",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getBoardIds()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-technicians",
                "method": "GET",
                "id": "getTechnicians",
                "originalEndpointId": "endpoint_integrations/ppp.getTechnicians",
                "name": "Get Technicians",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/technicians"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetTechniciansResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/technicians",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "technicians": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/technicians",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/technicians",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/technicians",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/technicians",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/technicians",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getTechnicians();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing technicians",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getTechnicians()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-calendar",
                "method": "GET",
                "id": "getCalendar",
                "originalEndpointId": "endpoint_integrations/ppp.getCalendar",
                "name": "Get Calendar",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/ppp"
                    },
                    {
                      "type": "literal",
                      "value": "/calendar"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "boardId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "date",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/ppp:GetCalendarResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/ppp/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "boardId": "string",
                      "date": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "calendar": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "boardId": "string",
                      "date": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "boardId": "string",
                      "date": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "boardId": "string",
                      "date": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "boardId": "string",
                      "date": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/ppp/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "boardId": "string",
                      "date": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.ppp.getCalendar({\n    boardId: \"string\",\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get perfect pricing calendar",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.ppp.getCalendar(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "boardId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "boardId"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "date: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "date"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/ppp:CreateCustomerResponse",
              "type_integrations/ppp:SearchCustomerDetailsResponse",
              "type_integrations/ppp:CreateAppointmentResponse",
              "type_integrations/ppp:GetBillingTermsResponse",
              "type_integrations/ppp:GetInvoiceTypesResponse",
              "type_integrations/ppp:GetCustomerTypesResponse",
              "type_integrations/ppp:GetArrivalWindowResponse",
              "type_integrations/ppp:GetServiceCallStatusResponse",
              "type_integrations/ppp:GetServiceCallTypeResponse",
              "type_integrations/ppp:GetLeadSourceResponse",
              "type_integrations/ppp:GetBoardIdsResponse",
              "type_integrations/ppp:GetTechniciansResponse",
              "type_integrations/ppp:GetCalendarResponse",
              "type_integrations/ppp:GetDiagnosticFeeResponse",
              "type_integrations/ppp:appointmentType",
              "type_integrations/ppp:multiTechOrNot",
              "type_integrations/ppp:mutliTech",
              "type_integrations/ppp:ServiceCallRequest",
              "type_integrations/ppp:phoneType",
              "type_integrations/ppp:emailType",
              "type_integrations/ppp:commPreferences",
              "type_integrations/ppp:Customer"
            ],
            "subpackages": [],
            "urlSlug": "ppp",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/servicebox": {
            "subpackageId": "subpackage_integrations/servicebox",
            "parent": "subpackage_integrations",
            "name": "servicebox",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/servicebox.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/servicebox"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/servicebox/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Service Box session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.servicebox.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-receptionnaires",
                "method": "GET",
                "id": "getReceptionnaires",
                "originalEndpointId": "endpoint_integrations/servicebox.getReceptionnaires",
                "name": "Get Receptionnaires",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/servicebox"
                    },
                    {
                      "type": "literal",
                      "value": "/receptionnaires"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "equipe",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/servicebox:ReceptionnairesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/servicebox/receptionnaires",
                    "pathParameters": {},
                    "queryParameters": {
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "receptionnaires": [
                          {
                            "text": "string",
                            "value": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/receptionnaires",
                    "pathParameters": {},
                    "queryParameters": {
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/receptionnaires",
                    "pathParameters": {},
                    "queryParameters": {
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/receptionnaires",
                    "pathParameters": {},
                    "queryParameters": {
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/receptionnaires",
                    "pathParameters": {},
                    "queryParameters": {
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/receptionnaires",
                    "pathParameters": {},
                    "queryParameters": {
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getReceptionnaires({\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the list of receptionnaires associated with this account",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.servicebox.getReceptionnaires(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "equipe: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "equipe"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-equippes",
                "method": "GET",
                "id": "getEquippes",
                "originalEndpointId": "endpoint_integrations/servicebox.getEquippes",
                "name": "Get Equippes",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/servicebox"
                    },
                    {
                      "type": "literal",
                      "value": "/equippes"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/servicebox:EquippesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/servicebox/equippes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "equippes": [
                          {
                            "text": "string",
                            "value": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/equippes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/equippes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/equippes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/equippes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/equippes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getEquippes();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the list of equippes associated with this account",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.servicebox.getEquippes()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-bar-graph",
                "method": "GET",
                "id": "getBarGraph",
                "originalEndpointId": "endpoint_integrations/servicebox.getBarGraph",
                "name": "Get Bar Graph",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/servicebox"
                    },
                    {
                      "type": "literal",
                      "value": "/bar-graph"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "date",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "equipe",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/servicebox:BarGraphResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/servicebox/bar-graph",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "barGraph": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/bar-graph",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/bar-graph",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/bar-graph",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/bar-graph",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/bar-graph",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getBarGraph({\n    date: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a bar graph of the number of events in each location",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.servicebox.getBarGraph(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "date: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "date"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "equipe: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "equipe"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-calendar",
                "method": "GET",
                "id": "getCalendar",
                "originalEndpointId": "endpoint_integrations/servicebox.getCalendar",
                "name": "Get Calendar",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/servicebox"
                    },
                    {
                      "type": "literal",
                      "value": "/calendar"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "date",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "receptionnnaire",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "equipe",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/servicebox:CalendarResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/servicebox/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "receptionnnaire": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "calendar": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "receptionnnaire": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "receptionnnaire": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "receptionnnaire": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "receptionnnaire": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/servicebox/calendar",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "receptionnnaire": "string",
                      "equipe": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.servicebox.getCalendar({\n    date: \"string\",\n    receptionnnaire: \"string\",\n    equipe: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the calendar",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.servicebox.getCalendar(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "date: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "date"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "receptionnnaire: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "receptionnnaire"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "equipe: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "equipe"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/servicebox:ServiceBoxReceptionnaire",
              "type_integrations/servicebox:ServiceBoxEquippe",
              "type_integrations/servicebox:EquippesResponse",
              "type_integrations/servicebox:ReceptionnairesResponse",
              "type_integrations/servicebox:BarGraphResponse",
              "type_integrations/servicebox:CalendarResponse"
            ],
            "subpackages": [],
            "urlSlug": "servicebox",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/toast": {
            "subpackageId": "subpackage_integrations/toast",
            "parent": "subpackage_integrations",
            "name": "toast",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/toast.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/toast"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/toast/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Toast session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.toast.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-menu",
                "method": "GET",
                "id": "getMenu",
                "originalEndpointId": "endpoint_integrations/toast.getMenu",
                "name": "Get Menu",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/toast"
                    },
                    {
                      "type": "literal",
                      "value": "/menus"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/toast:GetMenusResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/toast/menus",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "menus": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/menus",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/menus",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/menus",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/menus",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/toast/menus",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.toast.getMenu();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.toast.getMenu()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": ["type_integrations/toast:GetMenusResponse"],
            "subpackages": [],
            "urlSlug": "toast",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/uber": {
            "subpackageId": "subpackage_integrations/uber",
            "parent": "subpackage_integrations",
            "name": "uber",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/uber.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/uber"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/uber/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Uber session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.uber.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "order-ride",
                "method": "POST",
                "id": "orderRide",
                "originalEndpointId": "endpoint_integrations/uber.orderRide",
                "name": "Order Ride",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/uber"
                    },
                    {
                      "type": "literal",
                      "value": "/ride"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "origin",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/uber:UberAddress"
                        }
                      },
                      {
                        "key": "destination",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/uber:UberAddress"
                        }
                      },
                      {
                        "key": "carType",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/uber:UberCarTypes"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/uber:OrderRideResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/uber/ride",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "origin": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "destination": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "carType": "UberX"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/ride",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "origin": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "destination": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "carType": "UberX"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/ride",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "origin": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "destination": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "carType": "UberX"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/ride",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "origin": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "destination": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "carType": "UberX"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/ride",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "origin": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "destination": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "carType": "UberX"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/uber/ride",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.uber.orderRide({\n    origin: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    destination: {\n        addressLine1: \"string\",\n        addressLine2: \"string\"\n    },\n    carType: Keet.UberCarTypes.UberX\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "origin": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "destination": {
                          "addressLine1": "string",
                          "addressLine2": "string"
                        },
                        "carType": "UberX"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.uber.orderRide(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "origin: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "addressLine1: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "origin.addressLine1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "addressLine2: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "origin.addressLine2"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "destination: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "addressLine1: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "destination.addressLine1"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "addressLine2: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "destination.addressLine2"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "enum",
                                  "imports": [],
                                  "isOptional": true,
                                  "values": {
                                    "UberX": "Keet.UberCarTypes.UberX",
                                    "UberXL": "Keet.UberCarTypes.UberXl",
                                    "Comfort": "Keet.UberCarTypes.Comfort",
                                    "Share": "Keet.UberCarTypes.Share",
                                    "ComfortElectric": "Keet.UberCarTypes.ComfortElectric",
                                    "Green": "Keet.UberCarTypes.Green",
                                    "UberPet": "Keet.UberCarTypes.UberPet",
                                    "UberBlack": "Keet.UberCarTypes.UberBlack",
                                    "UberBlackSUV": "Keet.UberCarTypes.UberBlackSuv",
                                    "WAV": "Keet.UberCarTypes.Wav"
                                  },
                                  "templateString": "carType: $FERN_INPUT",
                                  "templateInput": {
                                    "location": "BODY",
                                    "path": "carType"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/uber:OrderRideResponse",
              "type_integrations/uber:UberCarTypes",
              "type_integrations/uber:UberAddress"
            ],
            "subpackages": [],
            "urlSlug": "uber",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/venmo": {
            "subpackageId": "subpackage_integrations/venmo",
            "parent": "subpackage_integrations",
            "name": "venmo",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/venmo.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/venmo"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/venmo/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Venmo session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.venmo.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-transactions",
                "method": "GET",
                "id": "getTransactions",
                "originalEndpointId": "endpoint_integrations/venmo.getTransactions",
                "name": "Get Transactions",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/venmo"
                    },
                    {
                      "type": "literal",
                      "value": "/transactions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/venmo:GetTransactionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/venmo/transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "transactions": {
                          "nextId": "string",
                          "stories": [
                            {
                              "amount": "string",
                              "avatar": "string",
                              "initials": "string",
                              "audience": "string",
                              "date": "string",
                              "id": "string",
                              "note": {
                                "content": "string"
                              },
                              "type": "string",
                              "attachments": [{}],
                              "title": {
                                "titleType": "string",
                                "payload": {
                                  "action": "string",
                                  "subType": "string"
                                },
                                "receiver": {
                                  "id": "string",
                                  "displayName": "string",
                                  "username": "string",
                                  "type": "string"
                                },
                                "sender": {
                                  "id": "string",
                                  "displayName": "string",
                                  "username": "string",
                                  "type": "string"
                                }
                              },
                              "mentions": {
                                "count": 0,
                                "data": {}
                              },
                              "externWalletStatus": "string",
                              "paymentId": "string",
                              "likes": {
                                "count": 0,
                                "userCommentedOrLiked": true
                              },
                              "comments": {
                                "count": 0,
                                "userCommentedOrLiked": true
                              },
                              "subType": "string"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/venmo/transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.venmo.getTransactions();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.venmo.getTransactions()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/venmo:GetTransactionsResponse",
              "type_integrations/venmo:StoryResponse",
              "type_integrations/venmo:Story",
              "type_integrations/venmo:Note",
              "type_integrations/venmo:Title",
              "type_integrations/venmo:Payload",
              "type_integrations/venmo:User",
              "type_integrations/venmo:Mentions",
              "type_integrations/venmo:Likes",
              "type_integrations/venmo:Comments"
            ],
            "subpackages": [],
            "urlSlug": "venmo",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/vin": {
            "subpackageId": "subpackage_integrations/vin",
            "parent": "subpackage_integrations",
            "name": "vin",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/vin.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a Vin session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-sales-appointment",
                "method": "POST",
                "id": "createSalesAppointment",
                "originalEndpointId": "endpoint_integrations/vin.createSalesAppointment",
                "name": "Create Sales Appointment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/sales/appointments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "leadId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "customerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "dealerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "description",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "endDate",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "startDate",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "assignedUserId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/vin:CreateVinAppointmentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "leadId": "string",
                        "customerId": "string",
                        "dealerId": "string",
                        "description": "string",
                        "endDate": "string",
                        "startDate": "string",
                        "assignedUserId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "leadId": "string",
                        "customerId": "string",
                        "dealerId": "string",
                        "description": "string",
                        "endDate": "string",
                        "startDate": "string",
                        "assignedUserId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "leadId": "string",
                        "customerId": "string",
                        "dealerId": "string",
                        "description": "string",
                        "endDate": "string",
                        "startDate": "string",
                        "assignedUserId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "leadId": "string",
                        "customerId": "string",
                        "dealerId": "string",
                        "description": "string",
                        "endDate": "string",
                        "startDate": "string",
                        "assignedUserId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "leadId": "string",
                        "customerId": "string",
                        "dealerId": "string",
                        "description": "string",
                        "endDate": "string",
                        "startDate": "string",
                        "assignedUserId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createSalesAppointment({\n    leadId: \"string\",\n    customerId: \"string\",\n    dealerId: \"string\",\n    description: \"string\",\n    endDate: \"string\",\n    startDate: \"string\",\n    assignedUserId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "leadId": "string",
                        "customerId": "string",
                        "dealerId": "string",
                        "description": "string",
                        "endDate": "string",
                        "startDate": "string",
                        "assignedUserId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a sales appointment",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.createSalesAppointment(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "leadId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "leadId"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "customerId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "customerId"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "dealerId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dealerId"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "description: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "description"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "endDate: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "endDate"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "startDate: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "startDate"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "assignedUserId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "assignedUserId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-appointments",
                "method": "GET",
                "id": "getAppointments",
                "originalEndpointId": "endpoint_integrations/vin.getAppointments",
                "name": "Get Appointments",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/sales/appointments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "date",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "dealerId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/vin:GetSalesAppointmentsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "appointments": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/sales/appointments",
                    "pathParameters": {},
                    "queryParameters": {
                      "date": "string",
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getAppointments({\n    date: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a list of sales appointments",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.getAppointments(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "date: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "date"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-users",
                "method": "GET",
                "id": "getUsers",
                "originalEndpointId": "endpoint_integrations/vin.getUsers",
                "name": "Get Users",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/users"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/vin:GetUsersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/users",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "users": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/users",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/users",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/users",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/users",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/users",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getUsers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a list of users and assigned users ids.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.getUsers()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-dealers",
                "method": "GET",
                "id": "getDealers",
                "originalEndpointId": "endpoint_integrations/vin.getDealers",
                "name": "Get Dealers",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/dealers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/vin:GetVinDealersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/dealers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "dealers": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/dealers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/dealers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/dealers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/dealers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/dealers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getDealers();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a list of dealers",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.getDealers()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "search-customers",
                "method": "GET",
                "id": "searchCustomers",
                "originalEndpointId": "endpoint_integrations/vin.searchCustomers",
                "name": "Search Customers",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/customers"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "firstName",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "lastName",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/vin:SearchVinCustomersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "customers": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {
                      "firstName": "string",
                      "lastName": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.searchCustomers({\n    firstName: \"string\",\n    lastName: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Search for customers",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.searchCustomers(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "firstName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "firstName"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "lastName: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "lastName"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-vehicles",
                "method": "GET",
                "id": "getVehicles",
                "originalEndpointId": "endpoint_integrations/vin.getVehicles",
                "name": "Get Vehicles",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/vehicles"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "dealerId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/vin:GetVinVehiclesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/vehicles",
                    "pathParameters": {},
                    "queryParameters": {
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "vehicles": {}
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/vehicles",
                    "pathParameters": {},
                    "queryParameters": {
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/vehicles",
                    "pathParameters": {},
                    "queryParameters": {
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/vehicles",
                    "pathParameters": {},
                    "queryParameters": {
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/vehicles",
                    "pathParameters": {},
                    "queryParameters": {
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/vehicles",
                    "pathParameters": {},
                    "queryParameters": {
                      "dealerId": "string"
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.getVehicles({\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a list of vehicles",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.getVehicles(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "dealerId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "dealerId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-customer",
                "method": "POST",
                "id": "createCustomer",
                "originalEndpointId": "endpoint_integrations/vin.createCustomer",
                "name": "Create Customer",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/vin"
                    },
                    {
                      "type": "literal",
                      "value": "/customers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "customer",
                        "valueType": {
                          "type": "id",
                          "value": "type_integrations/vin:VinCustomer"
                        }
                      },
                      {
                        "key": "dealerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/vin:CreateVinCustomerResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "homePhone": "string",
                          "workPhone": "string",
                          "cellPhone": "string",
                          "firstName": "string",
                          "middleName": "string",
                          "lastName": "string",
                          "email": "string",
                          "vehicleNumber": "string"
                        },
                        "dealerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "homePhone": "string",
                          "workPhone": "string",
                          "cellPhone": "string",
                          "firstName": "string",
                          "middleName": "string",
                          "lastName": "string",
                          "email": "string",
                          "vehicleNumber": "string"
                        },
                        "dealerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "homePhone": "string",
                          "workPhone": "string",
                          "cellPhone": "string",
                          "firstName": "string",
                          "middleName": "string",
                          "lastName": "string",
                          "email": "string",
                          "vehicleNumber": "string"
                        },
                        "dealerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "homePhone": "string",
                          "workPhone": "string",
                          "cellPhone": "string",
                          "firstName": "string",
                          "middleName": "string",
                          "lastName": "string",
                          "email": "string",
                          "vehicleNumber": "string"
                        },
                        "dealerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "homePhone": "string",
                          "workPhone": "string",
                          "cellPhone": "string",
                          "firstName": "string",
                          "middleName": "string",
                          "lastName": "string",
                          "email": "string",
                          "vehicleNumber": "string"
                        },
                        "dealerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/vin/customers",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.vin.createCustomer({\n    customer: {\n        homePhone: \"string\",\n        workPhone: \"string\",\n        cellPhone: \"string\",\n        firstName: \"string\",\n        middleName: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        vehicleNumber: \"string\"\n    },\n    dealerId: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "homePhone": "string",
                          "workPhone": "string",
                          "cellPhone": "string",
                          "firstName": "string",
                          "middleName": "string",
                          "lastName": "string",
                          "email": "string",
                          "vehicleNumber": "string"
                        },
                        "dealerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a customer",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.vin.createCustomer(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "customer: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "homePhone: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.homePhone"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "workPhone: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.workPhone"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "cellPhone: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.cellPhone"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "firstName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.firstName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "middleName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.middleName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "lastName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.lastName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "email: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.email"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "vehicleNumber: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "customer.vehicleNumber"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "dealerId: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "dealerId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/vin:CreateVinAppointmentResponse",
              "type_integrations/vin:GetSalesAppointmentsResponse",
              "type_integrations/vin:GetUsersResponse",
              "type_integrations/vin:GetVinDealersResponse",
              "type_integrations/vin:SearchVinCustomersResponse",
              "type_integrations/vin:GetVinVehiclesResponse",
              "type_integrations/vin:CreateVinCustomerResponse",
              "type_integrations/vin:VinCustomer"
            ],
            "subpackages": [],
            "urlSlug": "vin",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/whatsapp": {
            "subpackageId": "subpackage_integrations/whatsapp",
            "parent": "subpackage_integrations",
            "name": "whatsapp",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/whatsapp.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/whatsapp"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/whatsapp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a WhatsApp session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.whatsapp.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "send-message",
                "method": "POST",
                "id": "sendMessage",
                "originalEndpointId": "endpoint_integrations/whatsapp.sendMessage",
                "name": "Send Message",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/whatsapp"
                    },
                    {
                      "type": "literal",
                      "value": "/messages"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The phone number to send the message to.",
                        "key": "to",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "message",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/whatsapp:SendMessageResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/whatsapp/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.sendMessage({\n    to: \"string\",\n    message: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "to": "string",
                        "message": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Send a message to a WhatsApp number.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.whatsapp.sendMessage(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "to: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "to"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "message: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "message"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "change-status",
                "method": "POST",
                "id": "changeStatus",
                "originalEndpointId": "endpoint_integrations/whatsapp.changeStatus",
                "name": "Change Status",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/whatsapp"
                    },
                    {
                      "type": "literal",
                      "value": "/status"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "statusMessage",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/whatsapp:ChangeStatusResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/whatsapp/status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "statusMessage": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "statusMessage": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "statusMessage": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "statusMessage": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "statusMessage": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.changeStatus({\n    statusMessage: \"string\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "statusMessage": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Change the status on WhatsApp. Text only supported",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.whatsapp.changeStatus(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "statusMessage: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "statusMessage"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "read-messages",
                "method": "GET",
                "id": "readMessages",
                "originalEndpointId": "endpoint_integrations/whatsapp.readMessages",
                "name": "Read Messages",
                "path": {
                  "pathParameters": [
                    {
                      "key": "phoneNumber",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/whatsapp"
                    },
                    {
                      "type": "literal",
                      "value": "/messages/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "phoneNumber"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/whatsapp:ReadMessagesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/whatsapp/messages/:phoneNumber",
                    "pathParameters": {
                      "phoneNumber": ":phoneNumber"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "messages": [
                          {
                            "sender": "string",
                            "message": "string",
                            "timestamp": "string"
                          }
                        ],
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages/:phoneNumber",
                    "pathParameters": {
                      "phoneNumber": ":phoneNumber"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages/:phoneNumber",
                    "pathParameters": {
                      "phoneNumber": ":phoneNumber"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages/:phoneNumber",
                    "pathParameters": {
                      "phoneNumber": ":phoneNumber"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages/:phoneNumber",
                    "pathParameters": {
                      "phoneNumber": ":phoneNumber"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/whatsapp/messages/:phoneNumber",
                    "pathParameters": {
                      "phoneNumber": ":phoneNumber"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.whatsapp.readMessages(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Read messages from WhatsApp",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.whatsapp.readMessages(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": false,
                            "inputDelimiter": ",\n\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "PATH",
                                      "path": "phoneNumber"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/whatsapp:SendMessageResponse",
              "type_integrations/whatsapp:ChangeStatusResponse",
              "type_integrations/whatsapp:WhatsAppMessage",
              "type_integrations/whatsapp:ReadMessagesResponse"
            ],
            "subpackages": [],
            "urlSlug": "whatsapp",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_integrations/x": {
            "subpackageId": "subpackage_integrations/x",
            "parent": "subpackage_integrations",
            "name": "x",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-session",
                "method": "POST",
                "id": "createSession",
                "originalEndpointId": "endpoint_integrations/x.createSession",
                "name": "Create Session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/x"
                    },
                    {
                      "type": "literal",
                      "value": "/session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_common/types:CreateSessionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/x/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "wsUrl": "string",
                        "postSignInUrl": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.createSession();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a X session that you can connect to via playwright. See [this link](/overview/integrations/custom-automations) for more info.",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.x.createSession()",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": []
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-followers",
                "method": "GET",
                "id": "getFollowers",
                "originalEndpointId": "endpoint_integrations/x.getFollowers",
                "name": "Get Followers",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/x"
                    },
                    {
                      "type": "literal",
                      "value": "/followers"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/x:GetXFollowersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/x/followers",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "profiles": [
                          {
                            "id": "string",
                            "restId": "string",
                            "name": "string",
                            "profileUrl": "string",
                            "numFollowers": 0,
                            "numFollowing": 0,
                            "verified": true,
                            "userIsFollowing": true
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/followers",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/followers",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/followers",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/followers",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/followers",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowers({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the list of followers associated with this account",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.x.getFollowers(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-following-tweets",
                "method": "GET",
                "id": "getFollowingTweets",
                "originalEndpointId": "endpoint_integrations/x.getFollowingTweets",
                "name": "Get Following Tweets",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/x"
                    },
                    {
                      "type": "literal",
                      "value": "/posts/following"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_integrations/x:GetXFollowingTweetsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/x/posts/following",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "posts": [
                          {
                            "id": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/posts/following",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/posts/following",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/posts/following",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/posts/following",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/x/posts/following",
                    "pathParameters": {},
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.integrations.x.getFollowingTweets({\n    limit: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the latest tweets from the accounts you follow",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.integrations.x.getFollowingTweets(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "limit: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "QUERY",
                                      "path": "limit"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_integrations/x:XProfile",
              "type_integrations/x:GetXFollowersResponse",
              "type_integrations/x:XPost",
              "type_integrations/x:GetXFollowingTweetsResponse"
            ],
            "subpackages": [],
            "urlSlug": "x",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_link": {
            "subpackageId": "subpackage_link",
            "name": "link",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-link-token",
                "method": "POST",
                "id": "createLinkToken",
                "originalEndpointId": "endpoint_link.createLinkToken",
                "name": "Create Link Token",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/link"
                    },
                    {
                      "type": "literal",
                      "value": "/token"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "linkConfig",
                        "valueType": {
                          "type": "id",
                          "value": "type_common/types:LinkConfig"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_link:CreateLinkResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/link/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "linkConfig": {
                        "endUserId": "<userId>",
                        "integration": "Instagram",
                        "companyLogoUri": "https://example.com/logo.png"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "status": "ok",
                      "linkToken": "<token>"
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "linkConfig": {
                          "endUserId": "<userId>",
                          "integration": "Instagram",
                          "companyLogoUri": "https://example.com/logo.png"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "linkToken": "<token>"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/link/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "linkConfig": {
                          "endUserId": "string",
                          "integration": "Venmo"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/link/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "linkConfig": {
                          "endUserId": "string",
                          "integration": "Venmo"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/link/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "linkConfig": {
                          "endUserId": "string",
                          "integration": "Venmo"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/link/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "linkConfig": {
                          "endUserId": "string",
                          "integration": "Venmo"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/link/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient, Keet } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.link.createLinkToken({\n    linkConfig: {\n        endUserId: \"<userId>\",\n        integration: Keet.OfferedIntegrations.Instagram,\n        companyLogoUri: \"https://example.com/logo.png\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "linkConfig": {
                          "endUserId": "string",
                          "integration": "Venmo"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a link token that can be used to link accounts",
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.link.createLinkToken(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "linkConfig: {\n\t\t\t$FERN_INPUT\n\t\t}",
                                  "isOptional": true,
                                  "inputDelimiter": ",\n\t\t\t",
                                  "templateInputs": [
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "endUserId: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "linkConfig.endUserId"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "enum",
                                        "imports": [],
                                        "isOptional": true,
                                        "values": {
                                          "Venmo": "Keet.OfferedIntegrations.Venmo",
                                          "LinkedIn": "Keet.OfferedIntegrations.LinkedIn",
                                          "Amazon Business": "Keet.OfferedIntegrations.AmazonBusiness",
                                          "Amazon": "Keet.OfferedIntegrations.Amazon",
                                          "Uber": "Keet.OfferedIntegrations.Uber",
                                          "Instagram": "Keet.OfferedIntegrations.Instagram",
                                          "X": "Keet.OfferedIntegrations.X",
                                          "Facebook": "Keet.OfferedIntegrations.Facebook",
                                          "Amazon Seller": "Keet.OfferedIntegrations.AmazonSeller",
                                          "WhatsApp": "Keet.OfferedIntegrations.WhatsApp",
                                          "Jane": "Keet.OfferedIntegrations.Jane",
                                          "PPP": "Keet.OfferedIntegrations.Ppp",
                                          "ServiceBox": "Keet.OfferedIntegrations.ServiceBox",
                                          "DispatchMe": "Keet.OfferedIntegrations.DispatchMe",
                                          "Toast": "Keet.OfferedIntegrations.Toast",
                                          "Vin": "Keet.OfferedIntegrations.Vin"
                                        },
                                        "templateString": "integration: $FERN_INPUT",
                                        "templateInput": {
                                          "location": "BODY",
                                          "path": "linkConfig.integration"
                                        }
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "companyName: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "linkConfig.companyName"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "template",
                                      "value": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "companyLogoUri: $FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "BODY",
                                            "path": "linkConfig.companyLogoUri"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": ["type_link:CreateLinkResponse"],
            "subpackages": [],
            "urlSlug": "link",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_linked-accounts": {
            "subpackageId": "subpackage_linked-accounts",
            "name": "linked-accounts",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-linked-accounts",
                "method": "GET",
                "id": "getLinkedAccounts",
                "originalEndpointId": "endpoint_linked-accounts.getLinkedAccounts",
                "name": "Get Linked Accounts",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linked-accounts"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_linked-accounts:GetLinkedAccountsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linked-accounts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "linkedAccounts": [
                          {
                            "endUserId": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "integrations": [
                              {
                                "integration": "string",
                                "isAlive": true
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-linked-account",
                "method": "GET",
                "id": "getLinkedAccount",
                "originalEndpointId": "endpoint_linked-accounts.getLinkedAccount",
                "name": "Get Linked Account",
                "path": {
                  "pathParameters": [
                    {
                      "key": "linkedAccountId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linked-accounts"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "linkedAccountId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_linked-accounts:GetLinkedAccountResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "linkedAccount": {
                          "endUserId": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "integrations": [
                            {
                              "integration": "string",
                              "isAlive": true
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.linkedAccounts.getLinkedAccount(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": false,
                            "inputDelimiter": ",\n\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "PATH",
                                      "path": "linkedAccountId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-linked-account",
                "method": "DELETE",
                "id": "deleteLinkedAccount",
                "originalEndpointId": "endpoint_linked-accounts.deleteLinkedAccount",
                "name": "Delete Linked Account",
                "path": {
                  "pathParameters": [
                    {
                      "key": "linkedAccountId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linked-accounts"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "linkedAccountId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_linked-accounts:DeleteLinkedAccountResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/:linkedAccountId",
                    "pathParameters": {
                      "linkedAccountId": ":linkedAccountId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.deleteLinkedAccount(\"string\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.linkedAccounts.deleteLinkedAccount(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": false,
                            "inputDelimiter": ",\n\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "PATH",
                                      "path": "linkedAccountId"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.trykeet.com"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-token",
                "method": "POST",
                "id": "getToken",
                "originalEndpointId": "endpoint_linked-accounts.getToken",
                "name": "Get Token",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/v1"
                    },
                    {
                      "type": "literal",
                      "value": "/linked-accounts"
                    },
                    {
                      "type": "literal",
                      "value": "/token"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "publicToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_linked-accounts:GetTokenResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 401,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_common/errors:BaseError"
                      }
                    },
                    "statusCode": 500,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/v1/linked-accounts/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "publicToken": "..."
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "status": "ok",
                      "accountToken": "acc_..."
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "publicToken": "..."
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": "ok",
                        "accountToken": "acc_..."
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 401,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "publicToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "publicToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "publicToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "publicToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/v1/linked-accounts/token",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Account-Token": "string"
                    },
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.0.15",
                          "package": "@keet-tech/keet-node-client"
                        },
                        "client": "import { KeetClient } from \"@keet-tech/keet-node-client\";\n\nconst client = new KeetClient({ token: \"YOUR_TOKEN\", accountToken: \"YOUR_ACCOUNT_TOKEN\" });\nawait client.linkedAccounts.getToken({\n    publicToken: \"...\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "publicToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true,
                "snippetTemplates": {
                  "typescript": {
                    "type": "v1",
                    "functionInvocation": {
                      "type": "generic",
                      "imports": [],
                      "templateString": "await client.linkedAccounts.getToken(\n\t$FERN_INPUT\n)",
                      "isOptional": false,
                      "inputDelimiter": ",\n\t",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "publicToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "BODY",
                                      "path": "publicToken"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "clientInstantiation": {
                      "type": "generic",
                      "imports": ["import { KeetClient } from \"@keet-tech/keet-node-client\";"],
                      "templateString": "const client = new KeetClient($FERN_INPUT);",
                      "isOptional": false,
                      "inputDelimiter": ",",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{ $FERN_INPUT }",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "token: $FERN_INPUT",
                                  "isOptional": false,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "AUTH",
                                      "path": "token"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "accountToken: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "HEADERS",
                                      "path": "X-Account-Token"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "types": [
              "type_linked-accounts:GetLinkedAccountResponse",
              "type_linked-accounts:DeleteLinkedAccountResponse",
              "type_linked-accounts:GetLinkedAccountsResponse",
              "type_linked-accounts:GetTokenResponse"
            ],
            "subpackages": [],
            "urlSlug": "linked-accounts",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "bearerAuth",
          "tokenName": "token"
        },
        "hasMultipleBaseUrls": false,
        "globalHeaders": [
          {
            "description": "Account Token",
            "key": "X-Account-Token",
            "type": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "files": {
      "00bfa8f7-65f4-434f-b8d7-ac40252c7ca0": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//keet.docs.buildwithfern.com/2024-11-05T14%3A56%3A58.887Z/docs/assets/logo.png",
      "dcfb0b88-8beb-4f49-918e-5acfd22f15ab": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//keet.docs.buildwithfern.com/2024-11-05T14%3A56%3A58.887Z/docs/assets/favicon.ico",
      "52ff1783-66b8-4718-af7b-40cc2b7c5799": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//keet.docs.buildwithfern.com/2024-11-05T14%3A56%3A58.887Z/docs/assets/link15.svg"
    },
    "jsFiles": {},
    "filesV2": {
      "00bfa8f7-65f4-434f-b8d7-ac40252c7ca0": {
        "type": "image",
        "width": 397,
        "height": 397,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://keet.docs.buildwithfern.com/2024-11-05T14:56:58.887Z/docs/assets/logo.png"
      },
      "dcfb0b88-8beb-4f49-918e-5acfd22f15ab": {
        "type": "image",
        "width": 16,
        "height": 16,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://keet.docs.buildwithfern.com/2024-11-05T14:56:58.887Z/docs/assets/favicon.ico"
      },
      "52ff1783-66b8-4718-af7b-40cc2b7c5799": {
        "type": "image",
        "width": 400,
        "height": 499,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://keet.docs.buildwithfern.com/2024-11-05T14:56:58.887Z/docs/assets/link15.svg"
      }
    },
    "pages": {
      "docs/contents/intro.mdx": {
        "markdown": "### Welcome\n\nKeet provides APIs for any website. You can use us to connect your customers' accounts and perform actions on their behalf.\n\nCall API endpoints to request data from your users accounts on websites that dont normally offer them in code as simple as:\n\n```ts\nkeetClient.integrations.linkedIn.post(\"Hello LinkedIn!\")\n```\n\n## Supported Integrations\n\n<ul>\n  <li>`Instagram`</li>\n  <li>`LinkedIn`</li>\n  <li>`Amazon`</li>\n  <li>`Amazon Business`</li>\n  <li>`Amazon Seller`</li>\n  <li>`X`</li>\n  <li>`Venmo`</li>\n  <li>`Facebook`</li>\n  <li>`WhatsApp`</li>\n  <li>`Uber`</li>\n</ul>\n\n\n## Its quick and easy to get started\n\n<Steps>\n### Users connect their accounts using our link component\n<Frame background=\"subtle\" style=\"width: 100px; height: auto;\">\n  <img src=\"file:52ff1783-66b8-4718-af7b-40cc2b7c5799\" />\n</Frame>\n\n### Access your end users accounts and act on their behalf\n\nWe offer a variety of API abstractions to make it easy to interact with your users accounts. However, we also understand there are some integrations that require more niche interactions. In that case we give you the option to connect via playwright and write your own automations.\n\n<Cards>\n  <Card href=\"/overview/integrations/using-our-abstractions\" title=\"Learn more about our API abstractions\" />\n  <Card href=\"/overview/integrations/custom-automations\" title=\"Learn more about writing your own automations\" />\n</Cards>\n\n</Steps>\n## Why does this exist?\n\nBuilding automations on sites with authenticated sessions is challenging.\n\nImagine if you could easily...\n\n1. Get your users health data from their insurance provider.\n2. Book Ubers based on your users calendar and location\n3. Track activity on properties for future homeowners on Redfin\n\n## How are we different\n\nThere are other solutions out there. What do we do differently...\n\n1. No chrome extension necessary for your users to authenticate\n2. We maintain your users authenticated sessions\n3. Many of our API abstractions don’t rely on playwright or browser automations.\n"
      },
      "docs/contents/quick-start.mdx": {
        "markdown": "## Add Keet Link to Your Product\n\n<Tip>\n  If you get stuck at any point, email for help at zack@trykeet.com. If you don't get a response in 10 minutes, we'll\n  buy you coffee.\n</Tip>\n\nKeet link uses a series of token exchanges to authenticate your users accounts.\n\n{\" \"}\n\n&nbsp;&nbsp;&nbsp;&nbsp;**Step 1**: Get a `linkToken` so that you can initialize a link session for your users\n\n&nbsp;&nbsp;&nbsp;&nbsp;**Step 2**: Make Keet Link appear in your frontend using the `linkToken`\n\n&nbsp;&nbsp;&nbsp;&nbsp;**Step 3**: Swap the `publicToken`, returned by `keetLink` for an `accountToken`\n\n&nbsp;&nbsp;&nbsp;&nbsp;**Step 4**: Use the `accountToken` for future requests to authenticated sessions.\n\n### Step 1: Get a Link Token (Server side)\n\nIn your backend, set up a POST request to initialize a Keet Link session and get a `linkToken` from this URL: `https://api.trykeet.com/v1/link/token`\n\n<Accordion title=\"Supported Integrations\">\n  <ul>\n    <li>`Instagram`</li>\n    <li>`LinkedIn`</li>\n    <li>`Amazon`</li>\n    <li>`Amazon Business`</li>\n    <li>`Amazon Seller`</li>\n    <li>`X`</li>\n    <li>`Venmo`</li>\n    <li>`Facebook`</li>\n    <li>`WhatsApp`</li>\n    <li>`Uber`</li>\n  </ul>\n  \n</Accordion>\n\n<EndpointRequestSnippet endpoint=\"POST v1/link/token\" />\n<EndpointResponseSnippet endpoint=\"POST v1/link/token\" />\n\nYou can now pass this public `linkToken` back to your client to initialize the link component.\n\n### Step 2: Make the Keet Link Appear (Client side)\n\n<Tabs>\n  <Tab title=\"React\">\n    1. Install the link sdk: `npm install @keet-tech/react-keet-link`\n\n    2. Use the `linkToken` from **[Step 1](#step-1-get-a-link-token)** to open Keet link\n    ```tsx\n      import { useKeetLink } from \"@keet-tech/react-keet-link\"\n      import { useEffect, useState } from \"react\"\n\n      export default function App() {\n        const onSuccess = (publicToken: string) => {\n          /* send a request to your backend\n          to exchange this for an account token */\n        }\n\n        const onValidationError = (errors: any) => {\n          console.error(\"An error from Keet Link occured: \", errors)\n        }\n\n        const { open, isReady } = useKeetLink({\n          linkToken: \"ADD YOUR LINK TOKEN -- SEE STEP 1\",\n          onSuccess,\n          onValidationError\n        })\n\n\n\n        return (\n          <button disabled={!isReady} onClick={open}>Open Link</button>\n        )\n      }\n\n      export default App;\n      ```\n\n  </Tab>\n  <Tab title=\"HTML/JS\">\n    ```html\n    <button id=\"open-link-button\">Start linking</button>\n    <script src=\"https://cdn.trykeet.com/initialize.js\"></script>\n    <script type=\"text/javascript\">\n      const button = document.getElementById(\"open-link-button\");\n      button.disabled = true;\n\n    function onSuccess(public_token) {\n    // Send public_token to server (Step 3)\n    }\n\n    KeetLink.initialize({\n      // Replace ADD_GENERATED_LINK_TOKEN with the token retrieved from your backend (Step 1)\n      linkToken: \"ADD_GENERATED_LINK_TOKEN\",\n      onSuccess: (public_token) => onSuccess(public_token),\n      onReady: () => (button.disabled = false),\n      });\n\n      button.addEventListener(\"click\", function () {\n      KeetLink.openLink();\n    });\n    </script>\n      ```\n\n  </Tab>\n  <Tab title=\"React Native (Mobile)\">\n    1. Install the link sdk: <br/> `npm install --save @keet-tech/react-native-keet-link react-native-svg`\n\n    2.  Use the `linkToken` from **[Step 1](#step-1-get-a-link-token)** to open Keet link:\n      ```tsx\n      import KeetLink, { LinkError } from \"@keet-tech/react-native-keet-link\"\n\n      export default function App() {\n        const onSuccess = (publicToken: string) => {\n          /* send a request to your backend\n          to exchange this for an account token */\n        }\n\n        const onError = (errors: LinkError[]) => {\n          console.error(\"An error from Keet Link occured: \", errors)\n        }\n\n        return (\n          <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n            <KeetLink linkToken={linkToken} onSuccess={onSuccess} onError={onError}>\n              <Text style={{ color: \"blue\" }}>Open Link</Text>\n            </KeetLink>\n          </View>\n        )\n      }\n        ```\n\n  </Tab>\n\n</Tabs>\n\n### Step 3: Swap `publicToken` for `accountToken` (Server Side)\n\nIn your backend, create a request to exchange the short-lived `publicToken` for a permanent `accountToken`.\n\n<EndpointRequestSnippet endpoint=\"POST v1/linked-accounts/token\" />\n<EndpointResponseSnippet endpoint=\"POST v1/linked-accounts/token\" />\n\n<Note>\n  Store this account token someplace secure. It is used to make all requests to this end users authenticated sessions.\n</Note>\n\n### You're done!\n\nUse the `accountToken` to make all future requests on behalf of the user to every integration they use.\n\n## Check out how to use your integrations\n\n<Cards center>\n  <Card title=\"Integration Overview\" href=\"/overview/quick-start\" />\n</Cards>\n"
      },
      "docs/contents/integration-overview.mdx": {
        "markdown": "Integrations with Keet are designed to be super simple for you to link a single end-user to many integrations. Every end-user can have multiple Keet integrations and still has the same `accountToken`. <br />\n\nYou should store your `accountToken` in your database and use it to link your end-users to their Keet integrations. <br />\n\n## Making requests to integrations\n\nAny time you need to make a request to an integration associated with a user you will need to pass the `accountToken` in the header of your request by setting `X-Account-Token`. <br />\n\n**Example** <br />\n\n<EndpointRequestSnippet endpoint=\"GET v1/venmo/transactions\" />\n"
      },
      "docs/contents/integration-sessions.mdx": {
        "markdown": "### You can use playwright or puppeteer to take actions on your users behalf\n\nIf you want to write your own automations using playwright to act on your users behalf you can do that by connecting to the playwright instance over CDP.\n\n<Note>\n  Venmo is used here as an example but every integration offers the endpoint `POST: /session` to get a websocket url to\n  connect via playwright or puppeteer.\n</Note>\n\n#### Get a websocket url to connect to playwright\n\n<EndpointRequestSnippet endpoint=\"POST v1/venmo/session\" />\n<EndpointResponseSnippet endpoint=\"POST v1/venmo/session\" />\n\nYou can then use this `wsUrl` to connect to the playwright instance over CDP.\n\n#### Connect to a playwright instance\n\n```ts\nconst browser = await chromium.connectOverCDP(wsUrl)\nconst context = browser.contexts()[0]\nconst page = await context.newPage()\nawait page.goto(\"https://accounts.venmo.com\")\n// Your other automations here...\nawait browser.close()\n```\n"
      },
      "docs/contents/integration-api-abstractions.mdx": {
        "markdown": "Using our API abstractions is extremely simple. Just include the `accountToken` you received from the following the [Link flow](/overview/quick-start) in the `X-Account-Token` header of your requests.\n\n#### Example\n\nThis is an example request to get recent orders from an Amazon Business account:\n\n<EndpointRequestSnippet endpoint=\"GET v1/amazon-business/orders\" />\n<EndpointResponseSnippet endpoint=\"POST v1/amazon-business/orders\" />\n\n## Check out more of our built in abstractions\n\n<Cards>\n  <Card title=\"Integration Reference\" href=\"/api-reference/api-reference/integrations\" />\n</Cards>\n"
      }
    },
    "search": {
      "type": "singleAlgoliaIndex",
      "value": {
        "type": "unversioned",
        "indexSegment": {
          "id": "seg_keet.docs.buildwithfern.com_35998096-316b-4f63-9e8d-c67fae3d1b61",
          "searchApiKey": "YjIyMDhhN2EzNWJhOTdiZjRmNmFmYmNmYmNiMDhkMTI0NGVmOTliMzM0OWUwYzIxZjI2OGM2YjY3YWZjMzRjNmZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfa2VldC5kb2NzLmJ1aWxkd2l0aGZlcm4uY29tXzM1OTk4MDk2LTMxNmItNGY2My05ZThkLWM2N2ZhZTNkMWI2MSZ2YWxpZFVudGlsPTE3MzA4NDkyMjg="
        }
      }
    },
    "id": "docs_definition_282f61f5-9c82-4236-8d62-da9840a0704d"
  },
  "lightModeEnabled": true
}
