{
  "baseUrl": {
    "domain": "flatfile.docs.buildwithfern.com"
  },
  "definition": {
    "algoliaSearchIndex": "flatfile.docs.buildwithfern.com_73191214-7fef-460e-ba3c-fc1ea86eaec7",
    "config": {
      "navigation": {
        "items": [
          {
            "type": "section",
            "title": "Overview",
            "urlSlug": "overview",
            "collapsed": false,
            "hidden": false,
            "items": [
              {
                "type": "page",
                "id": "mdx/welcome.mdx",
                "title": "Welcome",
                "icon": "fa-regular fa-home",
                "urlSlug": "welcome",
                "hidden": false
              },
              {
                "type": "page",
                "id": "mdx/auth.mdx",
                "title": "Authentication",
                "icon": "fa-regular fa-key",
                "urlSlug": "auth",
                "hidden": false
              },
              {
                "type": "page",
                "id": "mdx/using-environments.mdx",
                "title": "Using Environments",
                "icon": "fa-regular fa-cogs",
                "urlSlug": "using-environments",
                "hidden": false
              }
            ],
            "skipUrlSlug": false
          },
          {
            "type": "apiV2",
            "node": {
              "id": "71e56795-ad60-4fec-aa7b-ecd860b41022",
              "type": "apiReference",
              "title": "API Reference",
              "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
              "paginated": false,
              "slug": "api-reference",
              "hideTitle": false,
              "showErrors": true,
              "children": [
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_accounts",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_accounts.getCurrent",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_accounts.getCurrent",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get the current account",
                      "slug": "api-reference/accounts/get-current"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_accounts.updateCurrent",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_accounts.updateCurrent",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update the current account",
                      "slug": "api-reference/accounts/update-current"
                    }
                  ],
                  "title": "Accounts",
                  "slug": "api-reference/accounts",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/accounts/get-current"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_actions",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_actions.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_actions.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create an action",
                      "slug": "api-reference/actions/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_actions.bulkCreate",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_actions.bulkCreate",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create several actions",
                      "slug": "api-reference/actions/bulk-create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_actions.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_actions.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get an action",
                      "slug": "api-reference/actions/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_actions.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_actions.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update an action",
                      "slug": "api-reference/actions/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_actions.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_actions.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete an action",
                      "slug": "api-reference/actions/delete"
                    }
                  ],
                  "title": "Actions",
                  "slug": "api-reference/actions",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/actions/create"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_agents",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List agents",
                      "slug": "api-reference/agents/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_agents.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create an agent",
                      "slug": "api-reference/agents/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get an agent",
                      "slug": "api-reference/agents/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.listVersions",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.listVersions",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List agent versions for an agent",
                      "slug": "api-reference/agents/list-versions"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.revert",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.revert",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Revert to a specific agent version",
                      "slug": "api-reference/agents/revert"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.listAgentRoles",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.listAgentRoles",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List Agent Roles",
                      "slug": "api-reference/agents/list-agent-roles"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.assignAgentRole",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_agents.assignAgentRole",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Assign Role to Agent",
                      "slug": "api-reference/agents/assign-agent-role"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.deleteAgentRole",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_agents.deleteAgentRole",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Remove Role from Agent",
                      "slug": "api-reference/agents/delete-agent-role"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.getAgentLogs",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.getAgentLogs",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get logs for an agent",
                      "slug": "api-reference/agents/get-agent-logs"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.getAgentLog",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.getAgentLog",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get an agent log",
                      "slug": "api-reference/agents/get-agent-log"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.getEnvironmentAgentLogs",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.getEnvironmentAgentLogs",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get all agent logs in your environment",
                      "slug": "api-reference/agents/get-environment-agent-logs"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.getEnvironmentAgentExecutions",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_agents.getEnvironmentAgentExecutions",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get all executions in your environment",
                      "slug": "api-reference/agents/get-environment-agent-executions"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_agents.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_agents.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete an agent",
                      "slug": "api-reference/agents/delete"
                    }
                  ],
                  "title": "Agents",
                  "slug": "api-reference/agents",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/agents/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_apps",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_apps.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List apps",
                      "slug": "api-reference/apps/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_apps.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get an app",
                      "slug": "api-reference/apps/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_apps.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update an app",
                      "slug": "api-reference/apps/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_apps.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create an app",
                      "slug": "api-reference/apps/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_apps.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete an app",
                      "slug": "api-reference/apps/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.getConstraints",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_apps.getConstraints",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get constraints",
                      "slug": "api-reference/apps/get-constraints"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.createConstraint",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_apps.createConstraint",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create constraint",
                      "slug": "api-reference/apps/create-constraint"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.getConstraintById",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_apps.getConstraintById",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get constraint by ID",
                      "slug": "api-reference/apps/get-constraint-by-id"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.getConstraintVersions",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_apps.getConstraintVersions",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get constraint versions",
                      "slug": "api-reference/apps/get-constraint-versions"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.getConstraintVersion",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_apps.getConstraintVersion",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get constraint version",
                      "slug": "api-reference/apps/get-constraint-version"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.updateConstraint",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_apps.updateConstraint",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update constraint",
                      "slug": "api-reference/apps/update-constraint"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_apps.deleteConstraint",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_apps.deleteConstraint",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete constraint",
                      "slug": "api-reference/apps/delete-constraint"
                    }
                  ],
                  "title": "Apps",
                  "slug": "api-reference/apps",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/apps/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_assistant",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_assistant.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_assistant.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List prompts",
                      "slug": "api-reference/assistant/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_assistant.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_assistant.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a prompt",
                      "slug": "api-reference/assistant/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_assistant.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_assistant.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a prompt",
                      "slug": "api-reference/assistant/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_assistant.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_assistant.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a prompt",
                      "slug": "api-reference/assistant/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_assistant.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_assistant.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a prompts",
                      "slug": "api-reference/assistant/delete"
                    }
                  ],
                  "title": "Assistant",
                  "slug": "api-reference/assistant",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/assistant/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_commits",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_commits.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_commits.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a commit version",
                      "slug": "api-reference/commits/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_commits.complete",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_commits.complete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Complete a commit version",
                      "slug": "api-reference/commits/complete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_commits.replay",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_commits.replay",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Replay a commit version",
                      "slug": "api-reference/commits/replay"
                    }
                  ],
                  "title": "Commits",
                  "slug": "api-reference/commits",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/commits/get"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_data-retention-policies",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_data-retention-policies.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_data-retention-policies.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List data retention policies",
                      "slug": "api-reference/data-retention-policies/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_data-retention-policies.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_data-retention-policies.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a data retention policy",
                      "slug": "api-reference/data-retention-policies/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_data-retention-policies.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_data-retention-policies.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a data retention policy",
                      "slug": "api-reference/data-retention-policies/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_data-retention-policies.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_data-retention-policies.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a data retention policy",
                      "slug": "api-reference/data-retention-policies/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_data-retention-policies.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_data-retention-policies.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a data retention policy",
                      "slug": "api-reference/data-retention-policies/delete"
                    }
                  ],
                  "title": "Data Retention Policies",
                  "slug": "api-reference/data-retention-policies",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/data-retention-policies/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_documents",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_documents.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_documents.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List documents",
                      "slug": "api-reference/documents/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_documents.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_documents.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a document",
                      "slug": "api-reference/documents/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_documents.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_documents.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a document",
                      "slug": "api-reference/documents/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_documents.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_documents.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a document",
                      "slug": "api-reference/documents/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_documents.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_documents.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a document",
                      "slug": "api-reference/documents/delete"
                    }
                  ],
                  "title": "Documents",
                  "slug": "api-reference/documents",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/documents/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_entitlements",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_entitlements.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_entitlements.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List entitlements",
                      "slug": "api-reference/entitlements/list"
                    }
                  ],
                  "title": "Entitlements",
                  "slug": "api-reference/entitlements",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/entitlements/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_environments",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_environments.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_environments.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List environments",
                      "slug": "api-reference/environments/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_environments.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_environments.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create an environment",
                      "slug": "api-reference/environments/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_environments.getEnvironmentEventToken",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_environments.getEnvironmentEventToken",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get environment subscription credentials",
                      "slug": "api-reference/environments/get-environment-event-token"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_environments.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_environments.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get an environment",
                      "slug": "api-reference/environments/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_environments.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_environments.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update an environment",
                      "slug": "api-reference/environments/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_environments.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_environments.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete an environment",
                      "slug": "api-reference/environments/delete"
                    }
                  ],
                  "title": "Environments",
                  "slug": "api-reference/environments",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/environments/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_events",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_events.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_events.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List events",
                      "slug": "api-reference/events/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_events.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_events.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create an event",
                      "slug": "api-reference/events/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_events.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_events.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get an event",
                      "slug": "api-reference/events/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_events.ack",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_events.ack",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Acknowledge an event",
                      "slug": "api-reference/events/ack"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_events.getEventToken",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_events.getEventToken",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get subscription credentials",
                      "slug": "api-reference/events/get-event-token"
                    }
                  ],
                  "title": "Events",
                  "slug": "api-reference/events",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/events/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_files",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_files.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_files.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List files",
                      "slug": "api-reference/files/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_files.upload",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_files.upload",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Upload a file",
                      "slug": "api-reference/files/upload"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_files.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_files.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a file",
                      "slug": "api-reference/files/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_files.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_files.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a file",
                      "slug": "api-reference/files/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_files.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_files.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a file",
                      "slug": "api-reference/files/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_files.download",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_files.download",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Download a file",
                      "slug": "api-reference/files/download"
                    }
                  ],
                  "title": "Files",
                  "slug": "api-reference/files",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/files/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_guests",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_guests.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List guests",
                      "slug": "api-reference/guests/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_guests.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a guest",
                      "slug": "api-reference/guests/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_guests.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a guest",
                      "slug": "api-reference/guests/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_guests.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a guest",
                      "slug": "api-reference/guests/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_guests.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a guest",
                      "slug": "api-reference/guests/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.getGuestToken",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_guests.getGuestToken",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get guest token",
                      "slug": "api-reference/guests/get-guest-token"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.listGuestRoles",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_guests.listGuestRoles",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List Guest Roles",
                      "slug": "api-reference/guests/list-guest-roles"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.assignGuestRole",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_guests.assignGuestRole",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Assign Role to Guest",
                      "slug": "api-reference/guests/assign-guest-role"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.deleteGuestRole",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_guests.deleteGuestRole",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Remove Role from Guest",
                      "slug": "api-reference/guests/delete-guest-role"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_guests.invite",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_guests.invite",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Invite guests",
                      "slug": "api-reference/guests/invite"
                    }
                  ],
                  "title": "Guests",
                  "slug": "api-reference/guests",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/guests/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_jobs",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_jobs.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List jobs",
                      "slug": "api-reference/jobs/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a job",
                      "slug": "api-reference/jobs/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_jobs.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a job",
                      "slug": "api-reference/jobs/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_jobs.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a job",
                      "slug": "api-reference/jobs/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_jobs.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a job",
                      "slug": "api-reference/jobs/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.execute",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.execute",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Execute a job",
                      "slug": "api-reference/jobs/execute"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.getExecutionPlan",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_jobs.getExecutionPlan",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a job's execution plan",
                      "slug": "api-reference/jobs/get-execution-plan"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.updateExecutionPlan",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_jobs.updateExecutionPlan",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Replace a job's plan",
                      "slug": "api-reference/jobs/update-execution-plan"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.updateExecutionPlanFields",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_jobs.updateExecutionPlanFields",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a job's plan",
                      "slug": "api-reference/jobs/update-execution-plan-fields"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.ack",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.ack",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Acknowledge a job",
                      "slug": "api-reference/jobs/ack"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.ackOutcome",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.ackOutcome",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Acknowledge a job outcome",
                      "slug": "api-reference/jobs/ack-outcome"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.complete",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.complete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Complete a job",
                      "slug": "api-reference/jobs/complete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.fail",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.fail",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Fail a job",
                      "slug": "api-reference/jobs/fail"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.cancel",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.cancel",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Cancel a job",
                      "slug": "api-reference/jobs/cancel"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.retry",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.retry",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Retry a failed job",
                      "slug": "api-reference/jobs/retry"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.previewMutation",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.previewMutation",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Preview a mutation",
                      "slug": "api-reference/jobs/preview-mutation"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_jobs.split",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_jobs.split",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Split a job",
                      "slug": "api-reference/jobs/split"
                    }
                  ],
                  "title": "Jobs",
                  "slug": "api-reference/jobs",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/jobs/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_mapping",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.createMappingProgram",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_mapping.createMappingProgram",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a mapping between two schemas",
                      "slug": "api-reference/mapping/create-mapping-program"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.deleteAllHistoryForUser",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_mapping.deleteAllHistoryForUser",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete all history for the authenticated user",
                      "slug": "api-reference/mapping/delete-all-history-for-user"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.listMappingPrograms",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_mapping.listMappingPrograms",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List mapping programs",
                      "slug": "api-reference/mapping/list-mapping-programs"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.getMappingProgram",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_mapping.getMappingProgram",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a mapping program",
                      "slug": "api-reference/mapping/get-mapping-program"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.updateMappingProgram",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_mapping.updateMappingProgram",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a mapping program",
                      "slug": "api-reference/mapping/update-mapping-program"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.deleteMappingProgram",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_mapping.deleteMappingProgram",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a mapping program",
                      "slug": "api-reference/mapping/delete-mapping-program"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.createRules",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_mapping.createRules",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Add mapping rules to a program",
                      "slug": "api-reference/mapping/create-rules"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.deleteMultipleRules",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_mapping.deleteMultipleRules",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete multiple mapping rules",
                      "slug": "api-reference/mapping/delete-multiple-rules"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.listRules",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_mapping.listRules",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List mapping rules",
                      "slug": "api-reference/mapping/list-rules"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.getRule",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_mapping.getRule",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a mapping rule",
                      "slug": "api-reference/mapping/get-rule"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.updateRule",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_mapping.updateRule",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a mapping rule",
                      "slug": "api-reference/mapping/update-rule"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.updateRules",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_mapping.updateRules",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a list of mapping rules",
                      "slug": "api-reference/mapping/update-rules"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_mapping.deleteRule",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_mapping.deleteRule",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a mapping rule",
                      "slug": "api-reference/mapping/delete-rule"
                    }
                  ],
                  "title": "Mapping",
                  "slug": "api-reference/mapping",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/mapping/create-mapping-program"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_records",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_records.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_records.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get records",
                      "slug": "api-reference/records/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_records.update",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_records.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update records",
                      "slug": "api-reference/records/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_records.insert",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_records.insert",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Insert records",
                      "slug": "api-reference/records/insert"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_records.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_records.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete records",
                      "slug": "api-reference/records/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_records.findAndReplace",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_records.findAndReplace",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Finds and replaces field values matching search criteria\n",
                      "slug": "api-reference/records/find-and-replace"
                    }
                  ],
                  "title": "Records",
                  "slug": "api-reference/records",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/records/get"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_roles",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_roles.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_roles.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List roles",
                      "slug": "api-reference/roles/list"
                    }
                  ],
                  "title": "Roles",
                  "slug": "api-reference/roles",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/roles/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_secrets",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_secrets.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_secrets.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List secrets",
                      "slug": "api-reference/secrets/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_secrets.upsert",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_secrets.upsert",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Upsert a Secret",
                      "slug": "api-reference/secrets/upsert"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_secrets.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_secrets.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a secret by it's Id",
                      "slug": "api-reference/secrets/delete"
                    }
                  ],
                  "title": "Secrets",
                  "slug": "api-reference/secrets",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/secrets/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_sheets",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_sheets.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List sheets",
                      "slug": "api-reference/sheets/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_sheets.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a sheet",
                      "slug": "api-reference/sheets/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_sheets.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a sheet",
                      "slug": "api-reference/sheets/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.validate",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_sheets.validate",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Validate a sheet",
                      "slug": "api-reference/sheets/validate"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.getRecordsAsCsv",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_sheets.getRecordsAsCsv",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Download records as a CSV file",
                      "slug": "api-reference/sheets/get-records-as-csv"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.getRecordCounts",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_sheets.getRecordCounts",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get record counts",
                      "slug": "api-reference/sheets/get-record-counts"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.getSheetCommits",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_sheets.getSheetCommits",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get commit versions for a sheet",
                      "slug": "api-reference/sheets/get-sheet-commits"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.lockSheet",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_sheets.lockSheet",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Lock a sheet",
                      "slug": "api-reference/sheets/lock-sheet"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.unlockSheet",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_sheets.unlockSheet",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Unlock a sheet",
                      "slug": "api-reference/sheets/unlock-sheet"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.getCellValues",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_sheets.getCellValues",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get record cells by field",
                      "slug": "api-reference/sheets/get-cell-values"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_sheets.updateSheet",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_sheets.updateSheet",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a sheet",
                      "slug": "api-reference/sheets/update-sheet"
                    }
                  ],
                  "title": "Sheets",
                  "slug": "api-reference/sheets",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/sheets/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_snapshots",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_snapshots.createSnapshot",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_snapshots.createSnapshot",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a snapshot",
                      "slug": "api-reference/snapshots/create-snapshot"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_snapshots.listSnapshots",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_snapshots.listSnapshots",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List snapshots",
                      "slug": "api-reference/snapshots/list-snapshots"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_snapshots.getSnapshot",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_snapshots.getSnapshot",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a snapshot",
                      "slug": "api-reference/snapshots/get-snapshot"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_snapshots.deleteSnapshot",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_snapshots.deleteSnapshot",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a snapshot",
                      "slug": "api-reference/snapshots/delete-snapshot"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_snapshots.restoreSnapshot",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_snapshots.restoreSnapshot",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Restore a snapshot",
                      "slug": "api-reference/snapshots/restore-snapshot"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_snapshots.getSnapshotRecords",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_snapshots.getSnapshotRecords",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get records from a snapshot",
                      "slug": "api-reference/snapshots/get-snapshot-records"
                    }
                  ],
                  "title": "Snapshots",
                  "slug": "api-reference/snapshots",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/snapshots/create-snapshot"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_spaces",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_spaces.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List spaces",
                      "slug": "api-reference/spaces/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_spaces.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a space",
                      "slug": "api-reference/spaces/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_spaces.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a space",
                      "slug": "api-reference/spaces/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_spaces.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a space",
                      "slug": "api-reference/spaces/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.bulkDelete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_spaces.bulkDelete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete spaces",
                      "slug": "api-reference/spaces/bulk-delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_spaces.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a space",
                      "slug": "api-reference/spaces/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.archiveSpace",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_spaces.archiveSpace",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Archives a space",
                      "slug": "api-reference/spaces/archive-space"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_spaces.unarchiveSpace",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_spaces.unarchiveSpace",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Unarchives a space",
                      "slug": "api-reference/spaces/unarchive-space"
                    }
                  ],
                  "title": "Spaces",
                  "slug": "api-reference/spaces",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/spaces/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_users",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_users.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List users",
                      "slug": "api-reference/users/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.createAndInvite",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_users.createAndInvite",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create and Invite User",
                      "slug": "api-reference/users/create-and-invite"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.resendInvite",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_users.resendInvite",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Resend User Invite",
                      "slug": "api-reference/users/resend-invite"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_users.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a user",
                      "slug": "api-reference/users/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_users.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a user",
                      "slug": "api-reference/users/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_users.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a user",
                      "slug": "api-reference/users/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.listUserRoles",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_users.listUserRoles",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List User Roles",
                      "slug": "api-reference/users/list-user-roles"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.assignUserRole",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_users.assignUserRole",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Assign Role to User",
                      "slug": "api-reference/users/assign-user-role"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_users.deleteUserRole",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_users.deleteUserRole",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Remove Role from User",
                      "slug": "api-reference/users/delete-user-role"
                    }
                  ],
                  "title": "Users",
                  "slug": "api-reference/users",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/users/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_versions",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_versions.createId",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_versions.createId",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "availability": "deprecated",
                      "isResponseStream": false,
                      "title": "Create Id",
                      "slug": "api-reference/versions/create-id"
                    }
                  ],
                  "title": "Versions",
                  "slug": "api-reference/versions",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/versions/create-id"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_views",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_views.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_views.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List views by Sheet",
                      "slug": "api-reference/views/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_views.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_views.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a view",
                      "slug": "api-reference/views/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_views.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_views.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a view",
                      "slug": "api-reference/views/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_views.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_views.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a view",
                      "slug": "api-reference/views/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_views.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_views.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a view",
                      "slug": "api-reference/views/delete"
                    }
                  ],
                  "title": "Views",
                  "slug": "api-reference/views",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/views/list"
                },
                {
                  "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:subpackage_workbooks",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_workbooks.list",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_workbooks.list",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "List workbooks",
                      "slug": "api-reference/workbooks/list"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_workbooks.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_workbooks.create",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Create a workbook",
                      "slug": "api-reference/workbooks/create"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_workbooks.get",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_workbooks.get",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get a workbook",
                      "slug": "api-reference/workbooks/get"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_workbooks.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_workbooks.delete",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Delete a workbook",
                      "slug": "api-reference/workbooks/delete"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_workbooks.update",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_workbooks.update",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Update a workbook",
                      "slug": "api-reference/workbooks/update"
                    },
                    {
                      "id": "71e56795-ad60-4fec-aa7b-ecd860b41022:endpoint_workbooks.getWorkbookCommits",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_workbooks.getWorkbookCommits",
                      "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                      "isResponseStream": false,
                      "title": "Get commits for a workbook",
                      "slug": "api-reference/workbooks/get-workbook-commits"
                    }
                  ],
                  "title": "Workbooks",
                  "slug": "api-reference/workbooks",
                  "apiDefinitionId": "71e56795-ad60-4fec-aa7b-ecd860b41022",
                  "pointsTo": "api-reference/workbooks/list"
                }
              ],
              "pointsTo": "api-reference/accounts/get-current"
            }
          }
        ]
      },
      "logoHeight": 28,
      "colorsV3": {
        "type": "darkAndLight",
        "light": {
          "accentPrimary": {
            "r": 0,
            "g": 0,
            "b": 0,
            "a": 1
          },
          "logo": "7de9c471-d3d3-4427-9f20-e345a6b7be63",
          "background": {
            "type": "solid",
            "r": 255,
            "g": 255,
            "b": 255,
            "a": 1
          },
          "headerBackground": {
            "r": 255,
            "g": 255,
            "b": 255,
            "a": 1
          }
        },
        "dark": {
          "accentPrimary": {
            "r": 255,
            "g": 255,
            "b": 255,
            "a": 1
          },
          "logo": "b16d0953-36b4-43ea-aec8-9bf946892224",
          "background": {
            "type": "solid",
            "r": 0,
            "g": 0,
            "b": 0,
            "a": 1
          },
          "headerBackground": {
            "r": 0,
            "g": 0,
            "b": 0,
            "a": 1
          }
        }
      },
      "navbarLinks": [
        {
          "type": "secondary",
          "text": "Community",
          "url": "https://flatfile.com/join-slack/"
        },
        {
          "type": "secondary",
          "text": "Create Account",
          "url": "https://platform.flatfile.com/account/sign-up"
        },
        {
          "type": "filled",
          "text": "Sign in",
          "url": "https://platform.flatfile.com/oauth/dashboard"
        }
      ],
      "title": "Flatfile | API Reference",
      "favicon": "5d90cadd-815b-4718-9f2a-275faa561cd7",
      "typographyV2": {
        "headingsFont": {
          "type": "custom",
          "name": "Friends-Black",
          "variants": [
            {
              "fontFile": "8d4d4eb7-c3f5-4c1d-a191-54f0aef63f98"
            }
          ]
        },
        "bodyFont": {
          "type": "custom",
          "name": "CircularXXWeb-Regular",
          "variants": [
            {
              "fontFile": "229f260f-d946-4cdd-b56a-5b0a407851f8",
              "weight": ["400"]
            },
            {
              "fontFile": "0caedca6-fc1f-48bd-ba2a-1c79e950e3ed",
              "weight": ["500"]
            }
          ]
        }
      },
      "layout": {
        "searchbarPlacement": "HEADER",
        "tabsPlacement": "SIDEBAR",
        "contentAlignment": "CENTER",
        "headerPosition": "FIXED",
        "disableHeader": false
      },
      "css": {
        "inline": [
          "div, a, button {\n  border-radius: 0px !important;\n}\n\n.fern-card.interactive {\n  border: 2px solid rgb(0, 0, 0);\n}\n\n:is(.dark) .fern-card.interactive {\n  border: 2px solid white;\n}\n\n.fern-card.interactive:hover {\n  box-shadow: rgb(0, 0, 0) 8px 8px 0px -2px, rgb(0, 0, 0) 8px 8px 0px;\n}\n\n:is(.dark) .fern-card.interactive:hover {\n  box-shadow: white 8px 8px 0px -2px, white 8px 8px 0px;\n}\n\n.fern-button:not(.disabled).filled.primary {\n  color: white !important;\n  --tw-ring-color: #3b2fc9 !important;\n  background: #3b2fc9 !important;\n  border: 2px solid rgb(59, 47, 201);\n  transition: transform 150ms linear 0s, background-color 150ms linear 0s, box-shadow 150ms linear 0s, border-color 150ms linear 0s !important;\n}\n\n.fern-button:not(.disabled).filled.primary:hover {\n  background-color: rgb(93, 83, 215);\n  box-shadow: rgb(47, 38, 161) 2px 2px;\n  border-color: rgb(47, 38, 161);\n\n}\n\n.fern-button-text {\n  font-weight: 500 !important;\n}\n\n.fern-button:not(.disabled).filled.primary .fa-icon {\n  background-color: white !important;\n}\n\n.fern-button:not(.disabled).filled.primary svg {\n  color: white !important;\n}\n\n.fern-header-searchbar {\n  max-width: 500px !important;\n}\n\n.fern-search-bar {\n  border: 2px solid rgb(0, 0, 0) !important;\n  background-color: rgb(255, 255, 255) !important;\n  box-shadow: unset !important;\n  text-shadow: unset !important;\n}\n\n.fern-search-bar .search-placeholder span {\n  color: #000 !important;\n}\n\n.fern-search-bar .search-placeholder svg {\n  color: #000 !important;\n}"
        ]
      },
      "js": {
        "files": []
      },
      "redirects": [
        {
          "source": "/docs/api",
          "destination": "/overview/welcome"
        }
      ]
    },
    "apis": {
      "71e56795-ad60-4fec-aa7b-ecd860b41022": {
        "id": "71e56795-ad60-4fec-aa7b-ecd860b41022",
        "rootPackage": {
          "endpoints": [],
          "subpackages": [
            "subpackage_accounts",
            "subpackage_actions",
            "subpackage_agents",
            "subpackage_apps",
            "subpackage_assistant",
            "subpackage_commits",
            "subpackage_commons",
            "subpackage_data-retention-policies",
            "subpackage_documents",
            "subpackage_entitlements",
            "subpackage_environments",
            "subpackage_events",
            "subpackage_files",
            "subpackage_guests",
            "subpackage_jobs",
            "subpackage_mapping",
            "subpackage_records",
            "subpackage_roles",
            "subpackage_secrets",
            "subpackage_sheets",
            "subpackage_snapshots",
            "subpackage_spaces",
            "subpackage_users",
            "subpackage_versions",
            "subpackage_views",
            "subpackage_workbooks"
          ],
          "types": [],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_accounts:AccountResponse": {
            "name": "AccountResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_accounts:Account"
                  }
                }
              ]
            }
          },
          "type_accounts:Account": {
            "description": "An account",
            "name": "Account",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "subdomain",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "vanityDomainDashboard",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "vanityDomainSpaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "embeddedDomainWhitelist",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "customFromEmail",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "stripeCustomerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "defaultAppId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:AppId"
                    }
                  }
                },
                {
                  "key": "dashboard",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_accounts:AccountPatch": {
            "description": "Properties used to update an account",
            "name": "AccountPatch",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "defaultAppId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AppId"
                  }
                }
              ]
            }
          },
          "type_actions:Actions": {
            "name": "Actions",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_commons:Action"
                }
              }
            }
          },
          "type_actions:ActionResponse": {
            "name": "ActionResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_commons:APIAction"
              }
            }
          },
          "type_actions:ActionsResponse": {
            "name": "ActionsResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_commons:APIAction"
                }
              }
            }
          },
          "type_agents:ListAgentsResponse": {
            "name": "ListAgentsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_agents:Agent"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_agents:AgentResponse": {
            "name": "AgentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_agents:Agent"
                    }
                  }
                }
              ]
            }
          },
          "type_agents:ListAgentVersionsResponse": {
            "name": "ListAgentVersionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_agents:AgentVersion"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_agents:AgentVersionResponse": {
            "name": "AgentVersionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_agents:AgentVersion"
                    }
                  }
                }
              ]
            }
          },
          "type_agents:AgentConfig": {
            "description": "Properties used to create a new agent",
            "name": "AgentConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The topics the agent should listen for",
                  "key": "topics",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_events:EventTopic"
                      }
                    }
                  }
                },
                {
                  "description": "The compiler of the agent",
                  "key": "compiler",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_agents:Compiler"
                    }
                  }
                },
                {
                  "description": "The source of the agent",
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The source map of the agent",
                  "key": "sourceMap",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The slug of the agent",
                  "key": "slug",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_agents:Agent": {
            "name": "Agent",
            "shape": {
              "type": "object",
              "extends": ["type_agents:AgentConfig"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AgentId"
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "accountId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  }
                },
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  }
                }
              ]
            }
          },
          "type_agents:AgentVersion": {
            "name": "AgentVersion",
            "shape": {
              "type": "object",
              "extends": ["type_agents:AgentConfig"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AgentVersionId"
                  }
                },
                {
                  "key": "version",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "origin",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "agent_id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AgentId"
                  }
                }
              ]
            }
          },
          "type_agents:Compiler": {
            "description": "The compiler of the agent",
            "name": "Compiler",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "js"
                }
              ]
            }
          },
          "type_agents:GetAgentLogsResponse": {
            "name": "GetAgentLogsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_agents:AgentLog"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_agents:GetDetailedAgentLogResponse": {
            "name": "GetDetailedAgentLogResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_agents:DetailedAgentLog"
                  }
                }
              ]
            }
          },
          "type_agents:GetDetailedAgentLogsResponse": {
            "name": "GetDetailedAgentLogsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_agents:DetailedAgentLog"
                    }
                  }
                }
              ]
            }
          },
          "type_agents:GetExecutionsResponse": {
            "name": "GetExecutionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_agents:Execution"
                    }
                  }
                }
              ]
            }
          },
          "type_agents:AgentLog": {
            "description": "A log of an agent execution",
            "name": "AgentLog",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "eventId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EventId"
                  }
                },
                {
                  "description": "Whether the agent execution was successful",
                  "key": "success",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "completedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The log of the agent execution",
                  "key": "log",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_agents:DetailedAgentLog": {
            "description": "A log of an agent execution",
            "name": "DetailedAgentLog",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "eventId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EventId"
                  }
                },
                {
                  "description": "Whether the agent execution was successful",
                  "key": "success",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "completedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The duration of the agent execution",
                  "key": "duration",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The topics of the agent execution",
                  "key": "topic",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The context of the agent execution",
                  "key": "context",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "The log of the agent execution",
                  "key": "log",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_agents:Execution": {
            "description": "An execution of an agent",
            "name": "Execution",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "eventId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EventId"
                  }
                },
                {
                  "description": "Whether the agent execution was successful",
                  "key": "success",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "completedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The duration of the agent execution",
                  "key": "duration",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The topics of the agent execution",
                  "key": "topic",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_apps:AppsResponse": {
            "name": "AppsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_apps:App"
                    }
                  }
                }
              ]
            }
          },
          "type_apps:AppResponse": {
            "name": "AppResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_apps:App"
                  }
                }
              ]
            }
          },
          "type_apps:AppPatch": {
            "description": "Update an app",
            "name": "AppPatch",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "entity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "entityPlural",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "icon",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "environmentFilters",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "blueprint",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "activatedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_apps:AppCreate": {
            "description": "Create an app",
            "name": "AppCreate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "namespace",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_apps:AppType"
                  }
                },
                {
                  "key": "entity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "entityPlural",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "icon",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "environmentFilters",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "blueprint",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_apps:App": {
            "description": "An app",
            "name": "App",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AppId"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "namespace",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_apps:AppType"
                  }
                },
                {
                  "key": "entity",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "entityPlural",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "icon",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "unknown"
                  }
                },
                {
                  "key": "environmentFilters",
                  "valueType": {
                    "type": "unknown"
                  }
                },
                {
                  "key": "blueprint",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "activatedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_apps:AppType": {
            "name": "AppType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PORTAL"
                },
                {
                  "value": "PROJECTS"
                },
                {
                  "value": "MAPPING"
                },
                {
                  "value": "WORKBOOKS"
                },
                {
                  "value": "CUSTOM"
                }
              ]
            }
          },
          "type_apps:SuccessResponse": {
            "name": "SuccessResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintsResponse": {
            "name": "ConstraintsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_apps:ConstraintResource"
                    }
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintResponse": {
            "name": "ConstraintResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_apps:ConstraintResource"
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintVersionsResponse": {
            "name": "ConstraintVersionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_apps:ConstraintVersionResource"
                    }
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintVersionResponse": {
            "name": "ConstraintVersionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_apps:ConstraintVersionResource"
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintCreate": {
            "name": "ConstraintCreate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "function",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintUpdate": {
            "name": "ConstraintUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "function",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintResource": {
            "name": "ConstraintResource",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ConstraintId"
                  }
                },
                {
                  "key": "appId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AppId"
                  }
                },
                {
                  "key": "validator",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "function",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_apps:ConstraintVersionResource": {
            "name": "ConstraintVersionResource",
            "shape": {
              "type": "object",
              "extends": ["type_apps:ConstraintResource"],
              "properties": [
                {
                  "key": "version",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "prompt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_assistant:PromptsResponse": {
            "name": "PromptsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_assistant:Prompt"
                    }
                  }
                }
              ]
            }
          },
          "type_assistant:PromptResponse": {
            "name": "PromptResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_assistant:Prompt"
                  }
                }
              ]
            }
          },
          "type_assistant:PromptPatch": {
            "description": "Update a prompts",
            "name": "PromptPatch",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "prompt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_assistant:PromptCreate": {
            "description": "Create a prompts",
            "name": "PromptCreate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of prompt; Defaults to AI_ASSIST",
                  "key": "promptType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_assistant:PromptTypeEnum"
                    }
                  }
                },
                {
                  "key": "prompt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  }
                },
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                }
              ]
            }
          },
          "type_assistant:Prompt": {
            "name": "Prompt",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:PromptId"
                  }
                },
                {
                  "description": "ID of the user/guest who created the prompt",
                  "key": "createdById",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "accountId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  }
                },
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  }
                },
                {
                  "description": "Type of prompt",
                  "key": "promptType",
                  "valueType": {
                    "type": "id",
                    "value": "type_assistant:PromptTypeEnum"
                  }
                },
                {
                  "description": "Text for prompts for AI Assist",
                  "key": "prompt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_assistant:PromptTypeEnum": {
            "name": "PromptTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AI_ASSIST"
                },
                {
                  "value": "CONSTRAINT_GENERATION"
                }
              ]
            }
          },
          "type_assistant:PromptTypeQueryEnum": {
            "name": "PromptTypeQueryEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ALL"
                },
                {
                  "value": "AI_ASSIST"
                },
                {
                  "value": "CONSTRAINT_GENERATION"
                }
              ]
            }
          },
          "type_commits:ListCommitsResponse": {
            "name": "ListCommitsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_commits:Commit"
                    }
                  }
                }
              ]
            }
          },
          "type_commits:CommitResponse": {
            "name": "CommitResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_commits:Commit"
                  }
                }
              ]
            }
          },
          "type_commits:Commit": {
            "description": "A commit version",
            "name": "Commit",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:CommitId"
                  }
                },
                {
                  "key": "sheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "description": "The actor (user or system) who created the commit",
                  "key": "createdBy",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The actor (user or system) who completed the commit",
                  "key": "completedBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The time the commit was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The time the commit was acknowledged",
                  "key": "completedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_commons:AgentId": {
            "description": "Agent ID",
            "name": "AgentId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:AgentVersionId": {
            "description": "Agent version ID",
            "name": "AgentVersionId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:AccountId": {
            "description": "Account ID",
            "name": "AccountId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:AppId": {
            "description": "App ID",
            "name": "AppId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:ConstraintId": {
            "description": "Constraint ID",
            "name": "ConstraintId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:DocumentId": {
            "description": "Document ID",
            "name": "DocumentId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:GuestId": {
            "description": "Guest ID",
            "name": "GuestId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:EnvironmentId": {
            "description": "Environment ID",
            "name": "EnvironmentId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:FileId": {
            "description": "File ID",
            "name": "FileId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SpaceId": {
            "description": "Space ID",
            "name": "SpaceId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:WorkbookId": {
            "description": "Workbook ID",
            "name": "WorkbookId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:EventId": {
            "description": "Event ID",
            "name": "EventId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SheetId": {
            "description": "Sheet ID",
            "name": "SheetId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SnapshotId": {
            "description": "Snapshot ID",
            "name": "SnapshotId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:CommitId": {
            "description": "Commit ID",
            "name": "CommitId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:VersionId": {
            "description": "Version ID",
            "name": "VersionId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:JobId": {
            "description": "Pipeline Job ID",
            "name": "JobId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:UserId": {
            "description": "User ID",
            "name": "UserId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:ActorRoleId": {
            "description": "Actor Role ID",
            "name": "ActorRoleId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:ActorIdUnion": {
            "name": "ActorIdUnion",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_commons:UserId"
                  },
                  "displayName": "User ID"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_commons:AgentId"
                  },
                  "displayName": "Agent ID"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_commons:GuestId"
                  },
                  "displayName": "Guest ID"
                }
              ]
            }
          },
          "type_commons:RoleId": {
            "description": "Role ID",
            "name": "RoleId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SpaceConfigId": {
            "description": "Space Config ID",
            "name": "SpaceConfigId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:RecordId": {
            "description": "Record ID",
            "name": "RecordId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SecretId": {
            "description": "Secret ID",
            "name": "SecretId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:MappingId": {
            "description": "Mapping Rule ID",
            "name": "MappingId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:ProgramId": {
            "description": "Mapping Program ID",
            "name": "ProgramId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:FamilyId": {
            "description": "Mapping Family ID",
            "name": "FamilyId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:PromptId": {
            "description": "Prompt ID",
            "name": "PromptId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:ViewId": {
            "description": "View ID",
            "name": "ViewId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:ActionId": {
            "description": "Action ID",
            "name": "ActionId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:DataRetentionPolicyId": {
            "description": "Data Retention Policy ID",
            "name": "DataRetentionPolicyId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:Pagination": {
            "description": "pagination info",
            "name": "Pagination",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "current page of results",
                  "key": "currentPage",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "total number of pages of results",
                  "key": "pageCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "total available results",
                  "key": "totalCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:PageSize": {
            "description": "Number of logs to return in a page (default 20)",
            "name": "PageSize",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_commons:PageNumber": {
            "description": "Based on pageSize, which page of records to return",
            "name": "PageNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_commons:SuccessQueryParameter": {
            "description": "Boolean",
            "name": "SuccessQueryParameter",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_commons:Guide": {
            "name": "Guide",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Markdown guidance for this action",
                  "key": "content",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:Guardrail": {
            "name": "Guardrail",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Markdown guardrail for this action",
                  "key": "content",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionWithoutLabel": {
            "name": "ActionWithoutLabel",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "**This is deprecated. Use `operation` instead.**",
                  "availability": "Deprecated",
                  "key": "slug",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "This will become the job operation that is triggered",
                  "key": "operation",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Foreground and toolbarBlocking action mode will prevent interacting with the resource until complete",
                  "key": "mode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ActionMode"
                    }
                  }
                },
                {
                  "description": "A tooltip that appears when hovering the action button",
                  "key": "tooltip",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:ActionMessage"
                      }
                    }
                  }
                },
                {
                  "description": "**This is deprecated.**",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The text that appears in the dialog after the action is clicked.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Determines if the action should happen on a regular cadence.",
                  "key": "schedule",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ActionSchedule"
                    }
                  }
                },
                {
                  "description": "A primary action will be more visibly present, whether in Sheet or Workbook.",
                  "key": "primary",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Whether to show a modal to confirm the action",
                  "key": "confirm",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Icon will work on primary actions. It will only accept an already existing Flatfile design system icon.",
                  "key": "icon",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "**This is deprecated. Use `constraints` instead.**",
                  "availability": "Deprecated",
                  "key": "requireAllValid",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "**This is deprecated. Use `constraints` instead.**",
                  "availability": "Deprecated",
                  "key": "requireSelection",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Adds an input form for this action after it is clicked.",
                  "key": "inputForm",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:InputForm"
                    }
                  }
                },
                {
                  "description": "A limitation or restriction on the action.",
                  "key": "constraints",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:ActionConstraint"
                      }
                    }
                  }
                },
                {
                  "key": "mount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ActionMount"
                    }
                  }
                },
                {
                  "key": "guide",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Guide"
                    }
                  }
                },
                {
                  "key": "guardrail",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Guardrail"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:Action": {
            "name": "Action",
            "shape": {
              "type": "object",
              "extends": ["type_commons:ActionWithoutLabel"],
              "properties": [
                {
                  "description": "The text on the Button itself",
                  "key": "label",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:APIAction": {
            "name": "APIAction",
            "shape": {
              "type": "object",
              "extends": ["type_commons:Action"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ActionId"
                  }
                },
                {
                  "key": "targetId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionUpdate": {
            "name": "ActionUpdate",
            "shape": {
              "type": "object",
              "extends": ["type_commons:ActionWithoutLabel"],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionConstraint": {
            "name": "ActionConstraint",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "hasAllValid",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionConstraintHasAllValid"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "hasSelection",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionConstraintHasSelection"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "hasData",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionConstraintHasData"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_commons:ActionMount": {
            "name": "ActionMount",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "sheet",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionMountSheet"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "workbook",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionMountWorkbook"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "field",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionMountField"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "document",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionMountDocument"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "file",
                  "additionalProperties": {
                    "extends": ["type_commons:ActionMountFile"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_commons:ActionMountSheet": {
            "description": "Used to mount this action on Sheets.",
            "name": "ActionMountSheet",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "slugs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionMountWorkbook": {
            "description": "Used to mount this action on Workbooks.",
            "name": "ActionMountWorkbook",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "slugs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionMountField": {
            "description": "Used to mount this action on Sheet Columns.",
            "name": "ActionMountField",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "keys",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionMountDocument": {
            "description": "Used to mount this action on documents.",
            "name": "ActionMountDocument",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_commons:ActionMountFile": {
            "description": "Used to mount this action on files.",
            "name": "ActionMountFile",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_commons:ActionConstraintHasAllValid": {
            "description": "This constraint requires that all records are valid before the action can be performed.",
            "name": "ActionConstraintHasAllValid",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ignoreSelection",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionConstraintHasSelection": {
            "description": "This constraint requires that at least one record is selected before the action can be performed.",
            "name": "ActionConstraintHasSelection",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_commons:ActionConstraintHasData": {
            "description": "This constraint requires that at least one record exists before the action can be performed.",
            "name": "ActionConstraintHasData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_commons:InputForm": {
            "name": "InputForm",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:InputFormType"
                  }
                },
                {
                  "key": "fields",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:InputField"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:InputFormType": {
            "name": "InputFormType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "simple"
                }
              ]
            }
          },
          "type_commons:InputField": {
            "name": "InputField",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique key for a Field.",
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Visible name of a Field.",
                  "key": "label",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Brief description below the name of the Field.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Field Types inform the user interface how to sort and display data.",
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Default value for a Field.",
                  "key": "defaultValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "Additional configuration for enum Fields.",
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:InputConfig"
                    }
                  }
                },
                {
                  "description": "Indicate additional validations that will be applied to the Field.",
                  "key": "constraints",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:InputConstraint"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_commons:InputConstraint": {
            "name": "InputConstraint",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:InputConstraintType"
                  }
                }
              ]
            }
          },
          "type_commons:InputConstraintType": {
            "name": "InputConstraintType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "required"
                }
              ]
            }
          },
          "type_commons:InputConfig": {
            "name": "InputConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "options",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:InputEnumPropertyOption"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:InputEnumPropertyOption": {
            "name": "InputEnumPropertyOption",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A visual label for this option, defaults to value if not provided",
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A short description for this option",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An optional color to assign this option",
                  "key": "color",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A reference pointer to a previously registered icon",
                  "key": "icon",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An arbitrary JSON object to be associated with this option and made available to hooks",
                  "key": "meta",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The value or ID of this option. This value will be sent in egress. The type is a string | integer | boolean.",
                  "key": "value",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_commons:ActionMode": {
            "description": "Foreground actions will prevent interacting with the resource until complete",
            "name": "ActionMode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "foreground"
                },
                {
                  "value": "background"
                },
                {
                  "value": "toolbarBlocking"
                }
              ]
            }
          },
          "type_commons:ActionMessageType": {
            "name": "ActionMessageType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "error"
                },
                {
                  "value": "info"
                }
              ]
            }
          },
          "type_commons:ActionMessage": {
            "name": "ActionMessage",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ActionMessageType"
                  }
                },
                {
                  "key": "content",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:ActionSchedule": {
            "name": "ActionSchedule",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "weekly"
                },
                {
                  "value": "daily"
                },
                {
                  "value": "hourly"
                }
              ]
            }
          },
          "type_commons:SortDirection": {
            "description": "Sort direction - asc (ascending) or desc (descending)",
            "name": "SortDirection",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "asc"
                },
                {
                  "value": "desc"
                }
              ]
            }
          },
          "type_commons:Success": {
            "description": "Informs whether or not a request was successful",
            "name": "Success",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SuccessData"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:SuccessData": {
            "name": "SuccessData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:Error": {
            "name": "Error",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:Errors": {
            "name": "Errors",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "errors",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Error"
                    }
                  }
                }
              ]
            }
          },
          "type_commons:Filter": {
            "description": "Options to filter records",
            "name": "Filter",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "valid"
                },
                {
                  "value": "error"
                },
                {
                  "value": "all"
                },
                {
                  "value": "none"
                }
              ]
            }
          },
          "type_commons:FilterField": {
            "description": "Use this to narrow the valid/error filter results to a specific field",
            "name": "FilterField",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SearchField": {
            "description": "Use this to narrow the searchValue results to a specific field",
            "name": "SearchField",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SearchValue": {
            "description": "Search for the given value, returning matching rows. For exact matches, wrap the value in double quotes (\"Bob\"). To search for null values, send empty double quotes (\"\")",
            "name": "SearchValue",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:SortField": {
            "description": "Name of field by which to sort records",
            "name": "SortField",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_commons:JSONPathString": {
            "description": "A JSONPath string - https://www.rfc-editor.org/rfc/rfc9535",
            "name": "JSONPathString",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_data-clips:Resolve": {
            "description": "Conflict resolutions for a record",
            "name": "Resolve",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "field",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_data-clips:ResolveType"
                    }
                  }
                },
                {
                  "key": "resolveTo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_data-clips:ResolveTo"
                    }
                  }
                }
              ]
            }
          },
          "type_data-clips:ResolveType": {
            "name": "ResolveType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "conflict"
                },
                {
                  "value": "resolve"
                }
              ]
            }
          },
          "type_data-clips:ResolveTo": {
            "name": "ResolveTo",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "clip"
                },
                {
                  "value": "main"
                },
                {
                  "value": "snapshot"
                }
              ]
            }
          },
          "type_data-retention-policies:ListDataRetentionPoliciesResponse": {
            "name": "ListDataRetentionPoliciesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_data-retention-policies:DataRetentionPolicy"
                    }
                  }
                }
              ]
            }
          },
          "type_data-retention-policies:DataRetentionPolicyResponse": {
            "name": "DataRetentionPolicyResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_data-retention-policies:DataRetentionPolicy"
                  }
                }
              ]
            }
          },
          "type_data-retention-policies:DataRetentionPolicyConfig": {
            "name": "DataRetentionPolicyConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_data-retention-policies:DataRetentionPolicyEnum"
                  }
                },
                {
                  "key": "period",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  }
                }
              ]
            }
          },
          "type_data-retention-policies:DataRetentionPolicy": {
            "description": "A data retention policy belonging to an environment",
            "name": "DataRetentionPolicy",
            "shape": {
              "type": "object",
              "extends": ["type_data-retention-policies:DataRetentionPolicyConfig"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:DataRetentionPolicyId"
                  }
                },
                {
                  "description": "Date the policy was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the policy was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_data-retention-policies:DataRetentionPolicyEnum": {
            "description": "The type of data retention policy on an environment",
            "name": "DataRetentionPolicyEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "lastActivity"
                },
                {
                  "value": "sinceCreated"
                }
              ]
            }
          },
          "type_documents:ListDocumentsResponse": {
            "name": "ListDocumentsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_documents:Document"
                    }
                  }
                }
              ]
            }
          },
          "type_documents:DocumentResponse": {
            "name": "DocumentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_documents:Document"
                  }
                }
              ]
            }
          },
          "type_documents:DocumentConfig": {
            "name": "DocumentConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "body",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Certain treatments will cause your Document to look or behave differently.",
                  "key": "treatments",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_documents:Document": {
            "description": "A document (markdown components) belong to a space",
            "name": "Document",
            "shape": {
              "type": "object",
              "extends": ["type_documents:DocumentConfig"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:DocumentId"
                  }
                },
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  }
                },
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "description": "Date the document was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the document was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_entitlements:ListEntitlementsResponse": {
            "name": "ListEntitlementsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_entitlements:Entitlement"
                    }
                  }
                }
              ]
            }
          },
          "type_entitlements:Entitlement": {
            "description": "An entitlement belonging to a resource",
            "name": "Entitlement",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Short name for the entitlement",
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Contains conditions or limits for an entitlement",
                  "key": "metadata",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_environments:ListEnvironmentsResponse": {
            "name": "ListEnvironmentsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_environments:Environment"
                    }
                  }
                },
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                }
              ]
            }
          },
          "type_environments:EnvironmentResponse": {
            "name": "EnvironmentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_environments:Environment"
                  }
                }
              ]
            }
          },
          "type_environments:Environment": {
            "name": "Environment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  }
                },
                {
                  "key": "accountId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  }
                },
                {
                  "description": "The name of the environment",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Whether or not the environment is a production environment",
                  "key": "isProd",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "guestAuthentication",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_environments:GuestAuthenticationEnum"
                    }
                  }
                },
                {
                  "key": "features",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "translationsPath",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "namespaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "languageOverride",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_environments:EnvironmentConfigCreate": {
            "description": "Properties used to create a new environment",
            "name": "EnvironmentConfigCreate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the environment",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Whether or not the environment is a production environment",
                  "key": "isProd",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "guestAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_environments:GuestAuthenticationEnum"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "key": "translationsPath",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "namespaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "languageOverride",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_environments:EnvironmentConfigUpdate": {
            "description": "Properties used to update an environment",
            "name": "EnvironmentConfigUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the environment",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not the environment is a production environment",
                  "key": "isProd",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "guestAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_environments:GuestAuthenticationEnum"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "key": "translationsPath",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "namespaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "languageOverride",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_environments:GuestAuthenticationEnum": {
            "description": "The type of authentication to use for guests",
            "name": "GuestAuthenticationEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "shared_link"
                },
                {
                  "value": "magic_link"
                }
              ]
            }
          },
          "type_events:ListAllEventsResponse": {
            "name": "ListAllEventsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_events:Event"
                    }
                  }
                }
              ]
            }
          },
          "type_events:CreateEventConfig": {
            "description": "Properties used to create a new event",
            "name": "CreateEventConfig",
            "shape": {
              "type": "object",
              "extends": ["type_events:BaseEvent"],
              "properties": [
                {
                  "key": "topic",
                  "valueType": {
                    "type": "id",
                    "value": "type_events:EventTopic"
                  }
                },
                {
                  "key": "payload",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "Date the event was deleted",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_events:EventResponse": {
            "name": "EventResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_events:Event"
                  }
                }
              ]
            }
          },
          "type_events:Event": {
            "description": "An event that tracks an activity within an environment",
            "name": "Event",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "topic",
              "variants": [
                {
                  "discriminantValue": "agent:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "agent:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "agent:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "space:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "space:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "space:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "space:archived",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "space:expired",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "space:guestAdded",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "space:guestRemoved",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "document:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "document:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "document:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "workbook:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "workbook:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "workbook:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "workbook:expired",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "sheet:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "sheet:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "sheet:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "sheet:counts-updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "snapshot:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "records:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "records:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "records:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "file:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "file:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "file:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "file:expired",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:failed",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:completed",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:ready",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:scheduled",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:outcome-acknowledged",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "job:parts-completed",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "program:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "program:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "commit:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "commit:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "commit:completed",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "secret:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "secret:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "secret:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "layer:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "environment:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "environment:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "environment:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "action:created",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "action:updated",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "action:deleted",
                  "additionalProperties": {
                    "extends": ["type_events:GenericEvent"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_events:GenericEvent": {
            "name": "GenericEvent",
            "shape": {
              "type": "object",
              "extends": ["type_events:BaseEvent"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EventId"
                  }
                },
                {
                  "description": "Date the event was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the event was deleted",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Date the event was acknowledged",
                  "key": "acknowledgedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The actor (user or system) who acknowledged the event",
                  "key": "acknowledgedBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "payload",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_events:BaseEvent": {
            "name": "BaseEvent",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The domain of the event",
                  "key": "domain",
                  "valueType": {
                    "type": "id",
                    "value": "type_events:Domain"
                  }
                },
                {
                  "description": "The context of the event",
                  "key": "context",
                  "valueType": {
                    "type": "id",
                    "value": "type_events:Context"
                  }
                },
                {
                  "description": "The attributes of the event",
                  "key": "attributes",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_events:EventAttributes"
                    }
                  }
                },
                {
                  "description": "The callback url to acknowledge the event",
                  "key": "callbackUrl",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The url to retrieve the data associated with the event",
                  "key": "dataUrl",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "target",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "origin",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_events:Origin"
                    }
                  }
                },
                {
                  "key": "namespaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_events:EventTopic": {
            "description": "The topic of the event",
            "name": "EventTopic",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "agent:created"
                },
                {
                  "value": "agent:updated"
                },
                {
                  "value": "agent:deleted"
                },
                {
                  "value": "space:created"
                },
                {
                  "value": "space:updated"
                },
                {
                  "value": "space:deleted"
                },
                {
                  "value": "space:archived"
                },
                {
                  "value": "space:unarchived"
                },
                {
                  "value": "space:expired"
                },
                {
                  "value": "space:guestAdded"
                },
                {
                  "value": "space:guestRemoved"
                },
                {
                  "value": "document:created"
                },
                {
                  "value": "document:updated"
                },
                {
                  "value": "document:deleted"
                },
                {
                  "value": "workbook:created"
                },
                {
                  "value": "workbook:updated"
                },
                {
                  "value": "workbook:deleted"
                },
                {
                  "value": "workbook:expired"
                },
                {
                  "value": "sheet:created"
                },
                {
                  "value": "sheet:updated"
                },
                {
                  "value": "sheet:deleted"
                },
                {
                  "value": "sheet:counts-updated"
                },
                {
                  "value": "snapshot:created"
                },
                {
                  "value": "records:created"
                },
                {
                  "value": "records:updated"
                },
                {
                  "value": "records:deleted"
                },
                {
                  "value": "file:created"
                },
                {
                  "value": "file:updated"
                },
                {
                  "value": "file:deleted"
                },
                {
                  "value": "file:expired"
                },
                {
                  "value": "job:created"
                },
                {
                  "value": "job:updated"
                },
                {
                  "value": "job:deleted"
                },
                {
                  "value": "job:completed"
                },
                {
                  "value": "job:ready"
                },
                {
                  "value": "job:scheduled"
                },
                {
                  "value": "job:outcome-acknowledged"
                },
                {
                  "value": "job:parts-completed"
                },
                {
                  "value": "job:failed"
                },
                {
                  "value": "program:created"
                },
                {
                  "value": "program:updated"
                },
                {
                  "value": "commit:created"
                },
                {
                  "value": "commit:updated"
                },
                {
                  "value": "commit:completed"
                },
                {
                  "value": "layer:created"
                },
                {
                  "value": "secret:created"
                },
                {
                  "value": "secret:updated"
                },
                {
                  "value": "secret:deleted"
                },
                {
                  "value": "cron:5-minutes"
                },
                {
                  "value": "cron:hourly"
                },
                {
                  "value": "cron:daily"
                },
                {
                  "value": "cron:weekly"
                },
                {
                  "value": "environment:created"
                },
                {
                  "value": "environment:updated"
                },
                {
                  "value": "environment:deleted"
                },
                {
                  "value": "action:created"
                },
                {
                  "value": "action:updated"
                },
                {
                  "value": "action:deleted"
                }
              ]
            }
          },
          "type_events:Domain": {
            "description": "The domain of the event",
            "name": "Domain",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "file"
                },
                {
                  "value": "space"
                },
                {
                  "value": "workbook"
                },
                {
                  "value": "job"
                },
                {
                  "value": "document"
                },
                {
                  "value": "sheet"
                },
                {
                  "value": "program"
                },
                {
                  "value": "secret"
                },
                {
                  "value": "cron"
                },
                {
                  "value": "environment"
                }
              ]
            }
          },
          "type_events:Context": {
            "description": "The context of the event",
            "name": "Context",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The namespaces of the event",
                  "key": "namespaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "The slugs of related resources",
                  "key": "slugs",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_events:EventContextSlugs"
                    }
                  }
                },
                {
                  "key": "actionName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_events:ActionName"
                    }
                  }
                },
                {
                  "key": "accountId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  }
                },
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  }
                },
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  }
                },
                {
                  "key": "workbookId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:WorkbookId"
                    }
                  }
                },
                {
                  "key": "sheetId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SheetId"
                    }
                  }
                },
                {
                  "key": "sheetSlug",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_events:SheetSlug"
                    }
                  }
                },
                {
                  "key": "snapshotId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SnapshotId"
                    }
                  }
                },
                {
                  "description": "Deprecated, use `commitId` instead.",
                  "availability": "Deprecated",
                  "key": "versionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:VersionId"
                    }
                  }
                },
                {
                  "key": "commitId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:CommitId"
                    }
                  }
                },
                {
                  "key": "jobId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:JobId"
                    }
                  }
                },
                {
                  "key": "programId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ProgramId"
                    }
                  }
                },
                {
                  "key": "fileId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FileId"
                    }
                  }
                },
                {
                  "key": "documentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:DocumentId"
                    }
                  }
                },
                {
                  "key": "precedingEventId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EventId"
                    }
                  }
                },
                {
                  "description": "Can be a UserId, GuestId, or AgentId",
                  "key": "actorId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "appId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:AppId"
                    }
                  }
                },
                {
                  "key": "actionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ActionId"
                    }
                  }
                }
              ]
            }
          },
          "type_events:EventContextSlugs": {
            "name": "EventContextSlugs",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The slug of the space",
                  "key": "space",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The slug of the workbook",
                  "key": "workbook",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The slug of the sheet",
                  "key": "sheet",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_events:ActionName": {
            "description": "Name of an action",
            "name": "ActionName",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_events:Progress": {
            "description": "The progress of the event within a collection of iterable events",
            "name": "Progress",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The current progress of the event",
                  "key": "current",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The total number of events in this group",
                  "key": "total",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The percent complete of the event group",
                  "key": "percent",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_events:EventAttributes": {
            "description": "The attributes of the event",
            "name": "EventAttributes",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Date the related entity was last updated",
                  "key": "targetUpdatedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The progress of the event within a collection of iterable events",
                  "key": "progress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_events:Progress"
                    }
                  }
                }
              ]
            }
          },
          "type_events:SheetSlug": {
            "description": "Sheet Slug",
            "name": "SheetSlug",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_events:Origin": {
            "description": "The origin resource of the event",
            "name": "Origin",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "slug",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_files:ListFilesResponse": {
            "name": "ListFilesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_files:File"
                    }
                  }
                }
              ]
            }
          },
          "type_files:FileResponse": {
            "name": "FileResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_files:File"
                  }
                }
              ]
            }
          },
          "type_files:File": {
            "description": "Any uploaded file of any type",
            "name": "File",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:FileId"
                  }
                },
                {
                  "description": "Original filename",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Extension of the file",
                  "key": "ext",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "MIME Type of the file",
                  "key": "mimetype",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Text encoding of the file",
                  "key": "encoding",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Status of the file",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_files:ModelFileStatusEnum"
                  }
                },
                {
                  "description": "The storage mode of file",
                  "key": "mode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_files:Mode"
                    }
                  }
                },
                {
                  "description": "Size of file in bytes",
                  "key": "size",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Number of bytes that have been uploaded so far (useful for progress tracking)",
                  "key": "bytesReceived",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Date the file was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the file was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the file was expired",
                  "key": "expiredAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "key": "workbookId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:WorkbookId"
                    }
                  }
                },
                {
                  "key": "sheetId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SheetId"
                    }
                  }
                },
                {
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                },
                {
                  "key": "origin",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_files:FileOrigin"
                    }
                  }
                }
              ]
            }
          },
          "type_files:ModelFileStatusEnum": {
            "name": "ModelFileStatusEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "partial"
                },
                {
                  "value": "complete"
                },
                {
                  "value": "archived"
                },
                {
                  "value": "purged"
                },
                {
                  "value": "failed"
                }
              ]
            }
          },
          "type_files:Mode": {
            "name": "Mode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "import"
                },
                {
                  "value": "export"
                }
              ]
            }
          },
          "type_files:FileOrigin": {
            "name": "FileOrigin",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "filesystem"
                },
                {
                  "value": "googledrive"
                },
                {
                  "value": "box"
                },
                {
                  "value": "onedrive"
                }
              ]
            }
          },
          "type_guests:ListGuestsResponse": {
            "name": "ListGuestsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_guests:Guest"
                    }
                  }
                }
              ]
            }
          },
          "type_guests:CreateGuestResponse": {
            "name": "CreateGuestResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_guests:Guest"
                    }
                  }
                }
              ]
            }
          },
          "type_guests:GuestResponse": {
            "name": "GuestResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_guests:Guest"
                  }
                }
              ]
            }
          },
          "type_guests:Guest": {
            "name": "Guest",
            "shape": {
              "type": "object",
              "extends": ["type_guests:GuestConfig"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:GuestId"
                  }
                },
                {
                  "description": "Date the guest object was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the guest object was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_guests:GuestConfig": {
            "description": "Configurations for the guests",
            "name": "GuestConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "spaces",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_guests:GuestSpace"
                    }
                  }
                }
              ]
            }
          },
          "type_guests:GuestConfigUpdate": {
            "description": "Properties used to update an existing guest",
            "name": "GuestConfigUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "spaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_guests:GuestSpace"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_guests:GuestWorkbook": {
            "name": "GuestWorkbook",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:WorkbookId"
                  }
                }
              ]
            }
          },
          "type_guests:GuestSpace": {
            "name": "GuestSpace",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "key": "workbooks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_guests:GuestWorkbook"
                      }
                    }
                  }
                },
                {
                  "key": "lastAccessed",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_guests:Invite": {
            "name": "Invite",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "guestId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:GuestId"
                  }
                },
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "description": "The name of the person or company sending the invitation",
                  "key": "fromName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Message to send with the invite",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_guests:GuestToken": {
            "name": "GuestToken",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The token used to authenticate the guest",
                  "key": "token",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "valid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_guests:GuestTokenResponse": {
            "name": "GuestTokenResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_guests:GuestToken"
                  }
                }
              ]
            }
          },
          "type_jobs:ListJobsResponse": {
            "name": "ListJobsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:Job"
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobResponse": {
            "name": "JobResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:Job"
                  }
                }
              ]
            }
          },
          "type_jobs:JobPlanResponse": {
            "name": "JobPlanResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:JobPlan"
                  }
                }
              ]
            }
          },
          "type_jobs:Job": {
            "description": "A single unit of work that will execute asynchronously",
            "name": "Job",
            "shape": {
              "type": "object",
              "extends": ["type_jobs:JobConfig"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:JobId"
                  }
                },
                {
                  "description": "Date the item was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the item was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "the time that the job started at",
                  "key": "startedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "the time that the job finished at",
                  "key": "finishedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "the time that the job's outcome has been acknowledged by a user",
                  "key": "outcomeAcknowledgedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobConfig": {
            "description": "A single unit of work that a pipeline will execute",
            "name": "JobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of job",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:JobType"
                  }
                },
                {
                  "description": "the type of operation to perform on the data. For example, \"export\".",
                  "key": "operation",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "source",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:JobSource"
                  }
                },
                {
                  "key": "destination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobDestination"
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobUpdateConfig"
                    }
                  }
                },
                {
                  "description": "the type of trigger to use for this job",
                  "key": "trigger",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:Trigger"
                    }
                  }
                },
                {
                  "description": "the status of the job",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobStatus"
                    }
                  }
                },
                {
                  "description": "the progress of the job. Whole number between 0 and 100",
                  "key": "progress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "fileId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FileId"
                    }
                  }
                },
                {
                  "description": "the mode of the job",
                  "key": "mode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobMode"
                    }
                  }
                },
                {
                  "description": "Input parameters for this job type.",
                  "key": "input",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Subject parameters for this job type.",
                  "key": "subject",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobSubject"
                    }
                  }
                },
                {
                  "description": "Outcome summary of job.",
                  "key": "outcome",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Current status of job in text",
                  "key": "info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Indicates if Flatfile is managing the control flow of this job or if it is being manually tracked.",
                  "key": "managed",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The id of the environment this job belongs to",
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "description": "The part number of this job",
                  "key": "part",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The data for this part of the job",
                  "key": "partData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The execution mode for this part of the job",
                  "key": "partExecution",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobPartExecution"
                    }
                  }
                },
                {
                  "description": "The id of the parent job",
                  "key": "parentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:JobId"
                    }
                  }
                },
                {
                  "description": "The ids of the jobs that must complete before this job can start",
                  "key": "predecessorIds",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  }
                },
                {
                  "description": "Additional metadata for the job",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobUpdate": {
            "description": "A single unit of work that will be executed",
            "name": "JobUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobUpdateConfig"
                    }
                  }
                },
                {
                  "description": "the status of the job",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobStatus"
                    }
                  }
                },
                {
                  "description": "the progress of the job. Whole number between 0 and 100",
                  "key": "progress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "the time that the job's outcome has been acknowledged by a user",
                  "key": "outcomeAcknowledgedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Current status of job in text",
                  "key": "info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobPartExecution": {
            "name": "JobPartExecution",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "sequential"
                },
                {
                  "value": "parallel"
                }
              ]
            }
          },
          "type_jobs:JobUpdateConfig": {
            "name": "JobUpdateConfig",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:DeleteRecordsJobConfig"
                  },
                  "displayName": "Delete Records Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:FileJobConfig"
                  },
                  "displayName": "File Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:PipelineJobConfig"
                  },
                  "displayName": "Pipeline Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:ExportJobConfig"
                  },
                  "displayName": "Export Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:MutateJobConfig"
                  },
                  "displayName": "Mutate Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:FindAndReplaceJobConfig"
                  },
                  "displayName": "Find and Replace Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:MappingProgramJobConfig"
                  },
                  "displayName": "Mapping Program Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:AiGenerateBlueprintJobConfig"
                  },
                  "displayName": "AI Generate Blueprint Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:AppAutobuildDeployJobConfig"
                  },
                  "displayName": "App Autobuild Deploy Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:AiGenerateSampleDataJobConfig"
                  },
                  "displayName": "AI Generate Sample Data Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:AiGenerateBlueprintConstraintsJobConfig"
                  },
                  "displayName": "AI Generate Blueprint Constraints Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:AiGenerateConstraintJobConfig"
                  },
                  "displayName": "AI Generate Constraint Job Config"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:EmptyObject"
                  },
                  "displayName": "Empty Object"
                }
              ]
            }
          },
          "type_jobs:JobSource": {
            "description": "The id of a file, workbook, sheet, or app",
            "name": "JobSource",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_jobs:JobDestination": {
            "description": "The id of the workbook where extracted file data will be sent",
            "name": "JobDestination",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_commons:WorkbookId"
              }
            }
          },
          "type_jobs:DeleteRecordsJobConfig": {
            "description": "The configuration for a delete job",
            "name": "DeleteRecordsJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Options to filter records (default=none)",
                  "key": "filter",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Filter"
                    }
                  }
                },
                {
                  "description": "Use this to narrow the valid/error filter results to a specific field (Requires filter to be set)",
                  "key": "filterField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FilterField"
                    }
                  }
                },
                {
                  "key": "searchValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchValue"
                    }
                  }
                },
                {
                  "key": "searchField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchField"
                    }
                  }
                },
                {
                  "description": "FFQL query to filter records",
                  "key": "q",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "sheet",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "description": "List of record ids to exclude from deletion",
                  "key": "exceptions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  }
                },
                {
                  "description": "If specified, a snapshot will be generated with this label",
                  "key": "snapshotLabel",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:FileJobConfig": {
            "name": "FileJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The driver to use for extracting data from the file",
                  "key": "driver",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:Driver"
                  }
                },
                {
                  "description": "The options to use for extracting data from the file",
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The row number of the header row detected at extraction time",
                  "key": "detectedHeaderRow",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:MutateJobConfig": {
            "name": "MutateJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "description": "A JavaScript function that will be run on each record in the sheet, it should return a mutated record.",
                  "key": "mutateRecord",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "If the mutation was generated through some sort of id-ed process, this links this job and that process.",
                  "key": "mutationId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If specified, a snapshot will be generated with this label",
                  "key": "snapshotLabel",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The generated snapshotId will be stored here",
                  "key": "snapshotId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "filter",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Filter"
                    }
                  }
                },
                {
                  "key": "filterField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FilterField"
                    }
                  }
                },
                {
                  "key": "searchValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchValue"
                    }
                  }
                },
                {
                  "key": "searchField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchField"
                    }
                  }
                },
                {
                  "key": "q",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records",
                  "key": "ids",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:MappingProgramJobConfig": {
            "name": "MappingProgramJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sourceSheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "key": "destinationSheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "key": "mappingRules",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:AiGenerateBlueprintJobConfig": {
            "name": "AiGenerateBlueprintJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "key": "appId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AppId"
                  }
                }
              ]
            }
          },
          "type_jobs:AppAutobuildDeployJobConfig": {
            "name": "AppAutobuildDeployJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "key": "appId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AppId"
                  }
                }
              ]
            }
          },
          "type_jobs:AiGenerateSampleDataJobConfig": {
            "name": "AiGenerateSampleDataJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "key": "appId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AppId"
                  }
                }
              ]
            }
          },
          "type_jobs:AiGenerateBlueprintConstraintsJobConfig": {
            "name": "AiGenerateBlueprintConstraintsJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "key": "workbookId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:WorkbookId"
                  }
                }
              ]
            }
          },
          "type_jobs:AiGenerateConstraintJobConfig": {
            "name": "AiGenerateConstraintJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "key": "constraints",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:StoredConstraint"
                    }
                  }
                },
                {
                  "description": "A description of what the constraint to be generated should do",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:Driver": {
            "description": "The driver to use for extracting data from the file",
            "name": "Driver",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "csv"
                }
              ]
            }
          },
          "type_jobs:Trigger": {
            "description": "The type of trigger to use for this job",
            "name": "Trigger",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "manual"
                },
                {
                  "value": "immediate"
                }
              ]
            }
          },
          "type_jobs:PipelineJobConfig": {
            "name": "PipelineJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sourceSheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "key": "destinationSheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                }
              ]
            }
          },
          "type_jobs:JobType": {
            "description": "The type of job",
            "name": "JobType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "file"
                },
                {
                  "value": "workbook"
                },
                {
                  "value": "sheet"
                },
                {
                  "value": "space"
                },
                {
                  "value": "document"
                },
                {
                  "value": "app"
                }
              ]
            }
          },
          "type_jobs:JobStatus": {
            "description": "the status of the job",
            "name": "JobStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "created"
                },
                {
                  "value": "planning"
                },
                {
                  "value": "scheduled"
                },
                {
                  "value": "ready"
                },
                {
                  "value": "executing"
                },
                {
                  "value": "complete"
                },
                {
                  "value": "failed"
                },
                {
                  "value": "canceled"
                },
                {
                  "value": "waiting"
                }
              ]
            }
          },
          "type_jobs:JobMode": {
            "description": "the mode of the job",
            "name": "JobMode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "foreground"
                },
                {
                  "value": "background"
                },
                {
                  "value": "toolbarBlocking"
                }
              ]
            }
          },
          "type_jobs:JobSubject": {
            "description": "Subject parameters for this job type",
            "name": "JobSubject",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "resource",
                  "additionalProperties": {
                    "extends": ["type_jobs:ResourceJobSubject"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "collection",
                  "additionalProperties": {
                    "extends": ["type_jobs:CollectionJobSubject"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_jobs:CollectionJobSubject": {
            "name": "CollectionJobSubject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "resource",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "params",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "key": "query",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:ResourceJobSubject": {
            "name": "ResourceJobSubject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobPlan": {
            "description": "The job/plan tuple that contains the full plan and the jobs status",
            "name": "JobPlan",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "job",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:Job"
                  }
                },
                {
                  "key": "plan",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:JobExecutionPlan"
                  }
                }
              ]
            }
          },
          "type_jobs:JobExecutionPlanRequest": {
            "name": "JobExecutionPlanRequest",
            "shape": {
              "type": "object",
              "extends": ["type_jobs:JobExecutionPlan"],
              "properties": [
                {
                  "key": "fileId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:FileId"
                  }
                },
                {
                  "key": "jobId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:JobId"
                  }
                }
              ]
            }
          },
          "type_jobs:JobExecutionPlanConfigRequest": {
            "name": "JobExecutionPlanConfigRequest",
            "shape": {
              "type": "object",
              "extends": ["type_jobs:JobExecutionPlanConfig"],
              "properties": [
                {
                  "key": "fileId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:FileId"
                  }
                },
                {
                  "key": "jobId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:JobId"
                  }
                }
              ]
            }
          },
          "type_jobs:JobAckDetails": {
            "description": "Details about the user who acknowledged the job",
            "name": "JobAckDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "the progress of the job. Whole number between 0 and 100",
                  "key": "progress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "estimatedCompletionAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobCompleteDetails": {
            "description": "Outcome summary of a job",
            "name": "JobCompleteDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "outcome",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobOutcome"
                    }
                  }
                },
                {
                  "key": "info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeTriggerType": {
            "description": "Whether a job outcome's effect should be triggered automatically",
            "name": "JobOutcomeTriggerType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "manual"
                },
                {
                  "value": "automatic"
                },
                {
                  "value": "automatic_silent"
                }
              ]
            }
          },
          "type_jobs:JobOutcomeTriggerAudience": {
            "description": "For whom the job outcome's next effect should be triggered automatically",
            "name": "JobOutcomeTriggerAudience",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "originator"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_jobs:JobOutcomeTriggerDetails": {
            "description": "Details about the trigger for the job outcome",
            "name": "JobOutcomeTriggerDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:JobOutcomeTriggerType"
                  }
                },
                {
                  "key": "audience",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobOutcomeTriggerAudience"
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeTrigger": {
            "name": "JobOutcomeTrigger",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:JobOutcomeTriggerType"
                  },
                  "displayName": "Job Outcome Trigger Type"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:JobOutcomeTriggerDetails"
                  },
                  "displayName": "Job Outcome Trigger Details"
                }
              ]
            }
          },
          "type_jobs:JobOutcome": {
            "description": "Outcome summary of a job",
            "name": "JobOutcome",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "acknowledge",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "trigger",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobOutcomeTrigger"
                    }
                  }
                },
                {
                  "key": "buttonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "next",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobOutcomeNext"
                    }
                  }
                },
                {
                  "key": "heading",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "hideDefaultButton",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNext": {
            "name": "JobOutcomeNext",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "id",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextId"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "url",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextUrl"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "download",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextDownload"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "files",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextFiles"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "wait",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextWait"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "snapshot",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextSnapshot"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "retry",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextRetry"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "view",
                  "additionalProperties": {
                    "extends": ["type_jobs:JobOutcomeNextView"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextId": {
            "name": "JobOutcomeNextId",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "query",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextUrl": {
            "name": "JobOutcomeNextUrl",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextDownload": {
            "name": "JobOutcomeNextDownload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "fileName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextFileObject": {
            "name": "JobOutcomeNextFileObject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fileId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextFiles": {
            "name": "JobOutcomeNextFiles",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "files",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:JobOutcomeNextFileObject"
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextWait": {
            "name": "JobOutcomeNextWait",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fade",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "confetti",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextRetry": {
            "name": "JobOutcomeNextRetry",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextSnapshot": {
            "name": "JobOutcomeNextSnapshot",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "snapshotId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sheetId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobOutcomeNextView": {
            "name": "JobOutcomeNextView",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sheetId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "An array of field keys from the sheet",
                  "key": "hiddenColumns",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobCancelDetails": {
            "description": "Info about the reason the job was canceled",
            "name": "JobCancelDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobSplitDetails": {
            "description": "Info about the reason the job was split",
            "name": "JobSplitDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "parts",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:JobParts"
                  }
                },
                {
                  "key": "runInParallel",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobParts": {
            "description": "Info about the number of parts to create",
            "name": "JobParts",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_jobs:JobPartsArray"
                  },
                  "displayName": "Job Parts Array"
                }
              ]
            }
          },
          "type_jobs:JobPartsArray": {
            "description": "Data for each of the job parts",
            "name": "JobPartsArray",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "map",
                  "keyType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "valueType": {
                    "type": "unknown"
                  }
                }
              }
            }
          },
          "type_jobs:JobExecutionPlan": {
            "description": "The execution plan for a job, for example, for a map job, the execution plan is the mapping of the source sheet to the destination sheet.",
            "name": "JobExecutionPlan",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fieldMapping",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:Edge"
                    }
                  }
                },
                {
                  "key": "unmappedSourceFields",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:SourceField"
                    }
                  }
                },
                {
                  "key": "unmappedDestinationFields",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:DestinationField"
                    }
                  }
                },
                {
                  "key": "programId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:JobExecutionPlanConfig": {
            "description": "The execution plan for a job, for example, for a map job, the execution plan is the mapping of the source sheet to the destination sheet.",
            "name": "JobExecutionPlanConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fieldMapping",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:Edge"
                      }
                    }
                  }
                },
                {
                  "key": "unmappedSourceFields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:SourceField"
                      }
                    }
                  }
                },
                {
                  "key": "unmappedDestinationFields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:DestinationField"
                      }
                    }
                  }
                },
                {
                  "key": "programId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:Edge": {
            "name": "Edge",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the source field",
                  "key": "sourceField",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:Property"
                  }
                },
                {
                  "description": "The description of the destination field",
                  "key": "destinationField",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:Property"
                  }
                },
                {
                  "description": "A list of preview values of the data in the destination field",
                  "key": "preview",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "Only available if one or more of the destination fields is of type enum. Provides category mapping.",
                  "key": "enumDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:EnumDetails"
                    }
                  }
                },
                {
                  "description": "Metadata about the edge",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:Metadata"
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:SourceField": {
            "name": "SourceField",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the source field",
                  "key": "sourceField",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:Property"
                  }
                },
                {
                  "description": "A list of preview values of the data in the source field",
                  "key": "preview",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:DestinationField": {
            "name": "DestinationField",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the destination field",
                  "key": "destinationField",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:Property"
                  }
                },
                {
                  "description": "A list of preview values of the data in the destination field",
                  "key": "preview",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:EnumDetails": {
            "description": "Only available if one or more of the destination fields is of type enum. Provides category mapping.",
            "name": "EnumDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The mapping of source values to destination values",
                  "key": "mapping",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:CategoryMapping"
                    }
                  }
                },
                {
                  "description": "A list of source values that are not mapped from",
                  "key": "unusedSourceValues",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:EnumValue"
                      }
                    }
                  }
                },
                {
                  "description": "A list of destination values that are not mapped to",
                  "key": "unusedDestinationValues",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:EnumValue"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:EnumValue": {
            "name": "EnumValue",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:Metadata": {
            "name": "Metadata",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "certainty",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:Certainty"
                    }
                  }
                },
                {
                  "key": "confidence",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:Certainty": {
            "name": "Certainty",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "absolute"
                },
                {
                  "value": "strong"
                },
                {
                  "value": "moderate"
                },
                {
                  "value": "weak"
                }
              ]
            }
          },
          "type_jobs:CategoryMapping": {
            "name": "CategoryMapping",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The source value to map from",
                  "key": "sourceValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:EnumValue"
                    }
                  }
                },
                {
                  "description": "The destination value to map to",
                  "key": "destinationValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_jobs:EnumValue"
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:FindAndReplaceJobConfig": {
            "name": "FindAndReplaceJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The filter to apply to the records",
                  "key": "filter",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Filter"
                    }
                  }
                },
                {
                  "description": "The field to filter on",
                  "key": "filterField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FilterField"
                    }
                  }
                },
                {
                  "description": "The value to search for",
                  "key": "searchValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchValue"
                    }
                  }
                },
                {
                  "description": "The field to search for the search value in",
                  "key": "searchField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchField"
                    }
                  }
                },
                {
                  "description": "The FFQL query to filter records",
                  "key": "q",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records",
                  "key": "ids",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  }
                },
                {
                  "description": "A value to find for a given field in a sheet. Wrap the value in \"\" for exact match",
                  "key": "find",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:CellValueUnion"
                    }
                  }
                },
                {
                  "description": "The value to replace found values with",
                  "key": "replace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:CellValueUnion"
                    }
                  }
                },
                {
                  "description": "A unique key used to identify a field in a sheet",
                  "key": "fieldKey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "If specified, a snapshot will be generated with this label",
                  "key": "snapshotLabel",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:ExportJobConfig": {
            "name": "ExportJobConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "options",
                  "valueType": {
                    "type": "id",
                    "value": "type_jobs:ExportOptions"
                  }
                }
              ]
            }
          },
          "type_jobs:ExportOptions": {
            "name": "ExportOptions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Deprecated, use `commitId` instead",
                  "key": "versionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:VersionId"
                    }
                  }
                },
                {
                  "description": "If provided, the snapshot version of the workbook will be used for the export",
                  "key": "commitId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:CommitId"
                    }
                  }
                },
                {
                  "description": "The field to sort the records on",
                  "key": "sortField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SortField"
                    }
                  }
                },
                {
                  "description": "The direction to sort the records",
                  "key": "sortDirection",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SortDirection"
                    }
                  }
                },
                {
                  "description": "The filter to apply to the records",
                  "key": "filter",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Filter"
                    }
                  }
                },
                {
                  "description": "The field to filter on",
                  "key": "filterField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FilterField"
                    }
                  }
                },
                {
                  "description": "The value to search for",
                  "key": "searchValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchValue"
                    }
                  }
                },
                {
                  "description": "The field to search for the search value in",
                  "key": "searchField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchField"
                    }
                  }
                },
                {
                  "description": "The FFQL query to filter records",
                  "key": "q",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records",
                  "key": "ids",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_jobs:EmptyObject": {
            "name": "EmptyObject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_mapping:ProgramConfig": {
            "name": "ProgramConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Source schema",
                  "key": "source",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:SheetConfig"
                  }
                },
                {
                  "description": "Destination schema",
                  "key": "destination",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:SheetConfig"
                  }
                },
                {
                  "description": "ID of the family to add the program to",
                  "key": "familyId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FamilyId"
                    }
                  }
                },
                {
                  "description": "Namespace of the program",
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether to save the program for editing later. Defaults to false. If true, the response will contain an ID and access token.",
                  "key": "save",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_mapping:ProgramsResponse": {
            "name": "ProgramsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_mapping:Program"
                    }
                  }
                }
              ]
            }
          },
          "type_mapping:ProgramResponse": {
            "name": "ProgramResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_mapping:Program"
                  }
                }
              ]
            }
          },
          "type_mapping:Program": {
            "name": "Program",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Mapping rules",
                  "key": "rules",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_mapping:MappingRuleOrConfig"
                    }
                  }
                },
                {
                  "description": "If this program was saved, this is the ID of the program",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Namespace of the program",
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Family ID of the program, if it belongs to a family",
                  "key": "familyId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FamilyId"
                    }
                  }
                },
                {
                  "description": "If this program was saved, this is the time it was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "If this program was saved, this is the user ID of the creator",
                  "key": "createdBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:UserId"
                    }
                  }
                },
                {
                  "description": "Source keys",
                  "key": "sourceKeys",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Destination keys",
                  "key": "destinationKeys",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Summary of the mapping rules",
                  "key": "summary",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_mapping:ProgramSummary"
                    }
                  }
                },
                {
                  "description": "If this program was saved, this token allows you to modify the program",
                  "key": "accessToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_mapping:ProgramSummary": {
            "name": "ProgramSummary",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Total number of mapping rules",
                  "key": "totalRuleCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Number of mapping rules added",
                  "key": "addedRuleCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Number of mapping rules deleted",
                  "key": "deletedRuleCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_mapping:MappingRuleConfig": {
            "name": "MappingRuleConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Name of the mapping rule",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "Time the mapping rule was last updated",
                  "key": "acceptedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "User ID of the contributor of the mapping rule",
                  "key": "acceptedBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:UserId"
                    }
                  }
                },
                {
                  "description": "Metadata of the mapping rule",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_mapping:MappingRule": {
            "name": "MappingRule",
            "shape": {
              "type": "object",
              "extends": ["type_mapping:MappingRuleConfig"],
              "properties": [
                {
                  "description": "ID of the mapping rule",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:MappingId"
                  }
                },
                {
                  "description": "Confidence of the mapping rule",
                  "key": "confidence",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "User ID of the user who suggested the mapping rule",
                  "key": "createdBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:UserId"
                    }
                  }
                },
                {
                  "description": "Time the mapping rule was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Time the mapping rule was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Time the mapping rule was deleted",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_mapping:MappingRuleOrConfig": {
            "name": "MappingRuleOrConfig",
            "shape": {
              "type": "object",
              "extends": ["type_mapping:MappingRuleConfig"],
              "properties": [
                {
                  "description": "ID of the mapping rule",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:MappingId"
                    }
                  }
                },
                {
                  "description": "Confidence of the mapping rule",
                  "key": "confidence",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "User ID of the creator of the mapping rule",
                  "key": "createdBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:UserId"
                    }
                  }
                },
                {
                  "description": "Time the mapping rule was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Time the mapping rule was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Time the mapping rule was deleted",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_mapping:CreateMappingRulesRequest": {
            "name": "CreateMappingRulesRequest",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_mapping:MappingRuleConfig"
                }
              }
            }
          },
          "type_mapping:UpdateMappingRulesRequest": {
            "name": "UpdateMappingRulesRequest",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_mapping:MappingRule"
                }
              }
            }
          },
          "type_mapping:MappingRuleResponse": {
            "name": "MappingRuleResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_mapping:MappingRule"
                  }
                }
              ]
            }
          },
          "type_mapping:MappingRulesResponse": {
            "name": "MappingRulesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_mapping:MappingRule"
                    }
                  }
                }
              ]
            }
          },
          "type_property:Property": {
            "name": "Property",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "string",
                  "additionalProperties": {
                    "extends": ["type_property:StringProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "number",
                  "additionalProperties": {
                    "extends": ["type_property:NumberProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "boolean",
                  "additionalProperties": {
                    "extends": ["type_property:BooleanProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "date",
                  "additionalProperties": {
                    "extends": ["type_property:DateProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "enum",
                  "additionalProperties": {
                    "extends": ["type_property:EnumProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "reference",
                  "additionalProperties": {
                    "extends": ["type_property:ReferenceProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "reference-list",
                  "additionalProperties": {
                    "extends": ["type_property:ReferenceListProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "string-list",
                  "additionalProperties": {
                    "extends": ["type_property:StringListProperty"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "enum-list",
                  "additionalProperties": {
                    "extends": ["type_property:EnumListProperty"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_property:BaseProperty": {
            "name": "BaseProperty",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "User friendly field name",
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A short description of the field. Markdown syntax is supported.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "constraints",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_property:Constraint"
                      }
                    }
                  }
                },
                {
                  "key": "readonly",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "appearance",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:FieldAppearance"
                    }
                  }
                },
                {
                  "description": "An array of actions that end users can perform on this Column.",
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                },
                {
                  "description": "Useful for any contextual metadata regarding the schema. Store any valid json here.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "A unique presentation for a field in the UI.",
                  "key": "treatments",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "alternativeNames",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_property:ArrayableProperty": {
            "name": "ArrayableProperty",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Will allow multiple values and store as an array",
                  "key": "isArray",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_property:StringProperty": {
            "description": "Defines a property that should be stored and read as a basic string. Database engines should expect any length of text to be provided here unless explicitly defined in the config.",
            "name": "StringProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty"],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:StringConfig"
                    }
                  }
                }
              ]
            }
          },
          "type_property:StringListProperty": {
            "description": "Defines a property that should be stored and read as an array of strings. Database engines should expect any number of items to be provided here. The maximum number of items that can be in this list is `100`.",
            "name": "StringListProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty"],
              "properties": []
            }
          },
          "type_property:NumberProperty": {
            "description": "Defines a property that should be stored and read as either an integer or floating point number. Database engines should look at the configuration to determine ideal storage format.",
            "name": "NumberProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty", "type_property:ArrayableProperty"],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:NumberConfig"
                    }
                  }
                }
              ]
            }
          },
          "type_property:NumberConfig": {
            "name": "NumberConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Number of decimal places to round data to",
                  "availability": "Deprecated",
                  "key": "decimalPlaces",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_property:BooleanProperty": {
            "description": "A `true` or `false` value type. Matching engines should attempt to resolve all common ways of representing this value and it should usually be displayed as a checkbox.",
            "name": "BooleanProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty"],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:BooleanPropertyConfig"
                    }
                  }
                }
              ]
            }
          },
          "type_property:BooleanPropertyConfig": {
            "name": "BooleanPropertyConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Allow a neither true or false state to be stored as `null`",
                  "key": "allowIndeterminate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_property:DateProperty": {
            "description": "Store a field as a GMT date. Data hooks must convert this value into a `YYYY-MM-DD` format in order for it to be considered a valid value. Datetime should be a separate and future supported value as it must consider timezone.",
            "name": "DateProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty"],
              "properties": []
            }
          },
          "type_property:EnumProperty": {
            "description": "Defines an enumerated list of options for the user to select from. Matching tooling attempts to resolve incoming data assigment to a valid option. The maximum number of options for this list is `100`. For larger lists, users should use the reference or future `lookup` types.",
            "name": "EnumProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty", "type_property:ArrayableProperty"],
              "properties": [
                {
                  "description": "Will allow multiple values and store / provide the values in an array if set. Not all field types support arrays.",
                  "key": "multi",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:EnumPropertyConfig"
                  }
                }
              ]
            }
          },
          "type_property:EnumListProperty": {
            "description": "Defines an array of values selected from an enumerated list of options. Matching tooling attempts to resolve incoming data assigment to a valid option. The maximum number of items that can be in this list is `100`.",
            "name": "EnumListProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty"],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:EnumPropertyConfig"
                  }
                }
              ]
            }
          },
          "type_property:EnumPropertyConfig": {
            "name": "EnumPropertyConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Permit the user to create new options for this specific field.",
                  "key": "allowCustom",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "options",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:EnumPropertyOption"
                    }
                  }
                }
              ]
            }
          },
          "type_property:EnumPropertyOption": {
            "name": "EnumPropertyOption",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A visual label for this option, defaults to value if not provided",
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A short description for this option",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An optional color to assign this option",
                  "key": "color",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A reference pointer to a previously registered icon",
                  "key": "icon",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An arbitrary JSON object to be associated with this option and made available to hooks",
                  "key": "meta",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The value or ID of this option. This value will be sent in egress. The type is a string | integer | boolean.",
                  "key": "value",
                  "valueType": {
                    "type": "unknown"
                  }
                },
                {
                  "description": "Alternative names to match this enum option to",
                  "key": "alternativeNames",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_property:ReferenceProperty": {
            "description": "Defines a reference to another sheet. Links should be established automatically by the matching engine or similar upon an evaluation of unique or similar columns between datasets.",
            "name": "ReferenceProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty", "type_property:ArrayableProperty"],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:ReferencePropertyConfig"
                  }
                }
              ]
            }
          },
          "type_property:ReferenceListProperty": {
            "description": "Defines an array of values referenced from another sheet. Links should be established automatically by the matching engine or similar upon an evaluation of unique or similar columns between datasets.",
            "name": "ReferenceListProperty",
            "shape": {
              "type": "object",
              "extends": ["type_property:BaseProperty", "type_property:ArrayableProperty"],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:ReferenceListPropertyConfig"
                  }
                }
              ]
            }
          },
          "type_property:ReferencePropertyConfig": {
            "name": "ReferencePropertyConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Full path reference to a sheet configuration. Must be in the same workbook.",
                  "key": "ref",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Key of the property to use as the reference key. Defaults to `id`",
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The type of relationship this defines",
                  "availability": "Deprecated",
                  "key": "relationship",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:ReferencePropertyRelationship"
                    }
                  }
                }
              ]
            }
          },
          "type_property:ReferencePropertyRelationship": {
            "name": "ReferencePropertyRelationship",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "has-one"
                },
                {
                  "value": "has-many"
                }
              ]
            }
          },
          "type_property:ReferenceListPropertyConfig": {
            "name": "ReferenceListPropertyConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Full path reference to a sheet configuration. Must be in the same workbook.",
                  "key": "ref",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Key of the property to use as the reference key. Defaults to `id`",
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_property:Constraint": {
            "name": "Constraint",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "required",
                  "additionalProperties": {
                    "extends": [],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "unique",
                  "additionalProperties": {
                    "extends": ["type_property:UniqueConstraint"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "computed",
                  "additionalProperties": {
                    "extends": [],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "external",
                  "additionalProperties": {
                    "extends": ["type_property:ExternalConstraint"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "stored",
                  "additionalProperties": {
                    "extends": ["type_property:StoredConstraint"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_property:UniqueConstraint": {
            "name": "UniqueConstraint",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:UniqueConstraintConfig"
                    }
                  }
                }
              ]
            }
          },
          "type_property:ExternalConstraint": {
            "name": "ExternalConstraint",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "validator",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_property:StoredConstraint": {
            "name": "StoredConstraint",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Must match the constraint validator name.",
                  "key": "validator",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The version of the stored constraint to use. (Defaults to version 1.)",
                  "key": "version",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "A short description of what this constraint configuration does, example - values between 1 and 100",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_property:UniqueConstraintConfig": {
            "name": "UniqueConstraintConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Ignore casing when determining uniqueness",
                  "key": "caseSensitive",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Do not flag empty values as duplicate",
                  "key": "ignoreEmpty",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_property:StringConfig": {
            "name": "StringConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "size",
                  "valueType": {
                    "type": "id",
                    "value": "type_property:StringConfigOptions"
                  }
                }
              ]
            }
          },
          "type_property:StringConfigOptions": {
            "description": "How much text should be storeable in this field",
            "name": "StringConfigOptions",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "description": "up to 255 characters",
                  "value": "tiny"
                },
                {
                  "description": "64kb (default)",
                  "value": "normal"
                },
                {
                  "description": "16mb",
                  "value": "medium"
                },
                {
                  "description": "4gb",
                  "value": "long"
                }
              ]
            }
          },
          "type_property:FieldAppearance": {
            "description": "Control the appearance of this field when it's displayed in a table or input",
            "name": "FieldAppearance",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "size",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:FieldSize"
                    }
                  }
                }
              ]
            }
          },
          "type_property:FieldSize": {
            "description": "The default visual sizing. This sizing may be overridden by a user",
            "name": "FieldSize",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "xs"
                },
                {
                  "value": "s"
                },
                {
                  "value": "m"
                },
                {
                  "value": "l"
                },
                {
                  "value": "xl"
                }
              ]
            }
          },
          "type_records:RecordsResponse": {
            "name": "RecordsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:RecordsResponseData"
                  }
                }
              ]
            }
          },
          "type_records:RecordsResponseData": {
            "name": "RecordsResponseData",
            "shape": {
              "type": "object",
              "extends": ["type_commons:SuccessData"],
              "properties": [
                {
                  "key": "records",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:RecordsWithLinks"
                    }
                  }
                },
                {
                  "key": "counts",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:RecordCounts"
                    }
                  }
                },
                {
                  "description": "Deprecated, use `commitId` instead.",
                  "availability": "Deprecated",
                  "key": "versionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:VersionId"
                    }
                  }
                },
                {
                  "key": "commitId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:CommitId"
                    }
                  }
                }
              ]
            }
          },
          "type_records:GetRecordsResponse": {
            "name": "GetRecordsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:GetRecordsResponseData"
                  }
                }
              ]
            }
          },
          "type_records:GetRecordsResponseData": {
            "description": "A list of records with optional record counts",
            "name": "GetRecordsResponseData",
            "shape": {
              "type": "object",
              "extends": ["type_commons:SuccessData"],
              "properties": [
                {
                  "key": "records",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:RecordsWithLinks"
                  }
                },
                {
                  "key": "counts",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:RecordCounts"
                    }
                  }
                },
                {
                  "description": "Deprecated, use `commitId` instead.",
                  "availability": "Deprecated",
                  "key": "versionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:VersionId"
                    }
                  }
                },
                {
                  "key": "commitId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:CommitId"
                    }
                  }
                }
              ]
            }
          },
          "type_records:FieldRecordCounts": {
            "name": "FieldRecordCounts",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "valid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "error",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "empty",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_records:RecordCounts": {
            "name": "RecordCounts",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "valid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "error",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "availability": "Deprecated",
                  "key": "errorsByField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "Counts for valid, error, and total records grouped by field key",
                  "availability": "Beta",
                  "key": "byField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "id",
                        "value": "type_records:FieldRecordCounts"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_records:RecordsWithLinks": {
            "description": "List of Record objects, including links to related rows",
            "name": "RecordsWithLinks",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_records:RecordWithLinks"
                }
              }
            }
          },
          "type_records:RecordWithLinks": {
            "description": "A single row of data in a Sheet, including links to related rows",
            "name": "RecordWithLinks",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:RecordId"
                  }
                },
                {
                  "key": "values",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:RecordDataWithLinks"
                  }
                },
                {
                  "key": "valid",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_records:ValidationMessage"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:RecordConfig"
                    }
                  }
                }
              ]
            }
          },
          "type_records:RecordDataWithLinks": {
            "description": "A single row of data in a Sheet, including links to related rows",
            "name": "RecordDataWithLinks",
            "shape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_records:CellValueWithLinks"
                }
              }
            }
          },
          "type_records:CellValueWithLinks": {
            "name": "CellValueWithLinks",
            "shape": {
              "type": "object",
              "extends": ["type_records:CellValue"],
              "properties": [
                {
                  "key": "links",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:Records"
                    }
                  }
                }
              ]
            }
          },
          "type_records:RecordBase": {
            "name": "RecordBase",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:RecordId"
                  }
                },
                {
                  "description": "Deprecated, use `commitId` instead.",
                  "availability": "Deprecated",
                  "key": "versionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:VersionId"
                    }
                  }
                },
                {
                  "key": "commitId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:CommitId"
                    }
                  }
                },
                {
                  "description": "Auto-generated value based on whether the record contains a field with an error message. Cannot be set via the API.",
                  "key": "valid",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "This record level `messages` property is deprecated and no longer stored or used. Use the `messages` property on the individual cell values instead. This property will be removed in a future release.",
                  "availability": "Deprecated",
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_records:ValidationMessage"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:RecordConfig"
                    }
                  }
                }
              ]
            }
          },
          "type_records:Records": {
            "description": "List of Record objects",
            "name": "Records",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_records:Record"
                }
              }
            }
          },
          "type_records:Record": {
            "description": "A single row of data in a Sheet",
            "name": "Record",
            "shape": {
              "type": "object",
              "extends": ["type_records:RecordBase"],
              "properties": [
                {
                  "key": "values",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:RecordData"
                  }
                }
              ]
            }
          },
          "type_records:RecordData": {
            "description": "A single row of data in a Sheet",
            "name": "RecordData",
            "shape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_records:CellValue"
                }
              }
            }
          },
          "type_records:CellValue": {
            "name": "CellValue",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "valid",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "messages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_records:ValidationMessage"
                      }
                    }
                  }
                },
                {
                  "description": "Deprecated, use record level metadata instead.",
                  "availability": "Deprecated",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "key": "value",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:CellValueUnion"
                    }
                  }
                },
                {
                  "key": "layer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_records:CellValueUnion": {
            "name": "CellValueUnion",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "type": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_records:DiffRecordsResponse": {
            "name": "DiffRecordsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:DiffRecords"
                  }
                }
              ]
            }
          },
          "type_records:DiffRecords": {
            "description": "List of DiffRecord objects",
            "name": "DiffRecords",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_records:DiffRecord"
                }
              }
            }
          },
          "type_records:RecordConfig": {
            "description": "Configuration of a record or specific fields in the record",
            "name": "RecordConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "readonly",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "fields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "id",
                        "value": "type_records:CellConfig"
                      }
                    }
                  }
                },
                {
                  "key": "markedForDeletion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_records:CellConfig": {
            "description": "CellConfig",
            "name": "CellConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "readonly",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_records:DiffRecord": {
            "name": "DiffRecord",
            "shape": {
              "type": "object",
              "extends": ["type_records:RecordBase"],
              "properties": [
                {
                  "key": "values",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:DiffData"
                  }
                },
                {
                  "key": "resolves",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_data-clips:Resolve"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_records:DiffData": {
            "name": "DiffData",
            "shape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_records:DiffValue"
                }
              }
            }
          },
          "type_records:DiffValue": {
            "name": "DiffValue",
            "shape": {
              "type": "object",
              "extends": ["type_records:CellValue"],
              "properties": [
                {
                  "key": "snapshotValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:CellValueUnion"
                    }
                  }
                },
                {
                  "key": "clipValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:CellValueUnion"
                    }
                  }
                }
              ]
            }
          },
          "type_records:ValidationMessage": {
            "description": "Record data validation messages",
            "name": "ValidationMessage",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "field",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:ValidationType"
                    }
                  }
                },
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:ValidationSource"
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "This JSONPath is based on the root of mapped cell object.",
                  "key": "path",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:JSONPathString"
                    }
                  }
                }
              ]
            }
          },
          "type_records:ValidationType": {
            "name": "ValidationType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "error"
                },
                {
                  "value": "warn"
                },
                {
                  "value": "info"
                }
              ]
            }
          },
          "type_records:ValidationSource": {
            "name": "ValidationSource",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "required-constraint"
                },
                {
                  "value": "unique-constraint"
                },
                {
                  "value": "custom-logic"
                },
                {
                  "value": "unlinked"
                },
                {
                  "value": "invalid-option"
                },
                {
                  "value": "is-artifact"
                }
              ]
            }
          },
          "type_roles:ListRolesResponse": {
            "name": "ListRolesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_roles:RoleResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_roles:RoleResponse": {
            "name": "RoleResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:RoleId"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "accountId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_roles:ListActorRolesResponse": {
            "name": "ListActorRolesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_roles:ActorRoleResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_roles:ActorRoleResponse": {
            "name": "ActorRoleResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ActorRoleId"
                  }
                },
                {
                  "key": "roleId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:RoleId"
                  }
                },
                {
                  "key": "actorId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ActorIdUnion"
                  }
                },
                {
                  "key": "resourceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_roles:ResourceIdUnion"
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_roles:AssignActorRoleRequest": {
            "name": "AssignActorRoleRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "roleId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:RoleId"
                  }
                },
                {
                  "key": "resourceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_roles:ResourceIdUnion"
                  }
                }
              ]
            }
          },
          "type_roles:ResourceIdUnion": {
            "name": "ResourceIdUnion",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  },
                  "displayName": "Account ID"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  },
                  "displayName": "Environment ID"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  },
                  "displayName": "Space ID"
                }
              ]
            }
          },
          "type_roles:AssignRoleResponse": {
            "name": "AssignRoleResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_roles:AssignRoleResponseData"
                  }
                }
              ]
            }
          },
          "type_roles:AssignRoleResponseData": {
            "name": "AssignRoleResponseData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ActorRoleId"
                  }
                },
                {
                  "key": "roleId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:RoleId"
                  }
                },
                {
                  "key": "actorId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ActorIdUnion"
                  }
                },
                {
                  "key": "resourceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_roles:ResourceIdUnion"
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_secrets:SecretsResponse": {
            "name": "SecretsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_secrets:Secret"
                    }
                  }
                }
              ]
            }
          },
          "type_secrets:WriteSecret": {
            "description": "The properties required to write to a secret. Value is the only mutable property. Name, environmentId, spaceId (optional) are used for finding the secret.",
            "name": "WriteSecret",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The reference name for a secret.",
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_secrets:SecretName"
                  }
                },
                {
                  "description": "The secret value. This is hidden in the UI.",
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_secrets:SecretValue"
                  }
                },
                {
                  "description": "The Environment of the secret.",
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "description": "The Space of the secret.",
                  "key": "spaceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  }
                },
                {
                  "description": "The Actor of the secret.",
                  "key": "actorId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:ActorIdUnion"
                    }
                  }
                }
              ]
            }
          },
          "type_secrets:Secret": {
            "description": "The value of a secret",
            "name": "Secret",
            "shape": {
              "type": "object",
              "extends": ["type_secrets:WriteSecret"],
              "properties": [
                {
                  "description": "The ID of the secret.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SecretId"
                  }
                }
              ]
            }
          },
          "type_secrets:SecretName": {
            "description": "The name of a secret. Minimum 1 character, maximum 1024",
            "name": "SecretName",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_secrets:SecretValue": {
            "description": "The value of a secret. Minimum 1 character, maximum 1024",
            "name": "SecretValue",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_sheets:ListSheetsResponse": {
            "name": "ListSheetsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_sheets:Sheet"
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:SheetResponse": {
            "name": "SheetResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:Sheet"
                  }
                }
              ]
            }
          },
          "type_sheets:Sheet": {
            "description": "A place to store tabular data",
            "name": "Sheet",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the Sheet.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "description": "The ID of the Workbook.",
                  "key": "workbookId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:WorkbookId"
                  }
                },
                {
                  "description": "The name of the Sheet.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The slug of the Sheet.",
                  "key": "slug",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Describes shape of data as well as behavior",
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:SheetConfig"
                  }
                },
                {
                  "description": "Useful for any contextual metadata regarding the sheet. Store any valid json",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "The scoped namespace of the Sheet.",
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The actor who locked the Sheet.",
                  "key": "lockedBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Date the sheet was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the sheet was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The time the Sheet was locked.",
                  "key": "lockedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The precomputed counts of records in the Sheet (may not exist).",
                  "key": "recordCounts",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:RecordCounts"
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:SheetConfig": {
            "description": "Describes shape of data as well as behavior",
            "name": "SheetConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of your Sheet as it will appear to your end users.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A sentence or two describing the purpose of your Sheet.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for your Sheet.",
                  "key": "slug",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A boolean specifying whether or not this sheet is read only. Read only sheets are not editable by end users.",
                  "key": "readonly",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Allow end users to add fields during mapping.",
                  "key": "allowAdditionalFields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The minimum confidence required to automatically map a field",
                  "key": "mappingConfidenceThreshold",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Control Sheet-level access for all users.",
                  "key": "access",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:SheetAccess"
                      }
                    }
                  }
                },
                {
                  "description": "Where you define your Sheet’s data schema.",
                  "key": "fields",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_property:Property"
                    }
                  }
                },
                {
                  "description": "An array of actions that end users can perform on this Sheet.",
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                },
                {
                  "description": "Useful for any contextual metadata regarding the schema. Store any valid json",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "An array of constraints that end users can perform on this Sheet.",
                  "key": "constraints",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:SheetConstraint"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:SheetConfigUpdate": {
            "description": "Changes to make to an existing sheet config",
            "name": "SheetConfigUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of your Sheet as it will appear to your end users.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A sentence or two describing the purpose of your Sheet.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for your Sheet. **Required when updating a Workbook.**",
                  "key": "slug",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A boolean specifying whether or not this sheet is read only. Read only sheets are not editable by end users.",
                  "key": "readonly",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Allow end users to add fields during mapping.",
                  "key": "allowAdditionalFields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The minimum confidence required to automatically map a field",
                  "key": "mappingConfidenceThreshold",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Control Sheet-level access for all users.",
                  "key": "access",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:SheetAccess"
                      }
                    }
                  }
                },
                {
                  "description": "Where you define your Sheet’s data schema.",
                  "key": "fields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_property:Property"
                      }
                    }
                  }
                },
                {
                  "description": "An array of actions that end users can perform on this Sheet.",
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:SheetConstraint": {
            "name": "SheetConstraint",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "unique",
                  "additionalProperties": {
                    "extends": ["type_sheets:CompositeUniqueConstraint"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "external",
                  "additionalProperties": {
                    "extends": ["type_sheets:ExternalSheetConstraint"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_sheets:ExternalSheetConstraint": {
            "name": "ExternalSheetConstraint",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "validator",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The fields that must be unique together",
                  "key": "fields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:CompositeUniqueConstraint": {
            "name": "CompositeUniqueConstraint",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the constraint",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The fields that must be unique together",
                  "key": "fields",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Fields that, when empty, will cause this unique constraint to be ignored",
                  "key": "requiredFields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "strategy",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:CompositeUniqueConstraintStrategy"
                  }
                }
              ]
            }
          },
          "type_sheets:CompositeUniqueConstraintStrategy": {
            "name": "CompositeUniqueConstraintStrategy",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "description": "A hash of the fields will be used to determine uniqueness",
                  "value": "hash"
                },
                {
                  "description": "The values of the fields will be concatenated to determine uniqueness",
                  "value": "concat"
                }
              ]
            }
          },
          "type_sheets:SheetUpdate": {
            "description": "Changes to make to an existing sheet",
            "name": "SheetUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the Sheet.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SheetId"
                    }
                  }
                },
                {
                  "description": "The ID of the Workbook.",
                  "key": "workbookId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:WorkbookId"
                    }
                  }
                },
                {
                  "description": "Describes shape of data as well as behavior.",
                  "key": "config",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_sheets:SheetConfig"
                    }
                  }
                },
                {
                  "description": "Useful for any contextual metadata regarding the sheet. Store any valid json",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "The scoped namespace of the Sheet.",
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Date the sheet was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Date the sheet was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:SheetUpdateRequest": {
            "description": "Changes to make to an existing sheet",
            "name": "SheetUpdateRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the Sheet.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The slug of the Sheet.",
                  "key": "slug",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Useful for any contextual metadata regarding the sheet. Store any valid json",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:SheetConfigOrUpdate": {
            "name": "SheetConfigOrUpdate",
            "shape": {
              "type": "object",
              "extends": ["type_sheets:SheetConfigUpdate", "type_sheets:SheetUpdate"],
              "properties": []
            }
          },
          "type_sheets:RecordCountsResponse": {
            "name": "RecordCountsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:RecordCountsResponseData"
                  }
                }
              ]
            }
          },
          "type_sheets:RecordCountsResponseData": {
            "name": "RecordCountsResponseData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "counts",
                  "valueType": {
                    "type": "id",
                    "value": "type_records:RecordCounts"
                  }
                },
                {
                  "key": "success",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:SheetAccess": {
            "name": "SheetAccess",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "*"
                },
                {
                  "value": "add"
                },
                {
                  "value": "edit"
                },
                {
                  "value": "delete"
                },
                {
                  "value": "import"
                }
              ]
            }
          },
          "type_sheets:CellsResponse": {
            "name": "CellsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:CellsResponseData"
                  }
                }
              ]
            }
          },
          "type_sheets:CellsResponseData": {
            "description": "Cell values grouped by field key",
            "name": "CellsResponseData",
            "shape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "type_sheets:CellValueWithCounts"
                  }
                }
              }
            }
          },
          "type_sheets:CellValueWithCounts": {
            "name": "CellValueWithCounts",
            "shape": {
              "type": "object",
              "extends": ["type_records:CellValue"],
              "properties": [
                {
                  "key": "counts",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_records:RecordCounts"
                    }
                  }
                }
              ]
            }
          },
          "type_sheets:FieldKey": {
            "description": "Returns results from the given field only. Otherwise all field cells are returned",
            "name": "FieldKey",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_sheets:Distinct": {
            "description": "When true, excludes duplicate values",
            "name": "Distinct",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_sheets:IncludeCounts": {
            "description": "When both distinct and includeCounts are true, the count of distinct field values will be returned",
            "name": "IncludeCounts",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_snapshots:SnapshotResponse": {
            "name": "SnapshotResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_snapshots:Snapshot"
                  }
                }
              ]
            }
          },
          "type_snapshots:SnapshotsResponse": {
            "name": "SnapshotsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_snapshots:Snapshot"
                    }
                  }
                }
              ]
            }
          },
          "type_snapshots:Snapshot": {
            "name": "Snapshot",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the Snapshot.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SnapshotId"
                  }
                },
                {
                  "description": "The ID of the Sheet.",
                  "key": "sheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "description": "The title of the Snapshot.",
                  "key": "label",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A summary of the Snapshot. This field is only available on the single get snapshot endpoint. It is not available for the list snapshots endpoint.",
                  "key": "summary",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_snapshots:SnapshotSummary"
                    }
                  }
                },
                {
                  "description": "The time the Snapshot was created.",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The actor who created the Snapshot.",
                  "key": "createdBy",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:UserId"
                  }
                }
              ]
            }
          },
          "type_snapshots:SnapshotSummary": {
            "name": "SnapshotSummary",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "createdSince",
                  "valueType": {
                    "type": "id",
                    "value": "type_snapshots:SummarySection"
                  }
                },
                {
                  "key": "updatedSince",
                  "valueType": {
                    "type": "id",
                    "value": "type_snapshots:SummarySection"
                  }
                },
                {
                  "key": "deletedSince",
                  "valueType": {
                    "type": "id",
                    "value": "type_snapshots:SummarySection"
                  }
                },
                {
                  "description": "The schema diff between the snapshot and the current sheet schema.",
                  "key": "schemaDiff",
                  "valueType": {
                    "type": "id",
                    "value": "type_snapshots:SchemaDiffRecord"
                  }
                },
                {
                  "description": "The sheet configuration at the time of the snapshot.",
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_sheets:SheetConfig"
                  }
                }
              ]
            }
          },
          "type_snapshots:RestoreOptions": {
            "name": "RestoreOptions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "created",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "updated",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "deleted",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_snapshots:SummarySection": {
            "name": "SummarySection",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "byField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_snapshots:ChangeType": {
            "description": "Options to filter records in a snapshot",
            "name": "ChangeType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "createdSince"
                },
                {
                  "value": "updatedSince"
                },
                {
                  "value": "deletedSince"
                }
              ]
            }
          },
          "type_snapshots:SchemaDiffRecord": {
            "name": "SchemaDiffRecord",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_snapshots:SchemaDiffData"
              }
            }
          },
          "type_snapshots:SchemaDiffData": {
            "name": "SchemaDiffData",
            "shape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "type_snapshots:SchemaDiffEnum"
                }
              }
            }
          },
          "type_snapshots:SchemaDiffEnum": {
            "name": "SchemaDiffEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "added"
                },
                {
                  "value": "removed"
                },
                {
                  "value": "unchanged"
                }
              ]
            }
          },
          "type_spaces:ListSpacesResponse": {
            "description": "List of Space objects",
            "name": "ListSpacesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_spaces:Space"
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:SpaceResponse": {
            "name": "SpaceResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_spaces:Space"
                  }
                }
              ]
            }
          },
          "type_spaces:Space": {
            "description": "A place to store your workbooks",
            "name": "Space",
            "shape": {
              "type": "object",
              "extends": ["type_spaces:InternalSpaceConfigBase"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "description": "Amount of workbooks in the space",
                  "key": "workbooksCount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Amount of files in the space",
                  "key": "filesCount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "createdByUserId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:UserId"
                    }
                  }
                },
                {
                  "description": "User name who created space",
                  "key": "createdByUserName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Date when space was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date when space was updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date when space was expired",
                  "key": "expiredAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "This date marks the most recent activity within the space, tracking actions to the second. Activities include creating or updating records in a sheet, uploading files, or modifying a workbook's configuration.",
                  "key": "lastActivityAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Guest link to the space",
                  "key": "guestLink",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the space",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The display order",
                  "key": "displayOrder",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Access token for the space",
                  "key": "accessToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Flag for collaborative (project) spaces",
                  "key": "isCollaborative",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Size information for the space",
                  "key": "size",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_spaces:SpaceSize"
                    }
                  }
                },
                {
                  "description": "Date when the space was upgraded",
                  "key": "upgradedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Type of guest authentication",
                  "key": "guestAuthentication",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_environments:GuestAuthenticationEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:SpaceSize": {
            "description": "The size of a space",
            "name": "SpaceSize",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "numUsers",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "pdv",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "numFiles",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:SpaceConfig": {
            "description": "Properties used to create a new Space",
            "name": "SpaceConfig",
            "shape": {
              "type": "object",
              "extends": ["type_spaces:InternalSpaceConfigBase"],
              "properties": [
                {
                  "description": "The name of the space",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The display order",
                  "key": "displayOrder",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "guestAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_environments:GuestAuthenticationEnum"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:InternalSpaceConfigBase": {
            "name": "InternalSpaceConfigBase",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "spaceConfigId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SpaceConfigId"
                    }
                  }
                },
                {
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "description": "The ID of the primary workbook for the space. This should not be included in create space requests.",
                  "key": "primaryWorkbookId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:WorkbookId"
                    }
                  }
                },
                {
                  "description": "Metadata for the space",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "The Space settings.",
                  "key": "settings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_spaces:SpaceSettings"
                    }
                  }
                },
                {
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                },
                {
                  "key": "access",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_spaces:SpaceAccess"
                      }
                    }
                  }
                },
                {
                  "key": "autoConfigure",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "labels",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "translationsPath",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "languageOverride",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Date when space was archived",
                  "key": "archivedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the App that space is associated with",
                  "key": "appId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:AppId"
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:SpaceSettings": {
            "description": "Settings for a space",
            "name": "SpaceSettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The sidebar configuration for the space. (This will eventually replace metadata.sidebarconfig)",
                  "key": "sidebarConfig",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_spaces:SpaceSidebarConfig"
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:SpaceSidebarConfig": {
            "name": "SpaceSidebarConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Used to set the order of workbooks in the sidebar. This will not affect workbooks that are pinned and workbooks that are not specified here will be sorted alphabetically.",
                  "key": "workbookSidebarOrder",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:WorkbookId"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:EventTokenResponse": {
            "name": "EventTokenResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_spaces:EventToken"
                  }
                }
              ]
            }
          },
          "type_spaces:EventToken": {
            "description": "Properties used to allow users to connect to the event bus",
            "name": "EventToken",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the Account.",
                  "key": "accountId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:AccountId"
                    }
                  }
                },
                {
                  "description": "The id of the event bus to subscribe to",
                  "key": "subscribeKey",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Time to live in minutes",
                  "key": "ttl",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "This should be your API key.",
                  "key": "token",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_spaces:GetSpacesSortField": {
            "name": "GetSpacesSortField",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "name"
                },
                {
                  "value": "workbooksCount"
                },
                {
                  "value": "filesCount"
                },
                {
                  "value": "environmentId"
                },
                {
                  "value": "createdByUserName"
                },
                {
                  "value": "createdAt"
                },
                {
                  "value": "lastActivityAt"
                }
              ]
            }
          },
          "type_spaces:SpaceAccess": {
            "name": "SpaceAccess",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "*"
                },
                {
                  "value": "upload"
                }
              ]
            }
          },
          "type_users:ListUsersResponse": {
            "name": "ListUsersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_users:User"
                    }
                  }
                },
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                }
              ]
            }
          },
          "type_users:UserResponse": {
            "name": "UserResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_users:User"
                  }
                }
              ]
            }
          },
          "type_users:UserWithRolesResponse": {
            "name": "UserWithRolesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_users:UserWithRoles"
                  }
                }
              ]
            }
          },
          "type_users:UserWithRoles": {
            "name": "UserWithRoles",
            "shape": {
              "type": "object",
              "extends": ["type_users:User"],
              "properties": [
                {
                  "key": "actorRoles",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_roles:ActorRoleResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_users:User": {
            "description": "Configurations for the user",
            "name": "User",
            "shape": {
              "type": "object",
              "extends": ["type_users:UserConfig"],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:UserId"
                  }
                },
                {
                  "key": "idp",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "idpRef",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "lastSeenAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "dashboard",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_users:UserConfig": {
            "description": "Properties used to create a new user",
            "name": "UserConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "accountId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:AccountId"
                  }
                }
              ]
            }
          },
          "type_users:ListUsersSortField": {
            "name": "ListUsersSortField",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "email"
                },
                {
                  "value": "name"
                },
                {
                  "value": "id"
                },
                {
                  "value": "idp"
                },
                {
                  "value": "idp_ref"
                },
                {
                  "value": "created_at"
                },
                {
                  "value": "updated_at"
                },
                {
                  "value": "last_seen_at"
                },
                {
                  "value": "dashboard"
                }
              ]
            }
          },
          "type_users:UserCreateAndInviteRequest": {
            "description": "Properties used to create a new user",
            "name": "UserCreateAndInviteRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "actorRoles",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_roles:AssignActorRoleRequest"
                    }
                  }
                }
              ]
            }
          },
          "type_versions:VersionResponse": {
            "name": "VersionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_versions:Version"
                  }
                }
              ]
            }
          },
          "type_versions:Version": {
            "name": "Version",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "versionId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:VersionId"
                  }
                }
              ]
            }
          },
          "type_views:ViewConfig": {
            "description": "The configuration of a view. Filters, sorting, and search query.",
            "name": "ViewConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Deprecated, use `commitId` instead.",
                  "availability": "Deprecated",
                  "key": "versionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:VersionId"
                    }
                  }
                },
                {
                  "key": "commitId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:CommitId"
                    }
                  }
                },
                {
                  "description": "Deprecated, use `sinceCommitId` instead.",
                  "availability": "Deprecated",
                  "key": "sinceVersionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:VersionId"
                    }
                  }
                },
                {
                  "key": "sinceCommitId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:CommitId"
                    }
                  }
                },
                {
                  "key": "sortField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SortField"
                    }
                  }
                },
                {
                  "key": "sortDirection",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SortDirection"
                    }
                  }
                },
                {
                  "key": "filter",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Filter"
                    }
                  }
                },
                {
                  "description": "Name of field by which to filter records",
                  "key": "filterField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:FilterField"
                    }
                  }
                },
                {
                  "key": "searchValue",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchValue"
                    }
                  }
                },
                {
                  "key": "searchField",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SearchField"
                    }
                  }
                },
                {
                  "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records. Maximum of 100 allowed.",
                  "key": "ids",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  }
                },
                {
                  "description": "Number of records to return in a page (default 10,000)",
                  "key": "pageSize",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Based on pageSize, which page of records to return (Note - numbers start at 1)",
                  "key": "pageNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "**DEPRECATED** Use GET /sheets/:sheetId/counts",
                  "availability": "Deprecated",
                  "key": "includeCounts",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The length of the record result set, returned as counts.total",
                  "key": "includeLength",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "If true, linked records will be included in the results. Defaults to false.",
                  "key": "includeLinks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Include error messages, defaults to false.",
                  "key": "includeMessages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "if \"for\" is provided, the query parameters will be pulled from the event payload",
                  "key": "for",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EventId"
                    }
                  }
                },
                {
                  "description": "An FFQL query used to filter the result set",
                  "key": "q",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_views:View": {
            "description": "A view",
            "name": "View",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the view",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:ViewId"
                  }
                },
                {
                  "description": "The associated sheet ID of the view",
                  "key": "sheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "description": "The name of the view",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The view filters of the view",
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_views:ViewConfig"
                  }
                },
                {
                  "description": "ID of the actor who created the view",
                  "key": "createdBy",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_views:ListViewsResponse": {
            "name": "ListViewsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pagination",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:Pagination"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_views:View"
                    }
                  }
                }
              ]
            }
          },
          "type_views:ViewResponse": {
            "name": "ViewResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_views:View"
                  }
                }
              ]
            }
          },
          "type_views:ViewCreate": {
            "name": "ViewCreate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sheetId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SheetId"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_views:ViewConfig"
                  }
                }
              ]
            }
          },
          "type_views:ViewUpdate": {
            "name": "ViewUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "config",
                  "valueType": {
                    "type": "id",
                    "value": "type_views:ViewConfig"
                  }
                }
              ]
            }
          },
          "type_workbooks:ListWorkbooksResponse": {
            "name": "ListWorkbooksResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_workbooks:Workbook"
                    }
                  }
                }
              ]
            }
          },
          "type_workbooks:WorkbookResponse": {
            "name": "WorkbookResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_workbooks:Workbook"
                  }
                }
              ]
            }
          },
          "type_workbooks:Workbook": {
            "description": "A collection of one or more sheets",
            "name": "Workbook",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "ID of the Workbook.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:WorkbookId"
                  }
                },
                {
                  "description": "Name of the Workbook.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Associated Space ID of the Workbook.",
                  "key": "spaceId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:SpaceId"
                  }
                },
                {
                  "description": "Associated Environment ID of the Workbook.",
                  "key": "environmentId",
                  "valueType": {
                    "type": "id",
                    "value": "type_commons:EnvironmentId"
                  }
                },
                {
                  "description": "A list of Sheets associated with the Workbook.",
                  "key": "sheets",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:Sheet"
                      }
                    }
                  }
                },
                {
                  "description": "A list of labels for the Workbook.",
                  "key": "labels",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "A list of Actions associated with the Workbook.",
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                },
                {
                  "description": "The Workbook settings.",
                  "key": "settings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_workbooks:WorkbookConfigSettings"
                    }
                  }
                },
                {
                  "description": "Metadata for the workbook",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "Treatments for the workbook",
                  "key": "treatments",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_workbooks:WorkbookTreatments"
                      }
                    }
                  }
                },
                {
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Date the workbook was last updated",
                  "key": "updatedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the workbook was created",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "Date the workbook was created",
                  "key": "expiredAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_workbooks:CreateWorkbookConfig": {
            "description": "Properties used to create a new Workbook",
            "name": "CreateWorkbookConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the Workbook.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "An optional list of labels for the Workbook.",
                  "key": "labels",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "Space to associate with the Workbook.",
                  "key": "spaceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  }
                },
                {
                  "description": "Environment to associate with the Workbook",
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "description": "Optional namespace to apply to the Workbook.",
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Sheets to create on the Workbook.",
                  "key": "sheets",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:SheetConfig"
                      }
                    }
                  }
                },
                {
                  "description": "Actions to create on the Workbook.",
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                },
                {
                  "description": "The Workbook settings.",
                  "key": "settings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_workbooks:WorkbookConfigSettings"
                    }
                  }
                },
                {
                  "description": "Metadata for the workbook",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "description": "Treatments for the workbook",
                  "key": "treatments",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_workbooks:WorkbookTreatments"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_workbooks:WorkbookConfigSettings": {
            "description": "Settings for a workbook",
            "name": "WorkbookConfigSettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether to track changes for this workbook. Defaults to false. Tracking changes on a workbook allows for disabling workbook and sheet actions while data in the workbook is still being processed. You must run a recordHook listener if you enable this feature.",
                  "key": "trackChanges",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "When noMappingRedirect is set to true, dragging a file into a sheet will not redirect to the mapping screen. Defaults to false.",
                  "key": "noMappingRedirect",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Used to set the order of sheets in the sidebar. Sheets that are not specified will be shown after those listed.",
                  "key": "sheetSidebarOrder",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_workbooks:WorkbookUpdate": {
            "description": "The updates to be made to an existing workbook",
            "name": "WorkbookUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the Workbook.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An optional list of labels for the Workbook.",
                  "key": "labels",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "The Space Id associated with the Workbook.",
                  "key": "spaceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  }
                },
                {
                  "description": "The Environment Id associated with the Workbook.",
                  "key": "environmentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                },
                {
                  "description": "The namespace of the Workbook.",
                  "key": "namespace",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Describes shape of data as well as behavior",
                  "key": "sheets",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:SheetConfigOrUpdate"
                      }
                    }
                  }
                },
                {
                  "key": "actions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Action"
                      }
                    }
                  }
                },
                {
                  "description": "Metadata for the workbook",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_workbooks:WorkbookTreatments": {
            "description": "Available treatments for a workbook",
            "name": "WorkbookTreatments",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "EXTRACTED_FROM_SOURCE"
                },
                {
                  "value": "SMALL_DATA"
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_accounts": {
            "subpackageId": "subpackage_accounts",
            "name": "accounts",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-current",
                "migratedFromUrlSlugs": ["get-the-current-account"],
                "method": "GET",
                "id": "getCurrent",
                "originalEndpointId": "endpoint_accounts.getCurrent",
                "name": "Get the current account",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/accounts"
                    },
                    {
                      "type": "literal",
                      "value": "/current"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_accounts:AccountResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/accounts/current",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_acc_YOUR_ID",
                        "name": "MyAccountName",
                        "metadata": {},
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.accounts.get_current()\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.accounts.get_current()\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.accounts.getCurrent();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_acc_YOUR_ID",
                          "name": "MyAccountName",
                          "metadata": {},
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the current account",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-current",
                "migratedFromUrlSlugs": ["update-the-current-account"],
                "method": "PATCH",
                "id": "updateCurrent",
                "originalEndpointId": "endpoint_accounts.updateCurrent",
                "name": "Update the current account",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/accounts"
                    },
                    {
                      "type": "literal",
                      "value": "/current"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_accounts:AccountPatch"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_accounts:AccountResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/accounts/current",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "defaultAppId": "us_app_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_acc_YOUR_ID",
                        "name": "MyAccountName",
                        "metadata": {},
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import AccountPatch\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.accounts.update_current(\n    request=AccountPatch(\n        default_app_id=\"us_app_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import AccountPatch\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.accounts.update_current(\n    request=AccountPatch(\n        default_app_id=\"us_app_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.accounts.updateCurrent({\n    defaultAppId: \"us_app_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "defaultAppId": "us_app_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_acc_YOUR_ID",
                          "name": "MyAccountName",
                          "metadata": {},
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update the current account",
                "authed": true
              }
            ],
            "types": ["type_accounts:AccountResponse", "type_accounts:Account", "type_accounts:AccountPatch"],
            "subpackages": [],
            "urlSlug": "accounts",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_actions": {
            "subpackageId": "subpackage_actions",
            "name": "actions",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-an-action"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_actions.create",
                "name": "Create an action",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/actions"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Action"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_actions:ActionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/actions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "label": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "string",
                        "targetId": "string",
                        "updatedAt": "2023-01-01T00:00:00Z",
                        "createdAt": "2023-01-01T00:00:00Z",
                        "label": "string",
                        "slug": "string",
                        "operation": "string",
                        "mode": "foreground",
                        "tooltip": "string",
                        "messages": [
                          {
                            "type": "error",
                            "content": "string"
                          }
                        ],
                        "type": "string",
                        "description": "string",
                        "schedule": "weekly",
                        "primary": true,
                        "confirm": true,
                        "icon": "string",
                        "requireAllValid": true,
                        "requireSelection": true,
                        "inputForm": {
                          "type": "simple",
                          "fields": [
                            {
                              "key": "string",
                              "label": "string",
                              "description": "string",
                              "type": "string",
                              "defaultValue": {},
                              "config": {
                                "options": [
                                  {
                                    "label": "string",
                                    "description": "string",
                                    "color": "string",
                                    "icon": "string",
                                    "meta": {
                                      "string": {}
                                    },
                                    "value": {}
                                  }
                                ]
                              },
                              "constraints": [
                                {
                                  "type": "required"
                                }
                              ]
                            }
                          ]
                        },
                        "constraints": [
                          {
                            "type": "hasAllValid",
                            "ignoreSelection": true
                          }
                        ],
                        "mount": {
                          "type": "sheet",
                          "slugs": ["string"]
                        },
                        "guide": {
                          "content": "string"
                        },
                        "guardrail": {
                          "content": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "bulk-create",
                "migratedFromUrlSlugs": ["create-several-actions"],
                "method": "POST",
                "id": "bulkCreate",
                "originalEndpointId": "endpoint_actions.bulkCreate",
                "name": "Create several actions",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/actions"
                    },
                    {
                      "type": "literal",
                      "value": "/bulk"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_actions:Actions"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_actions:ActionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/actions/bulk",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "label": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "id": "string",
                          "targetId": "string",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "label": "string",
                          "slug": "string",
                          "operation": "string",
                          "mode": "foreground",
                          "tooltip": "string",
                          "messages": [
                            {
                              "type": "error",
                              "content": "string"
                            }
                          ],
                          "type": "string",
                          "description": "string",
                          "schedule": "weekly",
                          "primary": true,
                          "confirm": true,
                          "icon": "string",
                          "requireAllValid": true,
                          "requireSelection": true,
                          "inputForm": {
                            "type": "simple",
                            "fields": [
                              {
                                "key": "string",
                                "label": "string",
                                "description": "string",
                                "type": "string",
                                "defaultValue": {},
                                "config": {
                                  "options": [
                                    {
                                      "label": "string",
                                      "description": "string",
                                      "color": "string",
                                      "icon": "string",
                                      "meta": {
                                        "string": {}
                                      },
                                      "value": {}
                                    }
                                  ]
                                },
                                "constraints": [
                                  {
                                    "type": "required"
                                  }
                                ]
                              }
                            ]
                          },
                          "constraints": [
                            {
                              "type": "hasAllValid",
                              "ignoreSelection": true
                            }
                          ],
                          "mount": {
                            "type": "sheet",
                            "slugs": ["string"]
                          },
                          "guide": {
                            "content": "string"
                          },
                          "guardrail": {
                            "content": "string"
                          }
                        }
                      ]
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-an-action"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_actions.get",
                "name": "Get an action",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The id of the action to return",
                      "key": "actionId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ActionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/actions"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "actionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_actions:ActionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/actions/:actionId",
                    "pathParameters": {
                      "actionId": ":actionId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "string",
                        "targetId": "string",
                        "updatedAt": "2023-01-01T00:00:00Z",
                        "createdAt": "2023-01-01T00:00:00Z",
                        "label": "string",
                        "slug": "string",
                        "operation": "string",
                        "mode": "foreground",
                        "tooltip": "string",
                        "messages": [
                          {
                            "type": "error",
                            "content": "string"
                          }
                        ],
                        "type": "string",
                        "description": "string",
                        "schedule": "weekly",
                        "primary": true,
                        "confirm": true,
                        "icon": "string",
                        "requireAllValid": true,
                        "requireSelection": true,
                        "inputForm": {
                          "type": "simple",
                          "fields": [
                            {
                              "key": "string",
                              "label": "string",
                              "description": "string",
                              "type": "string",
                              "defaultValue": {},
                              "config": {
                                "options": [
                                  {
                                    "label": "string",
                                    "description": "string",
                                    "color": "string",
                                    "icon": "string",
                                    "meta": {
                                      "string": {}
                                    },
                                    "value": {}
                                  }
                                ]
                              },
                              "constraints": [
                                {
                                  "type": "required"
                                }
                              ]
                            }
                          ]
                        },
                        "constraints": [
                          {
                            "type": "hasAllValid",
                            "ignoreSelection": true
                          }
                        ],
                        "mount": {
                          "type": "sheet",
                          "slugs": ["string"]
                        },
                        "guide": {
                          "content": "string"
                        },
                        "guardrail": {
                          "content": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-an-action"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_actions.update",
                "name": "Update an action",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The id of the action to patch",
                      "key": "actionId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ActionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/actions"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "actionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:ActionUpdate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_actions:ActionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/actions/:actionId",
                    "pathParameters": {
                      "actionId": ":actionId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "string",
                        "targetId": "string",
                        "updatedAt": "2023-01-01T00:00:00Z",
                        "createdAt": "2023-01-01T00:00:00Z",
                        "label": "string",
                        "slug": "string",
                        "operation": "string",
                        "mode": "foreground",
                        "tooltip": "string",
                        "messages": [
                          {
                            "type": "error",
                            "content": "string"
                          }
                        ],
                        "type": "string",
                        "description": "string",
                        "schedule": "weekly",
                        "primary": true,
                        "confirm": true,
                        "icon": "string",
                        "requireAllValid": true,
                        "requireSelection": true,
                        "inputForm": {
                          "type": "simple",
                          "fields": [
                            {
                              "key": "string",
                              "label": "string",
                              "description": "string",
                              "type": "string",
                              "defaultValue": {},
                              "config": {
                                "options": [
                                  {
                                    "label": "string",
                                    "description": "string",
                                    "color": "string",
                                    "icon": "string",
                                    "meta": {
                                      "string": {}
                                    },
                                    "value": {}
                                  }
                                ]
                              },
                              "constraints": [
                                {
                                  "type": "required"
                                }
                              ]
                            }
                          ]
                        },
                        "constraints": [
                          {
                            "type": "hasAllValid",
                            "ignoreSelection": true
                          }
                        ],
                        "mount": {
                          "type": "sheet",
                          "slugs": ["string"]
                        },
                        "guide": {
                          "content": "string"
                        },
                        "guardrail": {
                          "content": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-an-action"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_actions.delete",
                "name": "Delete an action",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The id of the action to delete",
                      "key": "actionId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ActionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/actions"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "actionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/actions/:actionId",
                    "pathParameters": {
                      "actionId": ":actionId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": ["type_actions:Actions", "type_actions:ActionResponse", "type_actions:ActionsResponse"],
            "subpackages": [],
            "urlSlug": "actions",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_agents": {
            "subpackageId": "subpackage_agents",
            "name": "agents",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-agents"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_agents.list",
                "name": "List agents",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:ListAgentsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/agents",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_ag_YOUR_ID",
                          "topics": ["workbook:updated"],
                          "compiler": "js",
                          "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                          "slug": "default",
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "accountId": "us_acc_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_ag_YOUR_ID",
                            "topics": ["workbook:updated"],
                            "compiler": "js",
                            "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                            "slug": "default",
                            "createdAt": "2023-10-30T16:59:45.735Z",
                            "updatedAt": "2023-10-30T16:59:45.735Z",
                            "accountId": "us_acc_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-an-agent"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_agents.create",
                "name": "Create an agent",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                ],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:AgentConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:AgentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Agent Response",
                    "path": "/agents",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "topics": ["workbook:updated"],
                      "compiler": "js",
                      "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_ag_YOUR_ID",
                        "topics": ["workbook:updated"],
                        "compiler": "js",
                        "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                        "slug": "default",
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z",
                        "accountId": "us_acc_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import AgentConfig, Compiler, EventTopic\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.create(\n    environment_id=\"us_env_YOUR_ID\",\n    request=AgentConfig(\n        topics=[EventTopic.WORKBOOK_UPDATED],\n        compiler=Compiler.JS,\n        source=\"module.exports = { routeEvent: async (...args) => { console.log(args) } }\",\n    ),\n)\n",
                        "sync_client": "from flatfile import AgentConfig, Compiler, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.create(\n    environment_id=\"us_env_YOUR_ID\",\n    request=AgentConfig(\n        topics=[EventTopic.WORKBOOK_UPDATED],\n        compiler=Compiler.JS,\n        source=\"module.exports = { routeEvent: async (...args) => { console.log(args) } }\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.create({\n    environmentId: \"us_env_YOUR_ID\",\n    body: {\n        topics: [Flatfile.EventTopic.WorkbookUpdated],\n        compiler: Flatfile.Compiler.Js,\n        source: \"module.exports = { routeEvent: async (...args) => { console.log(args) } }\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "topics": ["workbook:updated"],
                        "compiler": "js",
                        "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_ag_YOUR_ID",
                          "topics": ["workbook:updated"],
                          "compiler": "js",
                          "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                          "slug": "default",
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "accountId": "us_acc_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "name": "Error Response",
                    "path": "/agents",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "topics": ["workbook:updated"],
                      "compiler": "js",
                      "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errors": [
                        {
                          "key": "123",
                          "message": "ID 123 not found"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import AgentConfig, Compiler, EventTopic\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.create(\n    environment_id=\"us_env_YOUR_ID\",\n    request=AgentConfig(\n        topics=[EventTopic.WORKBOOK_UPDATED],\n        compiler=Compiler.JS,\n        source=\"module.exports = { routeEvent: async (...args) => { console.log(args) } }\",\n    ),\n)\n",
                        "sync_client": "from flatfile import AgentConfig, Compiler, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.create(\n    environment_id=\"us_env_YOUR_ID\",\n    request=AgentConfig(\n        topics=[EventTopic.WORKBOOK_UPDATED],\n        compiler=Compiler.JS,\n        source=\"module.exports = { routeEvent: async (...args) => { console.log(args) } }\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.create({\n    environmentId: \"us_env_YOUR_ID\",\n    body: {\n        topics: [Flatfile.EventTopic.WorkbookUpdated],\n        compiler: Flatfile.Compiler.Js,\n        source: \"module.exports = { routeEvent: async (...args) => { console.log(args) } }\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "topics": ["workbook:updated"],
                        "compiler": "js",
                        "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "123",
                            "message": "ID 123 not found"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-an-agent"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_agents.get",
                "name": "Get an agent",
                "path": {
                  "pathParameters": [
                    {
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EnvironmentId"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:AgentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/agents/us_ag_YOUR_ID",
                    "pathParameters": {
                      "agentId": "us_ag_YOUR_ID"
                    },
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_ag_YOUR_ID",
                        "topics": ["workbook:updated"],
                        "compiler": "js",
                        "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                        "slug": "default",
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z",
                        "accountId": "us_acc_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.get(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_ag_YOUR_ID",
                          "topics": ["workbook:updated"],
                          "compiler": "js",
                          "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                          "slug": "default",
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "accountId": "us_acc_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.get(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.get(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list-versions",
                "migratedFromUrlSlugs": ["list-agent-versions-for-an-agent"],
                "method": "GET",
                "id": "listVersions",
                "originalEndpointId": "endpoint_agents.listVersions",
                "name": "List agent versions for an agent",
                "path": {
                  "pathParameters": [
                    {
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": "/versions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:ListAgentVersionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/agents/:agentId/versions",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "version": 0,
                            "origin": 0,
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z",
                            "agent_id": "string",
                            "topics": ["agent:created"],
                            "compiler": "js",
                            "source": "string",
                            "sourceMap": "string",
                            "slug": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/versions",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/versions",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "revert",
                "migratedFromUrlSlugs": ["revert-to-a-specific-agent-version"],
                "method": "GET",
                "id": "revert",
                "originalEndpointId": "endpoint_agents.revert",
                "name": "Revert to a specific agent version",
                "path": {
                  "pathParameters": [
                    {
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    },
                    {
                      "key": "agentVersionId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentVersionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": "/versions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentVersionId"
                    },
                    {
                      "type": "literal",
                      "value": "/revert"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:AgentVersionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/agents/:agentId/versions/:agentVersionId/revert",
                    "pathParameters": {
                      "agentId": ":agentId",
                      "agentVersionId": ":agentVersionId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "version": 0,
                          "origin": 0,
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "agent_id": "string",
                          "topics": ["agent:created"],
                          "compiler": "js",
                          "source": "string",
                          "sourceMap": "string",
                          "slug": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/versions/:agentVersionId/revert",
                    "pathParameters": {
                      "agentId": ":agentId",
                      "agentVersionId": ":agentVersionId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/versions/:agentVersionId/revert",
                    "pathParameters": {
                      "agentId": ":agentId",
                      "agentVersionId": ":agentVersionId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list-agent-roles",
                "method": "GET",
                "id": "listAgentRoles",
                "originalEndpointId": "endpoint_agents.listAgentRoles",
                "name": "List Agent Roles",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The agent id",
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:ListActorRolesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "roleId": "string",
                            "actorId": "string",
                            "resourceId": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Lists roles assigned to an agent.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "assign-agent-role",
                "migratedFromUrlSlugs": ["assign-role-to-agent"],
                "method": "POST",
                "id": "assignAgentRole",
                "originalEndpointId": "endpoint_agents.assignAgentRole",
                "name": "Assign Role to Agent",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The agent id",
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:AssignActorRoleRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:AssignRoleResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "roleId": "string",
                          "actorId": "string",
                          "resourceId": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Assigns a role to a agent.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-agent-role",
                "migratedFromUrlSlugs": ["remove-role-from-agent"],
                "method": "DELETE",
                "id": "deleteAgentRole",
                "originalEndpointId": "endpoint_agents.deleteAgentRole",
                "name": "Remove Role from Agent",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The agent id",
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    },
                    {
                      "description": "The actor role id",
                      "key": "actorRoleId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ActorRoleId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "actorRoleId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/agents/:agentId/roles/:actorRoleId",
                    "pathParameters": {
                      "agentId": ":agentId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles/:actorRoleId",
                    "pathParameters": {
                      "agentId": ":agentId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles/:actorRoleId",
                    "pathParameters": {
                      "agentId": ":agentId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/roles/:actorRoleId",
                    "pathParameters": {
                      "agentId": ":agentId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Removes a role from an agent.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-agent-logs",
                "migratedFromUrlSlugs": ["get-logs-for-an-agent"],
                "method": "GET",
                "id": "getAgentLogs",
                "originalEndpointId": "endpoint_agents.getAgentLogs",
                "name": "Get logs for an agent",
                "path": {
                  "pathParameters": [
                    {
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": "/logs"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:GetAgentLogsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/agents/us_ag_YOUR_ID/logs",
                    "pathParameters": {
                      "agentId": "us_ag_YOUR_ID"
                    },
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      },
                      "data": [
                        {
                          "eventId": "us_evt_YOUR_ID",
                          "success": true,
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "completedAt": "2022-09-18T00:20:04.007Z",
                          "log": "SUCCESS"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLogs(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        },
                        "data": [
                          {
                            "eventId": "us_evt_YOUR_ID",
                            "success": true,
                            "createdAt": "2022-09-18T00:19:57.007Z",
                            "completedAt": "2022-09-18T00:20:04.007Z",
                            "log": "SUCCESS"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/logs",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLogs(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId/logs",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLogs(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-agent-log",
                "migratedFromUrlSlugs": ["get-an-agent-log"],
                "method": "GET",
                "id": "getAgentLog",
                "originalEndpointId": "endpoint_agents.getAgentLog",
                "name": "Get an agent log",
                "path": {
                  "pathParameters": [
                    {
                      "key": "eventId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:EventId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/log/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "eventId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:GetDetailedAgentLogResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/agents/log/commons.EventId",
                    "pathParameters": {
                      "eventId": "commons.EventId"
                    },
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "eventId": "us_evt_YOUR_ID",
                        "success": true,
                        "createdAt": "2022-09-18T00:19:57.007Z",
                        "completedAt": "2022-09-18T00:20:04.007Z",
                        "duration": 500,
                        "topic": "space:created",
                        "context": {},
                        "log": "SUCCESS"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLog(\"commons.EventId\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "eventId": "us_evt_YOUR_ID",
                          "success": true,
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "completedAt": "2022-09-18T00:20:04.007Z",
                          "duration": 500,
                          "topic": "space:created",
                          "context": {},
                          "log": "SUCCESS"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/log/:eventId",
                    "pathParameters": {
                      "eventId": ":eventId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLog(\"commons.EventId\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/log/:eventId",
                    "pathParameters": {
                      "eventId": ":eventId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLog(\"commons.EventId\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-environment-agent-logs",
                "migratedFromUrlSlugs": ["get-all-agent-logs-in-your-environment"],
                "method": "GET",
                "id": "getEnvironmentAgentLogs",
                "originalEndpointId": "endpoint_agents.getEnvironmentAgentLogs",
                "name": "Get all agent logs in your environment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/logs"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  },
                  {
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  },
                  {
                    "key": "success",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SuccessQueryParameter"
                      }
                    }
                  },
                  {
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PageSize"
                      }
                    }
                  },
                  {
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PageNumber"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:GetDetailedAgentLogsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/agents/logs",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID",
                      "spaceId": "us_sp_YOUR_ID",
                      "success": true,
                      "pageSize": 20,
                      "pageNumber": 1
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      },
                      "data": [
                        {
                          "eventId": "us_evt_YOUR_ID",
                          "success": true,
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "completedAt": "2022-09-18T00:20:04.007Z",
                          "duration": 500,
                          "topic": "space:created",
                          "context": {},
                          "log": "SUCCESS"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentLogs({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        },
                        "data": [
                          {
                            "eventId": "us_evt_YOUR_ID",
                            "success": true,
                            "createdAt": "2022-09-18T00:19:57.007Z",
                            "completedAt": "2022-09-18T00:20:04.007Z",
                            "duration": 500,
                            "topic": "space:created",
                            "context": {},
                            "log": "SUCCESS"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/logs",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string",
                      "spaceId": "string",
                      "success": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentLogs({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/logs",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string",
                      "spaceId": "string",
                      "success": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentLogs({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-environment-agent-executions",
                "migratedFromUrlSlugs": ["get-all-executions-in-your-environment"],
                "method": "GET",
                "id": "getEnvironmentAgentExecutions",
                "originalEndpointId": "endpoint_agents.getEnvironmentAgentExecutions",
                "name": "Get all executions in your environment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/executions"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  },
                  {
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  },
                  {
                    "key": "success",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SuccessQueryParameter"
                      }
                    }
                  },
                  {
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PageSize"
                      }
                    }
                  },
                  {
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PageNumber"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_agents:GetExecutionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/agents/executions",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID",
                      "spaceId": "us_sp_YOUR_ID",
                      "success": true,
                      "pageSize": 20,
                      "pageNumber": 1
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      },
                      "data": [
                        {
                          "eventId": "us_evt_YOUR_ID",
                          "success": true,
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "completedAt": "2022-09-18T00:20:04.007Z",
                          "duration": 500,
                          "topic": "space:created"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentExecutions({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        },
                        "data": [
                          {
                            "eventId": "us_evt_YOUR_ID",
                            "success": true,
                            "createdAt": "2022-09-18T00:19:57.007Z",
                            "completedAt": "2022-09-18T00:20:04.007Z",
                            "duration": 500,
                            "topic": "space:created"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/executions",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string",
                      "spaceId": "string",
                      "success": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentExecutions({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/executions",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string",
                      "spaceId": "string",
                      "success": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentExecutions({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-an-agent"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_agents.delete",
                "name": "Delete an agent",
                "path": {
                  "pathParameters": [
                    {
                      "key": "agentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AgentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/agents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "agentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/agents/us_ag_YOUR_ID",
                    "pathParameters": {
                      "agentId": "us_ag_YOUR_ID"
                    },
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.delete(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.delete(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/agents/:agentId",
                    "pathParameters": {
                      "agentId": ":agentId"
                    },
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.delete(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a single agent",
                "authed": true
              }
            ],
            "types": [
              "type_agents:ListAgentsResponse",
              "type_agents:AgentResponse",
              "type_agents:ListAgentVersionsResponse",
              "type_agents:AgentVersionResponse",
              "type_agents:AgentConfig",
              "type_agents:Agent",
              "type_agents:AgentVersion",
              "type_agents:Compiler",
              "type_agents:GetAgentLogsResponse",
              "type_agents:GetDetailedAgentLogResponse",
              "type_agents:GetDetailedAgentLogsResponse",
              "type_agents:GetExecutionsResponse",
              "type_agents:AgentLog",
              "type_agents:DetailedAgentLog",
              "type_agents:Execution"
            ],
            "subpackages": [],
            "urlSlug": "agents",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_apps": {
            "subpackageId": "subpackage_apps",
            "name": "apps",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-apps"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_apps.list",
                "name": "List apps",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:AppsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "name": "string",
                            "namespace": "string",
                            "type": "PORTAL",
                            "entity": "string",
                            "entityPlural": "string",
                            "icon": "string",
                            "metadata": {},
                            "environmentFilters": {},
                            "blueprint": {},
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z",
                            "deletedAt": "2023-01-01T00:00:00Z",
                            "activatedAt": "2023-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns apps in an account",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-an-app"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_apps.get",
                "name": "Get an app",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:AppResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/apps/us_app_YOUR_ID",
                    "pathParameters": {
                      "appId": "us_app_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_app_YOUR_ID",
                        "name": "Nightly Data Loads",
                        "namespace": "nightly-data",
                        "type": "CUSTOM",
                        "entity": "Sync",
                        "entityPlural": "Syncs",
                        "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                        "metadata": {
                          "foo": "bar"
                        },
                        "environmentFilters": {
                          "type": ["PROD", "DEV"],
                          "exclude_ids": ["us_env_123456"]
                        },
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z",
                        "deletedAt": null,
                        "activatedAt": null
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.apps.get(\n    app_id=\"us_app_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.apps.get(\n    app_id=\"us_app_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.get(\"us_app_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_app_YOUR_ID",
                          "name": "Nightly Data Loads",
                          "namespace": "nightly-data",
                          "type": "CUSTOM",
                          "entity": "Sync",
                          "entityPlural": "Syncs",
                          "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                          "metadata": {
                            "foo": "bar"
                          },
                          "environmentFilters": {
                            "type": ["PROD", "DEV"],
                            "exclude_ids": ["us_env_123456"]
                          },
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "deletedAt": null,
                          "activatedAt": null
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns an app",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-an-app"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_apps.update",
                "name": "Update an app",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:AppPatch"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:AppResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/apps/us_app_YOUR_ID",
                    "pathParameters": {
                      "appId": "us_app_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "Nightly Data Loads",
                      "namespace": "nightly-data",
                      "entity": "Sync",
                      "entityPlural": "Syncs",
                      "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                      "metadata": {
                        "foo": "bar"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_app_YOUR_ID",
                        "name": "Nightly Data Loads",
                        "namespace": "nightly-data",
                        "type": "CUSTOM",
                        "entity": "Sync",
                        "entityPlural": "Syncs",
                        "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                        "metadata": {
                          "foo": "bar"
                        },
                        "environmentFilters": {
                          "type": ["PROD", "DEV"],
                          "exclude_ids": ["us_env_123456"]
                        },
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z",
                        "deletedAt": null,
                        "activatedAt": null
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import AppPatch\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(token=\"YOUR_TOKEN\", )\nawait client.apps.update(app_id=\"us_app_YOUR_ID\", request=AppPatch(name=\"Nightly Data Loads\", namespace=\"nightly-data\", entity=\"Sync\", entity_plural=\"Syncs\", icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>', metadata={\"foo\": \"bar\"}, ), )\n",
                        "sync_client": "from flatfile import AppPatch\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(token=\"YOUR_TOKEN\", )\nclient.apps.update(app_id=\"us_app_YOUR_ID\", request=AppPatch(name=\"Nightly Data Loads\", namespace=\"nightly-data\", entity=\"Sync\", entity_plural=\"Syncs\", icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>', metadata={\"foo\": \"bar\"}, ), )\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.update(\"us_app_YOUR_ID\", {\n    name: \"Nightly Data Loads\",\n    namespace: \"nightly-data\",\n    entity: \"Sync\",\n    entityPlural: \"Syncs\",\n    icon: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-bar-chart-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\\\"/>\\n</svg>\",\n    metadata: {\n        \"foo\": \"bar\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "Nightly Data Loads",
                        "namespace": "nightly-data",
                        "entity": "Sync",
                        "entityPlural": "Syncs",
                        "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                        "metadata": {
                          "foo": "bar"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_app_YOUR_ID",
                          "name": "Nightly Data Loads",
                          "namespace": "nightly-data",
                          "type": "CUSTOM",
                          "entity": "Sync",
                          "entityPlural": "Syncs",
                          "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                          "metadata": {
                            "foo": "bar"
                          },
                          "environmentFilters": {
                            "type": ["PROD", "DEV"],
                            "exclude_ids": ["us_env_123456"]
                          },
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "deletedAt": null,
                          "activatedAt": null
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates an app",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-an-app"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_apps.create",
                "name": "Create an app",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:AppCreate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:AppResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/apps",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "Nightly Data Loads",
                      "namespace": "nightly-data",
                      "type": "CUSTOM",
                      "entity": "Sync",
                      "entityPlural": "Syncs",
                      "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                      "metadata": {
                        "foo": "bar"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_app_YOUR_ID",
                        "name": "Nightly Data Loads",
                        "namespace": "nightly-data",
                        "type": "CUSTOM",
                        "entity": "Sync",
                        "entityPlural": "Syncs",
                        "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                        "metadata": {
                          "foo": "bar"
                        },
                        "environmentFilters": {
                          "type": ["PROD", "DEV"],
                          "exclude_ids": ["us_env_123456"]
                        },
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z",
                        "deletedAt": null,
                        "activatedAt": null
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import AppCreate, AppType\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(token=\"YOUR_TOKEN\", )\nawait client.apps.create(request=AppCreate(name=\"Nightly Data Loads\", namespace=\"nightly-data\", type=AppType.CUSTOM, entity=\"Sync\", entity_plural=\"Syncs\", icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>', metadata={\"foo\": \"bar\"}, ), )\n",
                        "sync_client": "from flatfile import AppCreate, AppType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(token=\"YOUR_TOKEN\", )\nclient.apps.create(request=AppCreate(name=\"Nightly Data Loads\", namespace=\"nightly-data\", type=AppType.CUSTOM, entity=\"Sync\", entity_plural=\"Syncs\", icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>', metadata={\"foo\": \"bar\"}, ), )\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.create({\n    name: \"Nightly Data Loads\",\n    namespace: \"nightly-data\",\n    type: Flatfile.AppType.Custom,\n    entity: \"Sync\",\n    entityPlural: \"Syncs\",\n    icon: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-bar-chart-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\\\"/>\\n</svg>\",\n    metadata: {\n        \"foo\": \"bar\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "Nightly Data Loads",
                        "namespace": "nightly-data",
                        "type": "CUSTOM",
                        "entity": "Sync",
                        "entityPlural": "Syncs",
                        "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                        "metadata": {
                          "foo": "bar"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_app_YOUR_ID",
                          "name": "Nightly Data Loads",
                          "namespace": "nightly-data",
                          "type": "CUSTOM",
                          "entity": "Sync",
                          "entityPlural": "Syncs",
                          "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                          "metadata": {
                            "foo": "bar"
                          },
                          "environmentFilters": {
                            "type": ["PROD", "DEV"],
                            "exclude_ids": ["us_env_123456"]
                          },
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "deletedAt": null,
                          "activatedAt": null
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates an app",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-an-app"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_apps.delete",
                "name": "Delete an app",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of app to delete",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:SuccessResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/apps/us_app_YOUR_ID",
                    "pathParameters": {
                      "appId": "us_app_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "success": true
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.apps.delete(\n    app_id=\"us_app_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.apps.delete(\n    app_id=\"us_app_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.delete(\"us_app_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "success": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes an app",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-constraints",
                "method": "GET",
                "id": "getConstraints",
                "originalEndpointId": "endpoint_apps.getConstraints",
                "name": "Get constraints",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": "/constraints"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Whether to include built-in constraints",
                    "key": "includeBuiltins",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps/:appId/constraints",
                    "pathParameters": {
                      "appId": ":appId"
                    },
                    "queryParameters": {
                      "includeBuiltins": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "appId": "string",
                            "validator": "string",
                            "description": "string",
                            "function": "string",
                            "options": {},
                            "label": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z",
                            "deletedAt": "2023-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns constraints for an app",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-constraint",
                "method": "POST",
                "id": "createConstraint",
                "originalEndpointId": "endpoint_apps.createConstraint",
                "name": "Create constraint",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": "/constraints"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintCreate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps/:appId/constraints",
                    "pathParameters": {
                      "appId": ":appId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "appId": "string",
                          "validator": "string",
                          "description": "string",
                          "function": "string",
                          "options": {},
                          "label": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "deletedAt": "2023-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates a new constraint for an app",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-constraint-by-id",
                "method": "GET",
                "id": "getConstraintById",
                "originalEndpointId": "endpoint_apps.getConstraintById",
                "name": "Get constraint by ID",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    },
                    {
                      "description": "ID of the constraint",
                      "key": "constraintId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ConstraintId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": "/constraints/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "constraintId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps/:appId/constraints/:constraintId",
                    "pathParameters": {
                      "appId": ":appId",
                      "constraintId": ":constraintId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "appId": "string",
                          "validator": "string",
                          "description": "string",
                          "function": "string",
                          "options": {},
                          "label": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "deletedAt": "2023-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a specific constraint",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-constraint-versions",
                "method": "GET",
                "id": "getConstraintVersions",
                "originalEndpointId": "endpoint_apps.getConstraintVersions",
                "name": "Get constraint versions",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    },
                    {
                      "description": "ID of the constraint",
                      "key": "constraintId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ConstraintId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": "/constraints/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "constraintId"
                    },
                    {
                      "type": "literal",
                      "value": "/versions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintVersionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps/:appId/constraints/:constraintId/versions",
                    "pathParameters": {
                      "appId": ":appId",
                      "constraintId": ":constraintId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "version": 0,
                            "prompt": "string",
                            "id": "string",
                            "appId": "string",
                            "validator": "string",
                            "description": "string",
                            "function": "string",
                            "options": {},
                            "label": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z",
                            "deletedAt": "2023-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns the versions of a specific constraint",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-constraint-version",
                "method": "GET",
                "id": "getConstraintVersion",
                "originalEndpointId": "endpoint_apps.getConstraintVersion",
                "name": "Get constraint version",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    },
                    {
                      "description": "ID of the constraint",
                      "key": "constraintId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ConstraintId"
                      }
                    },
                    {
                      "description": "Version of the constraint",
                      "key": "version",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": "/constraints/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "constraintId"
                    },
                    {
                      "type": "literal",
                      "value": "/versions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "version"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintVersionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps/:appId/constraints/:constraintId/versions/0",
                    "pathParameters": {
                      "appId": ":appId",
                      "constraintId": ":constraintId",
                      "version": 0
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "version": 0,
                          "prompt": "string",
                          "id": "string",
                          "appId": "string",
                          "validator": "string",
                          "description": "string",
                          "function": "string",
                          "options": {},
                          "label": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "deletedAt": "2023-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a specified version of a specific constraint",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-constraint",
                "method": "PATCH",
                "id": "updateConstraint",
                "originalEndpointId": "endpoint_apps.updateConstraint",
                "name": "Update constraint",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    },
                    {
                      "description": "ID of the constraint",
                      "key": "constraintId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ConstraintId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": "/constraints/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "constraintId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintUpdate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:ConstraintResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps/:appId/constraints/:constraintId",
                    "pathParameters": {
                      "appId": ":appId",
                      "constraintId": ":constraintId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "appId": "string",
                          "validator": "string",
                          "description": "string",
                          "function": "string",
                          "options": {},
                          "label": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "deletedAt": "2023-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a specific constraint",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-constraint",
                "method": "DELETE",
                "id": "deleteConstraint",
                "originalEndpointId": "endpoint_apps.deleteConstraint",
                "name": "Delete constraint",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the app",
                      "key": "appId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:AppId"
                      }
                    },
                    {
                      "description": "ID of the constraint",
                      "key": "constraintId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ConstraintId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/apps"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "appId"
                    },
                    {
                      "type": "literal",
                      "value": "/constraints/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "constraintId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_apps:SuccessResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/apps/:appId/constraints/:constraintId",
                    "pathParameters": {
                      "appId": ":appId",
                      "constraintId": ":constraintId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "success": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a specific constraint",
                "authed": true
              }
            ],
            "types": [
              "type_apps:AppsResponse",
              "type_apps:AppResponse",
              "type_apps:AppPatch",
              "type_apps:AppCreate",
              "type_apps:App",
              "type_apps:AppType",
              "type_apps:SuccessResponse",
              "type_apps:ConstraintsResponse",
              "type_apps:ConstraintResponse",
              "type_apps:ConstraintVersionsResponse",
              "type_apps:ConstraintVersionResponse",
              "type_apps:ConstraintCreate",
              "type_apps:ConstraintUpdate",
              "type_apps:ConstraintResource",
              "type_apps:ConstraintVersionResource"
            ],
            "subpackages": [],
            "urlSlug": "apps",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_assistant": {
            "subpackageId": "subpackage_assistant",
            "name": "assistant",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-prompts"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_assistant.list",
                "name": "List prompts",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/prompts"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Type of prompt (default AI_ASSIST)",
                    "key": "promptType",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_assistant:PromptTypeQueryEnum"
                      }
                    }
                  },
                  {
                    "description": "Number of prompts to return in a page (default 7)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of prompts to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_assistant:PromptsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/prompts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_pr_YOUR_ID",
                          "createdById": "us_usr_YOUR_ID",
                          "accountId": "us_acc_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "promptType": "AI_ASSIST",
                          "prompt": "Combine first name and last name into a new column called Full Name",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "updatedAt": "2021-01-01T00:00:00Z"
                        }
                      ],
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_pr_YOUR_ID",
                            "createdById": "us_usr_YOUR_ID",
                            "accountId": "us_acc_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "promptType": "AI_ASSIST",
                            "prompt": "Combine first name and last name into a new column called Full Name",
                            "createdAt": "2021-01-01T00:00:00Z",
                            "updatedAt": "2021-01-01T00:00:00Z"
                          }
                        ],
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns prompts created by user",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-prompt"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_assistant.get",
                "name": "Get a prompt",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of prompts",
                      "key": "promptId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:PromptId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/prompts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "promptId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_assistant:PromptResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/prompts/us_pr_YOUR_ID",
                    "pathParameters": {
                      "promptId": "us_pr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_pr_YOUR_ID",
                        "createdById": "us_usr_YOUR_ID",
                        "accountId": "us_acc_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "promptType": "AI_ASSIST",
                        "prompt": "Combine first name and last name into a new column called Full Name",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "updatedAt": "2021-01-01T00:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_pr_YOUR_ID",
                          "createdById": "us_usr_YOUR_ID",
                          "accountId": "us_acc_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "promptType": "AI_ASSIST",
                          "prompt": "Combine first name and last name into a new column called Full Name",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "updatedAt": "2021-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a prompt",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-prompt"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_assistant.update",
                "name": "Update a prompt",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of prompts",
                      "key": "promptId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:PromptId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/prompts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "promptId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_assistant:PromptPatch"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_assistant:PromptResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/prompts/us_pr_YOUR_ID",
                    "pathParameters": {
                      "promptId": "us_pr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "prompt": "Combine first name and last name into a new column called Full Name"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_pr_YOUR_ID",
                        "createdById": "us_usr_YOUR_ID",
                        "accountId": "us_acc_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "promptType": "AI_ASSIST",
                        "prompt": "Combine first name and last name into a new column called Full Name",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "updatedAt": "2021-01-01T00:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "prompt": "Combine first name and last name into a new column called Full Name"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_pr_YOUR_ID",
                          "createdById": "us_usr_YOUR_ID",
                          "accountId": "us_acc_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "promptType": "AI_ASSIST",
                          "prompt": "Combine first name and last name into a new column called Full Name",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "updatedAt": "2021-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a prompt",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-prompt"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_assistant.create",
                "name": "Create a prompt",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/prompts"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_assistant:PromptCreate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_assistant:PromptResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/prompts",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "prompt": "Combine first name and last name into a new column called Full Name",
                      "environmentId": "us_env_YOUR_ID",
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_pr_YOUR_ID",
                        "createdById": "us_usr_YOUR_ID",
                        "accountId": "us_acc_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "promptType": "AI_ASSIST",
                        "prompt": "Combine first name and last name into a new column called Full Name",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "updatedAt": "2021-01-01T00:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "prompt": "Combine first name and last name into a new column called Full Name",
                        "environmentId": "us_env_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_pr_YOUR_ID",
                          "createdById": "us_usr_YOUR_ID",
                          "accountId": "us_acc_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "promptType": "AI_ASSIST",
                          "prompt": "Combine first name and last name into a new column called Full Name",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "updatedAt": "2021-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates a prompt",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-prompts"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_assistant.delete",
                "name": "Delete a prompts",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of prompts",
                      "key": "promptId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:PromptId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/prompts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "promptId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/prompts/us_pr_YOUR_ID",
                    "pathParameters": {
                      "promptId": "us_pr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a prompts",
                "authed": true
              }
            ],
            "types": [
              "type_assistant:PromptsResponse",
              "type_assistant:PromptResponse",
              "type_assistant:PromptPatch",
              "type_assistant:PromptCreate",
              "type_assistant:Prompt",
              "type_assistant:PromptTypeEnum",
              "type_assistant:PromptTypeQueryEnum"
            ],
            "subpackages": [],
            "urlSlug": "assistant",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_commits": {
            "subpackageId": "subpackage_commits",
            "name": "commits",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-commit-version"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_commits.get",
                "name": "Get a commit version",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the commit version to return",
                      "key": "commitId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/commits"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "commitId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commits:CommitResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/commits/us_vr_YOUR_ID",
                    "pathParameters": {
                      "commitId": "us_vr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_vr_YOUR_ID",
                        "sheetId": "us_sh_YOUR_ID",
                        "createdBy": "us_usr_YOUR_ID",
                        "createdAt": "2019-08-24T14:15:22Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.commits.get(\"us_vr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_vr_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "createdBy": "us_usr_YOUR_ID",
                          "createdAt": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/commits/:commitId",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.commits.get(\"us_vr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/commits/:commitId",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.commits.get(\"us_vr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns the details of a commit version",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "complete",
                "migratedFromUrlSlugs": ["complete-a-commit-version"],
                "method": "POST",
                "id": "complete",
                "originalEndpointId": "endpoint_commits.complete",
                "name": "Complete a commit version",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the commit version to complete",
                      "key": "commitId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/commits"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "commitId"
                    },
                    {
                      "type": "literal",
                      "value": "/complete"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/commits/:commitId/complete",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/commits/:commitId/complete",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/commits/:commitId/complete",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Completes a commit version. This marks the commit as complete and acknowledges that the changes have been applied to the sheet.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "replay",
                "migratedFromUrlSlugs": ["replay-a-commit-version"],
                "method": "POST",
                "id": "replay",
                "originalEndpointId": "endpoint_commits.replay",
                "name": "Replay a commit version",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the commit version to re-emit a commit:created event for",
                      "key": "commitId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/commits"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "commitId"
                    },
                    {
                      "type": "literal",
                      "value": "/replay"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/commits/:commitId/replay",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/commits/:commitId/replay",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/commits/:commitId/replay",
                    "pathParameters": {
                      "commitId": ":commitId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Replays a commit:created event.",
                "authed": true
              }
            ],
            "types": ["type_commits:ListCommitsResponse", "type_commits:CommitResponse", "type_commits:Commit"],
            "subpackages": [],
            "urlSlug": "commits",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_commons": {
            "subpackageId": "subpackage_commons",
            "name": "commons",
            "endpoints": [],
            "types": [
              "type_commons:AgentId",
              "type_commons:AgentVersionId",
              "type_commons:AccountId",
              "type_commons:AppId",
              "type_commons:ConstraintId",
              "type_commons:DocumentId",
              "type_commons:GuestId",
              "type_commons:EnvironmentId",
              "type_commons:FileId",
              "type_commons:SpaceId",
              "type_commons:WorkbookId",
              "type_commons:EventId",
              "type_commons:SheetId",
              "type_commons:SnapshotId",
              "type_commons:CommitId",
              "type_commons:VersionId",
              "type_commons:JobId",
              "type_commons:UserId",
              "type_commons:ActorRoleId",
              "type_commons:ActorIdUnion",
              "type_commons:RoleId",
              "type_commons:SpaceConfigId",
              "type_commons:RecordId",
              "type_commons:SecretId",
              "type_commons:MappingId",
              "type_commons:ProgramId",
              "type_commons:FamilyId",
              "type_commons:PromptId",
              "type_commons:ViewId",
              "type_commons:ActionId",
              "type_commons:DataRetentionPolicyId",
              "type_commons:Pagination",
              "type_commons:PageSize",
              "type_commons:PageNumber",
              "type_commons:SuccessQueryParameter",
              "type_commons:Guide",
              "type_commons:Guardrail",
              "type_commons:ActionWithoutLabel",
              "type_commons:Action",
              "type_commons:APIAction",
              "type_commons:ActionUpdate",
              "type_commons:ActionConstraint",
              "type_commons:ActionMount",
              "type_commons:ActionMountSheet",
              "type_commons:ActionMountWorkbook",
              "type_commons:ActionMountField",
              "type_commons:ActionMountDocument",
              "type_commons:ActionMountFile",
              "type_commons:ActionConstraintHasAllValid",
              "type_commons:ActionConstraintHasSelection",
              "type_commons:ActionConstraintHasData",
              "type_commons:InputForm",
              "type_commons:InputFormType",
              "type_commons:InputField",
              "type_commons:InputConstraint",
              "type_commons:InputConstraintType",
              "type_commons:InputConfig",
              "type_commons:InputEnumPropertyOption",
              "type_commons:ActionMode",
              "type_commons:ActionMessageType",
              "type_commons:ActionMessage",
              "type_commons:ActionSchedule",
              "type_commons:SortDirection",
              "type_commons:Success",
              "type_commons:SuccessData",
              "type_commons:Error",
              "type_commons:Errors",
              "type_commons:Filter",
              "type_commons:FilterField",
              "type_commons:SearchField",
              "type_commons:SearchValue",
              "type_commons:SortField",
              "type_commons:JSONPathString"
            ],
            "subpackages": [],
            "urlSlug": "commons",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_data-retention-policies": {
            "subpackageId": "subpackage_data-retention-policies",
            "name": "data-retention-policies",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-data-retention-policies"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_data-retention-policies.list",
                "name": "List data retention policies",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/data-retention-policies"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "The associated Environment ID of the policy.",
                    "key": "environmentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EnvironmentId"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_data-retention-policies:ListDataRetentionPoliciesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/data-retention-policies",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_drp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "createdAt": "2023-11-15T19:31:33.015Z",
                          "updatedAt": "2023-11-15T19:31:33.015Z",
                          "type": "lastActivity",
                          "period": 5
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_drp_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID",
                            "createdAt": "2023-11-15T19:31:33.015Z",
                            "updatedAt": "2023-11-15T19:31:33.015Z",
                            "type": "lastActivity",
                            "period": 5
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns all data retention policies on an account matching a filter for environmentId",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-data-retention-policy"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_data-retention-policies.create",
                "name": "Create a data retention policy",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/data-retention-policies"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_data-retention-policies:DataRetentionPolicyConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_data-retention-policies:DataRetentionPolicyResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/data-retention-policies",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "type": "lastActivity",
                      "period": 5,
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_drp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "createdAt": "2023-11-15T19:31:33.015Z",
                        "updatedAt": "2023-11-15T19:31:33.015Z",
                        "type": "lastActivity",
                        "period": 5
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.create({\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "lastActivity",
                        "period": 5,
                        "environmentId": "us_env_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_drp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "createdAt": "2023-11-15T19:31:33.015Z",
                          "updatedAt": "2023-11-15T19:31:33.015Z",
                          "type": "lastActivity",
                          "period": 5
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.create({\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "lastActivity",
                        "period": 0,
                        "environmentId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.create({\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "lastActivity",
                        "period": 0,
                        "environmentId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Add a new data retention policy to the space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-data-retention-policy"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_data-retention-policies.get",
                "name": "Get a data retention policy",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of data retention policy to return",
                      "key": "id",
                      "type": {
                        "type": "id",
                        "value": "type_commons:DataRetentionPolicyId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/data-retention-policies"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_data-retention-policies:DataRetentionPolicyResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/data-retention-policies/us_drp_YOUR_ID",
                    "pathParameters": {
                      "id": "us_drp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_drp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "createdAt": "2023-11-15T19:31:33.015Z",
                        "updatedAt": "2023-11-15T19:31:33.015Z",
                        "type": "lastActivity",
                        "period": 5
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.get(\"us_drp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_drp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "createdAt": "2023-11-15T19:31:33.015Z",
                          "updatedAt": "2023-11-15T19:31:33.015Z",
                          "type": "lastActivity",
                          "period": 5
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.get(\"us_drp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.get(\"us_drp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single data retention policy",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-data-retention-policy"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_data-retention-policies.update",
                "name": "Update a data retention policy",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of data retention policy to update",
                      "key": "id",
                      "type": {
                        "type": "id",
                        "value": "type_commons:DataRetentionPolicyId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/data-retention-policies"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_data-retention-policies:DataRetentionPolicyConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_data-retention-policies:DataRetentionPolicyResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/data-retention-policies/us_drp_YOUR_ID",
                    "pathParameters": {
                      "id": "us_drp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "type": "lastActivity",
                      "period": 5,
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_drp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "createdAt": "2023-11-15T19:31:33.015Z",
                        "updatedAt": "2023-11-15T19:31:33.015Z",
                        "type": "lastActivity",
                        "period": 5
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.update(\"us_drp_YOUR_ID\", {\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "lastActivity",
                        "period": 5,
                        "environmentId": "us_env_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_drp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "createdAt": "2023-11-15T19:31:33.015Z",
                          "updatedAt": "2023-11-15T19:31:33.015Z",
                          "type": "lastActivity",
                          "period": 5
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.update(\"us_drp_YOUR_ID\", {\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "lastActivity",
                        "period": 0,
                        "environmentId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.update(\"us_drp_YOUR_ID\", {\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "lastActivity",
                        "period": 0,
                        "environmentId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a single data retention policy",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-data-retention-policy"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_data-retention-policies.delete",
                "name": "Delete a data retention policy",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of data retention policy to delete",
                      "key": "id",
                      "type": {
                        "type": "id",
                        "value": "type_commons:DataRetentionPolicyId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/data-retention-policies"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/data-retention-policies/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/data-retention-policies/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a single data retention policy",
                "authed": true
              }
            ],
            "types": [
              "type_data-retention-policies:ListDataRetentionPoliciesResponse",
              "type_data-retention-policies:DataRetentionPolicyResponse",
              "type_data-retention-policies:DataRetentionPolicyConfig",
              "type_data-retention-policies:DataRetentionPolicy",
              "type_data-retention-policies:DataRetentionPolicyEnum"
            ],
            "subpackages": [],
            "urlSlug": "data-retention-policies",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_documents": {
            "subpackageId": "subpackage_documents",
            "name": "documents",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-documents"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_documents.list",
                "name": "List documents",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to return",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": "/documents"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_documents:ListDocumentsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID/documents",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_dc_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "title": "My Document 1",
                          "body": "My information",
                          "treatments": [],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "updatedAt": "2022-09-18T00:19:57.007Z"
                        },
                        {
                          "id": "us_dc_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "title": "Updated Title",
                          "body": "Updated My information",
                          "treatments": [],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "updatedAt": "2022-09-18T00:19:57.007Z"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.list(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_dc_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID",
                            "title": "My Document 1",
                            "body": "My information",
                            "treatments": [],
                            "actions": [
                              {
                                "operation": "submitAction",
                                "mode": "foreground",
                                "label": "Submit",
                                "description": "Submit data to webhook.site",
                                "primary": true
                              }
                            ],
                            "createdAt": "2022-09-18T00:19:57.007Z",
                            "updatedAt": "2022-09-18T00:19:57.007Z"
                          },
                          {
                            "id": "us_dc_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID",
                            "title": "Updated Title",
                            "body": "Updated My information",
                            "treatments": [],
                            "actions": [
                              {
                                "operation": "submitAction",
                                "mode": "foreground",
                                "label": "Submit",
                                "description": "Submit data to webhook.site",
                                "primary": true
                              }
                            ],
                            "createdAt": "2022-09-18T00:19:57.007Z",
                            "updatedAt": "2022-09-18T00:19:57.007Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.list(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.list(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns all documents for a space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-document"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_documents.create",
                "name": "Create a document",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to return",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": "/documents"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_documents:DocumentConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_documents:DocumentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID/documents",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "title": "My Document 1",
                      "body": "My information",
                      "actions": [
                        {
                          "operation": "submitAction",
                          "mode": "foreground",
                          "label": "Submit",
                          "description": "Submit data to webhook.site",
                          "primary": true
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_dc_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "title": "My Document 1",
                        "body": "My information",
                        "treatments": [],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ],
                        "createdAt": "2022-09-18T00:19:57.007Z",
                        "updatedAt": "2022-09-18T00:19:57.007Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                        "sync_client": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.create(\"us_sp_YOUR_ID\", {\n    title: \"My Document 1\",\n    body: \"My information\",\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "title": "My Document 1",
                        "body": "My information",
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_dc_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "title": "My Document 1",
                          "body": "My information",
                          "treatments": [],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "updatedAt": "2022-09-18T00:19:57.007Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                        "sync_client": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.create(\"us_sp_YOUR_ID\", {\n    title: \"My Document 1\",\n    body: \"My information\",\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "title": "string",
                        "body": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                        "sync_client": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.create(\"us_sp_YOUR_ID\", {\n    title: \"My Document 1\",\n    body: \"My information\",\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "title": "string",
                        "body": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Add a new document to the space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-document"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_documents.get",
                "name": "Get a document",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to return",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    },
                    {
                      "description": "ID of document to return",
                      "key": "documentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:DocumentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": "/documents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "documentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_documents:DocumentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID/documents/us_dc_YOUR_ID",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID",
                      "documentId": "us_dc_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_dc_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "title": "My Document 1",
                        "body": "My information",
                        "treatments": [],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ],
                        "createdAt": "2022-09-18T00:19:57.007Z",
                        "updatedAt": "2022-09-18T00:19:57.007Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.get(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_dc_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "title": "My Document 1",
                          "body": "My information",
                          "treatments": [],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "updatedAt": "2022-09-18T00:19:57.007Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents/:documentId",
                    "pathParameters": {
                      "spaceId": ":spaceId",
                      "documentId": ":documentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.get(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents/:documentId",
                    "pathParameters": {
                      "spaceId": ":spaceId",
                      "documentId": ":documentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.get(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single document",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-document"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_documents.update",
                "name": "Update a document",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to return",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    },
                    {
                      "description": "ID of document to return",
                      "key": "documentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:DocumentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": "/documents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "documentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_documents:DocumentConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_documents:DocumentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID/documents/us_dc_YOUR_ID",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID",
                      "documentId": "us_dc_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "title": "Updated Title",
                      "body": "Updated My information"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_dc_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "title": "Updated Title",
                        "body": "Updated My information",
                        "treatments": [],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ],
                        "createdAt": "2022-09-18T00:19:57.007Z",
                        "updatedAt": "2022-09-18T00:19:57.007Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DocumentConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.update(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\", {\n    title: \"Updated Title\",\n    body: \"Updated My information\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "title": "Updated Title",
                        "body": "Updated My information"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_dc_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "title": "Updated Title",
                          "body": "Updated My information",
                          "treatments": [],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "createdAt": "2022-09-18T00:19:57.007Z",
                          "updatedAt": "2022-09-18T00:19:57.007Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents/:documentId",
                    "pathParameters": {
                      "spaceId": ":spaceId",
                      "documentId": ":documentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DocumentConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.update(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\", {\n    title: \"Updated Title\",\n    body: \"Updated My information\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "title": "string",
                        "body": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents/:documentId",
                    "pathParameters": {
                      "spaceId": ":spaceId",
                      "documentId": ":documentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import DocumentConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n",
                        "sync_client": "from flatfile import DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.update(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\", {\n    title: \"Updated Title\",\n    body: \"Updated My information\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "title": "string",
                        "body": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "updates a single document, for only the body and title",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-document"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_documents.delete",
                "name": "Delete a document",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to return",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    },
                    {
                      "description": "ID of document to delete",
                      "key": "documentId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:DocumentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": "/documents"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "documentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/spaces/:spaceId/documents/:documentId",
                    "pathParameters": {
                      "spaceId": ":spaceId",
                      "documentId": ":documentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents/:documentId",
                    "pathParameters": {
                      "spaceId": ":spaceId",
                      "documentId": ":documentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/documents/:documentId",
                    "pathParameters": {
                      "spaceId": ":spaceId",
                      "documentId": ":documentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a single document",
                "authed": true
              }
            ],
            "types": [
              "type_documents:ListDocumentsResponse",
              "type_documents:DocumentResponse",
              "type_documents:DocumentConfig",
              "type_documents:Document"
            ],
            "subpackages": [],
            "urlSlug": "documents",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_entitlements": {
            "subpackageId": "subpackage_entitlements",
            "name": "entitlements",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-entitlements"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_entitlements.list",
                "name": "List entitlements",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/entitlements"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "The associated Resource ID for the entitlements.",
                    "key": "resourceId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_entitlements:ListEntitlementsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/entitlements",
                    "pathParameters": {},
                    "queryParameters": {
                      "resourceId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "key": "snapshots",
                          "metadata": {
                            "files": 10
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.entitlements.list(\n    resource_id=\"string\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.entitlements.list(\n    resource_id=\"string\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.entitlements.list({\n    resourceId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "key": "snapshots",
                            "metadata": {
                              "files": 10
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/entitlements",
                    "pathParameters": {},
                    "queryParameters": {
                      "resourceId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.entitlements.list(\n    resource_id=\"string\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.entitlements.list(\n    resource_id=\"string\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.entitlements.list({\n    resourceId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/entitlements",
                    "pathParameters": {},
                    "queryParameters": {
                      "resourceId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.entitlements.list(\n    resource_id=\"string\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.entitlements.list(\n    resource_id=\"string\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.entitlements.list({\n    resourceId: \"string\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns all entitlements matching a filter for resourceId",
                "authed": true
              }
            ],
            "types": ["type_entitlements:ListEntitlementsResponse", "type_entitlements:Entitlement"],
            "subpackages": [],
            "urlSlug": "entitlements",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_environments": {
            "subpackageId": "subpackage_environments",
            "name": "environments",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-environments"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_environments.list",
                "name": "List environments",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/environments"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Number of environments to return in a page (default 10)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of environments to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_environments:ListEnvironmentsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/environments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_env_YOUR_ID",
                          "accountId": "us_acc_YOUR_ID",
                          "name": "dev",
                          "isProd": false,
                          "guestAuthentication": ["magic_link"],
                          "features": {},
                          "metadata": {},
                          "namespaces": ["default"]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.list()\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.list()\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.list();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_env_YOUR_ID",
                            "accountId": "us_acc_YOUR_ID",
                            "name": "dev",
                            "isProd": false,
                            "guestAuthentication": ["magic_link"],
                            "features": {},
                            "metadata": {},
                            "namespaces": ["default"]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get all environments",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-an-environment"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_environments.create",
                "name": "Create an environment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/environments"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_environments:EnvironmentConfigCreate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_environments:EnvironmentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/environments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "dev",
                      "isProd": false,
                      "guestAuthentication": ["magic_link"],
                      "metadata": {
                        "key": "value"
                      },
                      "namespaces": ["default"]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_env_YOUR_ID",
                        "accountId": "us_acc_YOUR_ID",
                        "name": "dev",
                        "isProd": false,
                        "guestAuthentication": ["magic_link"],
                        "features": {},
                        "metadata": {},
                        "namespaces": ["default"]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import EnvironmentConfigCreate, GuestAuthenticationEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.create(\n    request=EnvironmentConfigCreate(\n        name=\"dev\",\n        is_prod=False,\n        guest_authentication=[GuestAuthenticationEnum.MAGIC_LINK],\n        metadata={\"key\": \"value\"},\n        namespaces=[\"default\"],\n    ),\n)\n",
                        "sync_client": "from flatfile import EnvironmentConfigCreate, GuestAuthenticationEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.create(\n    request=EnvironmentConfigCreate(\n        name=\"dev\",\n        is_prod=False,\n        guest_authentication=[GuestAuthenticationEnum.MAGIC_LINK],\n        metadata={\"key\": \"value\"},\n        namespaces=[\"default\"],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.create({\n    name: \"dev\",\n    isProd: false,\n    guestAuthentication: [Flatfile.GuestAuthenticationEnum.MagicLink],\n    metadata: {\n        \"key\": \"value\"\n    },\n    namespaces: [\"default\"]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "dev",
                        "isProd": false,
                        "guestAuthentication": ["magic_link"],
                        "metadata": {
                          "key": "value"
                        },
                        "namespaces": ["default"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_env_YOUR_ID",
                          "accountId": "us_acc_YOUR_ID",
                          "name": "dev",
                          "isProd": false,
                          "guestAuthentication": ["magic_link"],
                          "features": {},
                          "metadata": {},
                          "namespaces": ["default"]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a new environment",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-environment-event-token",
                "migratedFromUrlSlugs": ["get-environment-subscription-credentials"],
                "method": "GET",
                "id": "getEnvironmentEventToken",
                "originalEndpointId": "endpoint_environments.getEnvironmentEventToken",
                "name": "Get environment subscription credentials",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/environments"
                    },
                    {
                      "type": "literal",
                      "value": "/subscription-token"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "ID of environment to return",
                    "key": "environmentId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:EnvironmentId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:EventTokenResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/environments/subscription-token",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "accountId": "us_acc_YOUR_ID",
                        "subscribeKey": "sub-c-TOKEN",
                        "ttl": 15,
                        "token": "LONG-TOKEN"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.getEnvironmentEventToken({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "accountId": "us_acc_YOUR_ID",
                          "subscribeKey": "sub-c-TOKEN",
                          "ttl": 15,
                          "token": "LONG-TOKEN"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/environments/subscription-token",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.getEnvironmentEventToken({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/environments/subscription-token",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.getEnvironmentEventToken({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a token which can be used to subscribe to events for this environment",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-an-environment"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_environments.get",
                "name": "Get an environment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the environment to return. To fetch the current environment, pass `current`",
                      "key": "environmentId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/environments"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "environmentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_environments:EnvironmentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/environments/us_env_YOUR_ID",
                    "pathParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_env_YOUR_ID",
                        "accountId": "us_acc_YOUR_ID",
                        "name": "dev",
                        "isProd": false,
                        "guestAuthentication": ["magic_link"],
                        "features": {},
                        "metadata": {},
                        "namespaces": ["default"]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.get(\"us_env_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_env_YOUR_ID",
                          "accountId": "us_acc_YOUR_ID",
                          "name": "dev",
                          "isProd": false,
                          "guestAuthentication": ["magic_link"],
                          "features": {},
                          "metadata": {},
                          "namespaces": ["default"]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/environments/:environmentId",
                    "pathParameters": {
                      "environmentId": ":environmentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.get(\"us_env_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/environments/:environmentId",
                    "pathParameters": {
                      "environmentId": ":environmentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.get(\"us_env_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single environment",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-an-environment"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_environments.update",
                "name": "Update an environment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the environment to update",
                      "key": "environmentId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/environments"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "environmentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_environments:EnvironmentConfigUpdate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_environments:Environment"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/environments/us_env_YOUR_ID",
                    "pathParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "dev",
                      "isProd": false,
                      "guestAuthentication": ["magic_link"],
                      "metadata": {
                        "key": "value"
                      },
                      "namespaces": ["default"]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "us_env_YOUR_ID",
                      "accountId": "us_acc_YOUR_ID",
                      "name": "dev",
                      "isProd": false,
                      "guestAuthentication": ["magic_link"],
                      "features": {},
                      "metadata": {},
                      "namespaces": ["default"]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import EnvironmentConfigUpdate, GuestAuthenticationEnum\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.environments.update(\n    environment_id=\"us_env_YOUR_ID\",\n    request=EnvironmentConfigUpdate(\n        name=\"dev\",\n        is_prod=False,\n        guest_authentication=[GuestAuthenticationEnum.MAGIC_LINK],\n        metadata={\"key\": \"value\"},\n        namespaces=[\"default\"],\n    ),\n)\n",
                        "sync_client": "from flatfile import EnvironmentConfigUpdate, GuestAuthenticationEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.update(\n    environment_id=\"us_env_YOUR_ID\",\n    request=EnvironmentConfigUpdate(\n        name=\"dev\",\n        is_prod=False,\n        guest_authentication=[GuestAuthenticationEnum.MAGIC_LINK],\n        metadata={\"key\": \"value\"},\n        namespaces=[\"default\"],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.update(\"us_env_YOUR_ID\", {\n    name: \"dev\",\n    isProd: false,\n    guestAuthentication: [Flatfile.GuestAuthenticationEnum.MagicLink],\n    metadata: {\n        \"key\": \"value\"\n    },\n    namespaces: [\"default\"]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "dev",
                        "isProd": false,
                        "guestAuthentication": ["magic_link"],
                        "metadata": {
                          "key": "value"
                        },
                        "namespaces": ["default"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "us_env_YOUR_ID",
                        "accountId": "us_acc_YOUR_ID",
                        "name": "dev",
                        "isProd": false,
                        "guestAuthentication": ["magic_link"],
                        "features": {},
                        "metadata": {},
                        "namespaces": ["default"]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a single environment, to change the name for example",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-an-environment"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_environments.delete",
                "name": "Delete an environment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the environment to delete",
                      "key": "environmentId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/environments"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "environmentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/environments/:environmentId",
                    "pathParameters": {
                      "environmentId": ":environmentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/environments/:environmentId",
                    "pathParameters": {
                      "environmentId": ":environmentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/environments/:environmentId",
                    "pathParameters": {
                      "environmentId": ":environmentId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a single environment",
                "authed": true
              }
            ],
            "types": [
              "type_environments:ListEnvironmentsResponse",
              "type_environments:EnvironmentResponse",
              "type_environments:Environment",
              "type_environments:EnvironmentConfigCreate",
              "type_environments:EnvironmentConfigUpdate",
              "type_environments:GuestAuthenticationEnum"
            ],
            "subpackages": [],
            "urlSlug": "environments",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_events": {
            "subpackageId": "subpackage_events",
            "name": "events",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-events"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_events.list",
                "name": "List events",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/events"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Filter by environment",
                    "key": "environmentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EnvironmentId"
                      }
                    }
                  },
                  {
                    "description": "Filter by space",
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  },
                  {
                    "description": "Filter by event domain",
                    "key": "domain",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by event topic",
                    "key": "topic",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by event timestamp",
                    "key": "since",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Number of results to return in a page (default 10)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of results to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Include acknowledged events",
                    "key": "includeAcknowledged",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_events:ListAllEventsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/events",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_evt_YOUR_ID",
                          "topic": "workbook:updated",
                          "createdAt": "2023-11-07T20:46:04.300Z",
                          "payload": {
                            "recordsAdded": 100
                          },
                          "domain": "workbook",
                          "context": {
                            "accountId": "us_acc_YOUR_ID",
                            "actorId": "us_key_SOME_KEY",
                            "environmentId": "us_env_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "workbookId": "us_wb_YOUR_ID"
                          },
                          "callbackUrl": "",
                          "dataUrl": "",
                          "namespaces": ["workbook"],
                          "origin": {
                            "id": "us_wb_YOUR_ID"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.list()\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.list()\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.list();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_evt_YOUR_ID",
                            "topic": "workbook:updated",
                            "createdAt": "2023-11-07T20:46:04.300Z",
                            "payload": {
                              "recordsAdded": 100
                            },
                            "domain": "workbook",
                            "context": {
                              "accountId": "us_acc_YOUR_ID",
                              "actorId": "us_key_SOME_KEY",
                              "environmentId": "us_env_YOUR_ID",
                              "spaceId": "us_sp_YOUR_ID",
                              "workbookId": "us_wb_YOUR_ID"
                            },
                            "callbackUrl": "",
                            "dataUrl": "",
                            "namespaces": ["workbook"],
                            "origin": {
                              "id": "us_wb_YOUR_ID"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Event topics that the Flatfile Platform emits.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-an-event"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_events.create",
                "name": "Create an event",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/events"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_events:CreateEventConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_events:EventResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/events",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "topic": "workbook:updated",
                      "payload": {
                        "recordsAdded": 100
                      },
                      "domain": "workbook",
                      "context": {
                        "accountId": "us_acc_YOUR_ID",
                        "actorId": "us_key_SOME_KEY",
                        "environmentId": "us_env_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "workbookId": "us_wb_YOUR_ID"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_evt_YOUR_ID",
                        "topic": "workbook:updated",
                        "createdAt": "2023-11-07T20:46:04.300Z",
                        "payload": {
                          "recordsAdded": 100
                        },
                        "domain": "workbook",
                        "context": {
                          "accountId": "us_acc_YOUR_ID",
                          "actorId": "us_key_SOME_KEY",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "workbookId": "us_wb_YOUR_ID"
                        },
                        "callbackUrl": "",
                        "dataUrl": "",
                        "namespaces": ["workbook"],
                        "origin": {
                          "id": "us_wb_YOUR_ID"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.create({\n    topic: Flatfile.EventTopic.WorkbookUpdated,\n    payload: {\n        \"recordsAdded\": 100\n    },\n    domain: Flatfile.Domain.Workbook,\n    context: {\n        accountId: \"us_acc_YOUR_ID\",\n        actorId: \"us_key_SOME_KEY\",\n        environmentId: \"us_env_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        workbookId: \"us_wb_YOUR_ID\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "topic": "workbook:updated",
                        "payload": {
                          "recordsAdded": 100
                        },
                        "domain": "workbook",
                        "context": {
                          "accountId": "us_acc_YOUR_ID",
                          "actorId": "us_key_SOME_KEY",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "workbookId": "us_wb_YOUR_ID"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_evt_YOUR_ID",
                          "topic": "workbook:updated",
                          "createdAt": "2023-11-07T20:46:04.300Z",
                          "payload": {
                            "recordsAdded": 100
                          },
                          "domain": "workbook",
                          "context": {
                            "accountId": "us_acc_YOUR_ID",
                            "actorId": "us_key_SOME_KEY",
                            "environmentId": "us_env_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "workbookId": "us_wb_YOUR_ID"
                          },
                          "callbackUrl": "",
                          "dataUrl": "",
                          "namespaces": ["workbook"],
                          "origin": {
                            "id": "us_wb_YOUR_ID"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/events",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.create({\n    topic: Flatfile.EventTopic.WorkbookUpdated,\n    payload: {\n        \"recordsAdded\": 100\n    },\n    domain: Flatfile.Domain.Workbook,\n    context: {\n        accountId: \"us_acc_YOUR_ID\",\n        actorId: \"us_key_SOME_KEY\",\n        environmentId: \"us_env_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        workbookId: \"us_wb_YOUR_ID\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "topic": "agent:created",
                        "payload": {
                          "string": {}
                        },
                        "domain": "file",
                        "context": {
                          "accountId": "string",
                          "environmentId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/events",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.create({\n    topic: Flatfile.EventTopic.WorkbookUpdated,\n    payload: {\n        \"recordsAdded\": 100\n    },\n    domain: Flatfile.Domain.Workbook,\n    context: {\n        accountId: \"us_acc_YOUR_ID\",\n        actorId: \"us_key_SOME_KEY\",\n        environmentId: \"us_env_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        workbookId: \"us_wb_YOUR_ID\"\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "topic": "agent:created",
                        "payload": {
                          "string": {}
                        },
                        "domain": "file",
                        "context": {
                          "accountId": "string",
                          "environmentId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-an-event"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_events.get",
                "name": "Get an event",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The event id",
                      "key": "eventId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:EventId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/events/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "eventId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_events:EventResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/events/us_evt_YOUR_ID",
                    "pathParameters": {
                      "eventId": "us_evt_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_evt_YOUR_ID",
                        "topic": "workbook:updated",
                        "createdAt": "2023-11-07T20:46:04.300Z",
                        "payload": {
                          "recordsAdded": 100
                        },
                        "domain": "workbook",
                        "context": {
                          "accountId": "us_acc_YOUR_ID",
                          "actorId": "us_key_SOME_KEY",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "workbookId": "us_wb_YOUR_ID"
                        },
                        "callbackUrl": "",
                        "dataUrl": "",
                        "namespaces": ["workbook"],
                        "origin": {
                          "id": "us_wb_YOUR_ID"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.get(\n    event_id=\"us_evt_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get(\n    event_id=\"us_evt_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.get(\"us_evt_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_evt_YOUR_ID",
                          "topic": "workbook:updated",
                          "createdAt": "2023-11-07T20:46:04.300Z",
                          "payload": {
                            "recordsAdded": 100
                          },
                          "domain": "workbook",
                          "context": {
                            "accountId": "us_acc_YOUR_ID",
                            "actorId": "us_key_SOME_KEY",
                            "environmentId": "us_env_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "workbookId": "us_wb_YOUR_ID"
                          },
                          "callbackUrl": "",
                          "dataUrl": "",
                          "namespaces": ["workbook"],
                          "origin": {
                            "id": "us_wb_YOUR_ID"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "ack",
                "migratedFromUrlSlugs": ["acknowledge-an-event"],
                "method": "POST",
                "id": "ack",
                "originalEndpointId": "endpoint_events.ack",
                "name": "Acknowledge an event",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The event id",
                      "key": "eventId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:EventId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/events/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "eventId"
                    },
                    {
                      "type": "literal",
                      "value": "/ack"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/events/:eventId/ack",
                    "pathParameters": {
                      "eventId": ":eventId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-event-token",
                "migratedFromUrlSlugs": ["get-subscription-credentials"],
                "method": "GET",
                "id": "getEventToken",
                "originalEndpointId": "endpoint_events.getEventToken",
                "name": "Get subscription credentials",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/subscription"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "The resource ID of the event stream (space or environment id)",
                    "key": "scope",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The space ID of the event stream",
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    },
                    "availability": "Deprecated"
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:EventTokenResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/subscription",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "accountId": "us_acc_YOUR_ID",
                        "subscribeKey": "sub-c-TOKEN",
                        "ttl": 15,
                        "token": "LONG-TOKEN"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.get_event_token()\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_event_token()\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.getEventToken();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "accountId": "us_acc_YOUR_ID",
                          "subscribeKey": "sub-c-TOKEN",
                          "ttl": 15,
                          "token": "LONG-TOKEN"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/subscription",
                    "pathParameters": {},
                    "queryParameters": {
                      "scope": "string",
                      "spaceId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.get_event_token()\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_event_token()\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.getEventToken();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/subscription",
                    "pathParameters": {},
                    "queryParameters": {
                      "scope": "string",
                      "spaceId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.events.get_event_token()\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_event_token()\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.getEventToken();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a token which can be used to subscribe to events for this space",
                "authed": true
              }
            ],
            "types": [
              "type_events:ListAllEventsResponse",
              "type_events:CreateEventConfig",
              "type_events:EventResponse",
              "type_events:Event",
              "type_events:GenericEvent",
              "type_events:BaseEvent",
              "type_events:EventTopic",
              "type_events:Domain",
              "type_events:Context",
              "type_events:EventContextSlugs",
              "type_events:ActionName",
              "type_events:Progress",
              "type_events:EventAttributes",
              "type_events:SheetSlug",
              "type_events:Origin"
            ],
            "subpackages": [],
            "urlSlug": "events",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_files": {
            "subpackageId": "subpackage_files",
            "name": "files",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-files"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_files.list",
                "name": "List files",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/files"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Number of files to return in a page (default 20)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of files to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "The storage mode of file to fetch, defaults to \"import\"",
                    "key": "mode",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_files:Mode"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_files:ListFilesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/files",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_fl_YOUR_ID",
                          "name": "Test File",
                          "ext": "png",
                          "mimetype": "image/png",
                          "encoding": "7bit",
                          "status": "partial",
                          "mode": "import",
                          "size": 81953,
                          "bytesReceived": 81593,
                          "createdAt": "2023-11-15T19:31:33.015Z",
                          "updatedAt": "2023-11-15T19:31:33.015Z",
                          "spaceId": "us_sp_YOUR_ID"
                        }
                      ],
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.files.list()\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.list()\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.list();\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_fl_YOUR_ID",
                            "name": "Test File",
                            "ext": "png",
                            "mimetype": "image/png",
                            "encoding": "7bit",
                            "status": "partial",
                            "mode": "import",
                            "size": 81953,
                            "bytesReceived": 81593,
                            "createdAt": "2023-11-15T19:31:33.015Z",
                            "updatedAt": "2023-11-15T19:31:33.015Z",
                            "spaceId": "us_sp_YOUR_ID"
                          }
                        ],
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "upload",
                "migratedFromUrlSlugs": ["upload-a-file"],
                "method": "POST",
                "id": "upload",
                "originalEndpointId": "endpoint_files.upload",
                "name": "Upload a file",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/files"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "multipart/form-data",
                  "type": {
                    "type": "fileUpload",
                    "value": {
                      "name": "CreateFileRequest",
                      "properties": [
                        {
                          "type": "bodyProperty",
                          "key": "spaceId",
                          "valueType": {
                            "type": "id",
                            "value": "type_commons:SpaceId"
                          }
                        },
                        {
                          "type": "bodyProperty",
                          "key": "environmentId",
                          "valueType": {
                            "type": "id",
                            "value": "type_commons:EnvironmentId"
                          }
                        },
                        {
                          "type": "bodyProperty",
                          "key": "mode",
                          "valueType": {
                            "type": "optional",
                            "itemType": {
                              "type": "id",
                              "value": "type_files:Mode"
                            }
                          },
                          "description": "The storage mode of file to insert, defaults to \"import\""
                        },
                        {
                          "type": "file",
                          "value": {
                            "type": "file",
                            "key": "file",
                            "isOptional": false
                          }
                        },
                        {
                          "type": "bodyProperty",
                          "key": "actions",
                          "valueType": {
                            "type": "optional",
                            "itemType": {
                              "type": "list",
                              "itemType": {
                                "type": "id",
                                "value": "type_commons:Action"
                              }
                            }
                          },
                          "description": "The actions attached to the file"
                        },
                        {
                          "type": "bodyProperty",
                          "key": "origin",
                          "valueType": {
                            "type": "optional",
                            "itemType": {
                              "type": "id",
                              "value": "type_files:FileOrigin"
                            }
                          },
                          "description": "The origin of the file, ie filesystem"
                        }
                      ]
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_files:FileResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/files",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "form",
                      "value": {
                        "spaceId": {
                          "type": "json",
                          "value": "string"
                        },
                        "environmentId": {
                          "type": "json",
                          "value": "string"
                        },
                        "mode": {
                          "type": "json"
                        },
                        "file": {
                          "type": "filename",
                          "value": "<filename1>"
                        },
                        "actions": {
                          "type": "json"
                        },
                        "origin": {
                          "type": "json"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "name": "string",
                          "ext": "string",
                          "mimetype": "string",
                          "encoding": "string",
                          "status": "partial",
                          "mode": "import",
                          "size": 0,
                          "bytesReceived": 0,
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "expiredAt": "2023-01-01T00:00:00Z",
                          "spaceId": "string",
                          "workbookId": "string",
                          "sheetId": "string",
                          "actions": [
                            {
                              "label": "string",
                              "slug": "string",
                              "operation": "string",
                              "mode": "foreground",
                              "tooltip": "string",
                              "messages": [
                                {
                                  "type": "error",
                                  "content": "string"
                                }
                              ],
                              "type": "string",
                              "description": "string",
                              "schedule": "weekly",
                              "primary": true,
                              "confirm": true,
                              "icon": "string",
                              "requireAllValid": true,
                              "requireSelection": true,
                              "inputForm": {
                                "type": "simple",
                                "fields": [
                                  {
                                    "key": "string",
                                    "label": "string",
                                    "description": "string",
                                    "type": "string",
                                    "defaultValue": {},
                                    "config": {
                                      "options": [
                                        {
                                          "label": "string",
                                          "description": "string",
                                          "color": "string",
                                          "icon": "string",
                                          "meta": {
                                            "string": {}
                                          },
                                          "value": {}
                                        }
                                      ]
                                    },
                                    "constraints": [
                                      {
                                        "type": "required"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "constraints": [
                                {
                                  "type": "hasAllValid",
                                  "ignoreSelection": true
                                }
                              ],
                              "mount": {
                                "type": "sheet",
                                "slugs": ["string"]
                              },
                              "guide": {
                                "content": "string"
                              },
                              "guardrail": {
                                "content": "string"
                              }
                            }
                          ],
                          "origin": "filesystem"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "form",
                      "value": {
                        "spaceId": {
                          "type": "json",
                          "value": "string"
                        },
                        "environmentId": {
                          "type": "json",
                          "value": "string"
                        },
                        "mode": {
                          "type": "json"
                        },
                        "file": {
                          "type": "filename",
                          "value": "<filename1>"
                        },
                        "actions": {
                          "type": "json"
                        },
                        "origin": {
                          "type": "json"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-file"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_files.get",
                "name": "Get a file",
                "path": {
                  "pathParameters": [
                    {
                      "key": "fileId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/files"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "fileId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_files:FileResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/files/us_fl_YOUR_ID",
                    "pathParameters": {
                      "fileId": "us_fl_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_fl_YOUR_ID",
                        "name": "Test File",
                        "ext": "png",
                        "mimetype": "image/png",
                        "encoding": "7bit",
                        "status": "partial",
                        "mode": "import",
                        "size": 81953,
                        "bytesReceived": 81593,
                        "createdAt": "2023-11-15T19:31:33.015Z",
                        "updatedAt": "2023-11-15T19:31:33.015Z",
                        "spaceId": "us_sp_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.get(\"us_fl_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_fl_YOUR_ID",
                          "name": "Test File",
                          "ext": "png",
                          "mimetype": "image/png",
                          "encoding": "7bit",
                          "status": "partial",
                          "mode": "import",
                          "size": 81953,
                          "bytesReceived": 81593,
                          "createdAt": "2023-11-15T19:31:33.015Z",
                          "updatedAt": "2023-11-15T19:31:33.015Z",
                          "spaceId": "us_sp_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.get(\"us_fl_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.get(\"us_fl_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-file"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_files.delete",
                "name": "Delete a file",
                "path": {
                  "pathParameters": [
                    {
                      "key": "fileId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/files"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "fileId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/files/:fileId",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-file"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_files.update",
                "name": "Update a file",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of file to update",
                      "key": "fileId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/files"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "fileId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "workbookId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_commons:WorkbookId"
                          }
                        }
                      },
                      {
                        "description": "The name of the file",
                        "key": "name",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The storage mode of file to update",
                        "key": "mode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_files:Mode"
                          }
                        }
                      },
                      {
                        "description": "Status of the file",
                        "key": "status",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_files:ModelFileStatusEnum"
                          }
                        }
                      },
                      {
                        "description": "The actions attached to the file",
                        "key": "actions",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_commons:Action"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_files:FileResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/files/us_fl_YOUR_ID",
                    "pathParameters": {
                      "fileId": "us_fl_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "NewFileName"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_fl_YOUR_ID",
                        "name": "NewFileName",
                        "ext": "png",
                        "mimetype": "image/png",
                        "encoding": "7bit",
                        "status": "partial",
                        "mode": "import",
                        "size": 81953,
                        "bytesReceived": 81593,
                        "createdAt": "2023-11-15T19:31:33.015Z",
                        "updatedAt": "2023-11-15T19:31:33.015Z",
                        "spaceId": "us_sp_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.update(\"us_fl_YOUR_ID\", {\n    name: \"NewFileName\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "NewFileName"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_fl_YOUR_ID",
                          "name": "NewFileName",
                          "ext": "png",
                          "mimetype": "image/png",
                          "encoding": "7bit",
                          "status": "partial",
                          "mode": "import",
                          "size": 81953,
                          "bytesReceived": 81593,
                          "createdAt": "2023-11-15T19:31:33.015Z",
                          "updatedAt": "2023-11-15T19:31:33.015Z",
                          "spaceId": "us_sp_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.update(\"us_fl_YOUR_ID\", {\n    name: \"NewFileName\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.update(\"us_fl_YOUR_ID\", {\n    name: \"NewFileName\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a file, to change the workbook id for example",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "download",
                "migratedFromUrlSlugs": ["download-a-file"],
                "method": "GET",
                "id": "download",
                "originalEndpointId": "endpoint_files.download",
                "name": "Download a file",
                "path": {
                  "pathParameters": [
                    {
                      "key": "fileId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:FileId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/files"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "fileId"
                    },
                    {
                      "type": "literal",
                      "value": "/download"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "fileDownload"
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/files/:fileId/download",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "filename",
                      "value": "<filename>"
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId/download",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/files/:fileId/download",
                    "pathParameters": {
                      "fileId": ":fileId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": [
              "type_files:ListFilesResponse",
              "type_files:FileResponse",
              "type_files:File",
              "type_files:ModelFileStatusEnum",
              "type_files:Mode",
              "type_files:FileOrigin"
            ],
            "subpackages": [],
            "urlSlug": "files",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_guests": {
            "subpackageId": "subpackage_guests",
            "name": "guests",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-guests"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_guests.list",
                "name": "List guests",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "ID of space to return",
                    "key": "spaceId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  },
                  {
                    "description": "Email of guest to return",
                    "key": "email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_guests:ListGuestsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/guests",
                    "pathParameters": {},
                    "queryParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_g_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "email": "email@example.com",
                          "name": "Your Name",
                          "spaces": [
                            {
                              "id": "us_sp_YOUR_ID",
                              "workbooks": [
                                {
                                  "id": "us_wb_YOUR_ID"
                                }
                              ],
                              "lastAccessed": "2023-10-30T16:59:45.735Z"
                            }
                          ],
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.guests.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.list({\n    spaceId: \"us_sp_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_g_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID",
                            "email": "email@example.com",
                            "name": "Your Name",
                            "spaces": [
                              {
                                "id": "us_sp_YOUR_ID",
                                "workbooks": [
                                  {
                                    "id": "us_wb_YOUR_ID"
                                  }
                                ],
                                "lastAccessed": "2023-10-30T16:59:45.735Z"
                              }
                            ],
                            "createdAt": "2023-10-30T16:59:45.735Z",
                            "updatedAt": "2023-10-30T16:59:45.735Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns all guests",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-guest"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_guests.create",
                "name": "Create a guest",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_guests:GuestConfig"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_guests:CreateGuestResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/guests",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": [
                      {
                        "environmentId": "us_env_YOUR_ID",
                        "email": "email@example.com",
                        "name": "Your Name",
                        "spaces": [
                          {
                            "id": "us_sp_YOUR_ID",
                            "workbooks": [
                              {
                                "id": "us_wb_YOUR_ID"
                              }
                            ],
                            "lastAccessed": "2023-10-30T16:59:45.735Z"
                          }
                        ]
                      }
                    ],
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_g_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "email": "email@example.com",
                          "name": "Your Name",
                          "spaces": [
                            {
                              "id": "us_sp_YOUR_ID",
                              "workbooks": [
                                {
                                  "id": "us_wb_YOUR_ID"
                                }
                              ],
                              "lastAccessed": "2023-10-30T16:59:45.735Z"
                            }
                          ],
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "import datetime\n\nfrom flatfile import GuestConfig, GuestSpace, GuestWorkbook\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.guests.create(\n    request=[\n        GuestConfig(\n            environment_id=\"us_env_YOUR_ID\",\n            email=\"email@example.com\",\n            name=\"Your Name\",\n            spaces=[\n                GuestSpace(\n                    id=\"us_sp_YOUR_ID\",\n                    workbooks=[\n                        GuestWorkbook(\n                            id=\"us_wb_YOUR_ID\",\n                        )\n                    ],\n                    last_accessed=datetime.datetime.fromisoformat(\n                        \"2023-10-30 16:59:45.735000+00:00\",\n                    ),\n                )\n            ],\n        )\n    ],\n)\n",
                        "sync_client": "import datetime\n\nfrom flatfile import GuestConfig, GuestSpace, GuestWorkbook\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.create(\n    request=[\n        GuestConfig(\n            environment_id=\"us_env_YOUR_ID\",\n            email=\"email@example.com\",\n            name=\"Your Name\",\n            spaces=[\n                GuestSpace(\n                    id=\"us_sp_YOUR_ID\",\n                    workbooks=[\n                        GuestWorkbook(\n                            id=\"us_wb_YOUR_ID\",\n                        )\n                    ],\n                    last_accessed=datetime.datetime.fromisoformat(\n                        \"2023-10-30 16:59:45.735000+00:00\",\n                    ),\n                )\n            ],\n        )\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.create([{\n        environmentId: \"us_env_YOUR_ID\",\n        email: \"email@example.com\",\n        name: \"Your Name\",\n        spaces: [{\n                id: \"us_sp_YOUR_ID\",\n                workbooks: [{\n                        id: \"us_wb_YOUR_ID\"\n                    }],\n                lastAccessed: new Date(\"2023-10-30T16:59:45.735Z\")\n            }]\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "environmentId": "us_env_YOUR_ID",
                          "email": "email@example.com",
                          "name": "Your Name",
                          "spaces": [
                            {
                              "id": "us_sp_YOUR_ID",
                              "workbooks": [
                                {
                                  "id": "us_wb_YOUR_ID"
                                }
                              ],
                              "lastAccessed": "2023-10-30T16:59:45.735Z"
                            }
                          ]
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_g_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID",
                            "email": "email@example.com",
                            "name": "Your Name",
                            "spaces": [
                              {
                                "id": "us_sp_YOUR_ID",
                                "workbooks": [
                                  {
                                    "id": "us_wb_YOUR_ID"
                                  }
                                ],
                                "lastAccessed": "2023-10-30T16:59:45.735Z"
                              }
                            ],
                            "createdAt": "2023-10-30T16:59:45.735Z",
                            "updatedAt": "2023-10-30T16:59:45.735Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Guests are only there to upload, edit, and download files and perform their tasks in a specific Space.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-guest"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_guests.get",
                "name": "Get a guest",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of guest to return",
                      "key": "guestId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:GuestId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "guestId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_guests:GuestResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/guests/us_g_YOUR_ID",
                    "pathParameters": {
                      "guestId": "us_g_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_g_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "email": "email@example.com",
                        "name": "Your Name",
                        "spaces": [
                          {
                            "id": "us_sp_YOUR_ID",
                            "workbooks": [
                              {
                                "id": "us_wb_YOUR_ID"
                              }
                            ],
                            "lastAccessed": "2023-10-30T16:59:45.735Z"
                          }
                        ],
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.guests.get(\n    guest_id=\"us_g_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.get(\n    guest_id=\"us_g_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.get(\"us_g_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_g_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "email": "email@example.com",
                          "name": "Your Name",
                          "spaces": [
                            {
                              "id": "us_sp_YOUR_ID",
                              "workbooks": [
                                {
                                  "id": "us_wb_YOUR_ID"
                                }
                              ],
                              "lastAccessed": "2023-10-30T16:59:45.735Z"
                            }
                          ],
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single guest",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-guest"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_guests.delete",
                "name": "Delete a guest",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of guest to return",
                      "key": "guestId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:GuestId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "guestId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/guests/us_g_YOUR_ID",
                    "pathParameters": {
                      "guestId": "us_g_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.guests.delete(\n    guest_id=\"us_g_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.delete(\n    guest_id=\"us_g_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.delete(\"us_g_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a single guest",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-guest"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_guests.update",
                "name": "Update a guest",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of guest to return",
                      "key": "guestId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:GuestId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "guestId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_guests:GuestConfigUpdate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_guests:GuestResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/guests/us_g_YOUR_ID",
                    "pathParameters": {
                      "guestId": "us_g_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "email": "updated@example.com",
                      "name": "Your Name Updated"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_g_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "email": "email@example.com",
                        "name": "Your Name",
                        "spaces": [
                          {
                            "id": "us_sp_YOUR_ID",
                            "workbooks": [
                              {
                                "id": "us_wb_YOUR_ID"
                              }
                            ],
                            "lastAccessed": "2023-10-30T16:59:45.735Z"
                          }
                        ],
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import GuestConfigUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.guests.update(\n    guest_id=\"us_g_YOUR_ID\",\n    request=GuestConfigUpdate(\n        email=\"updated@example.com\",\n        name=\"Your Name Updated\",\n    ),\n)\n",
                        "sync_client": "from flatfile import GuestConfigUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.update(\n    guest_id=\"us_g_YOUR_ID\",\n    request=GuestConfigUpdate(\n        email=\"updated@example.com\",\n        name=\"Your Name Updated\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.update(\"us_g_YOUR_ID\", {\n    email: \"updated@example.com\",\n    name: \"Your Name Updated\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "updated@example.com",
                        "name": "Your Name Updated"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_g_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "email": "email@example.com",
                          "name": "Your Name",
                          "spaces": [
                            {
                              "id": "us_sp_YOUR_ID",
                              "workbooks": [
                                {
                                  "id": "us_wb_YOUR_ID"
                                }
                              ],
                              "lastAccessed": "2023-10-30T16:59:45.735Z"
                            }
                          ],
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a single guest, for example to change name or email",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-guest-token",
                "method": "GET",
                "id": "getGuestToken",
                "originalEndpointId": "endpoint_guests.getGuestToken",
                "name": "Get guest token",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of guest to return",
                      "key": "guestId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:GuestId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "guestId"
                    },
                    {
                      "type": "literal",
                      "value": "/token"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "ID of space to return",
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_guests:GuestTokenResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/guests/us_g_YOUR_ID/token",
                    "pathParameters": {
                      "guestId": "us_g_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "token": "eyJ0_SECRET_TOKEN",
                        "valid": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.guests.get_guest_token(\n    guest_id=\"us_g_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.get_guest_token(\n    guest_id=\"us_g_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.getGuestToken(\"us_g_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "token": "eyJ0_SECRET_TOKEN",
                          "valid": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single guest token",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list-guest-roles",
                "method": "GET",
                "id": "listGuestRoles",
                "originalEndpointId": "endpoint_guests.listGuestRoles",
                "name": "List Guest Roles",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The guest id",
                      "key": "guestId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:GuestId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "guestId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:ListActorRolesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "roleId": "string",
                            "actorId": "string",
                            "resourceId": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Lists roles assigned to a guest.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "assign-guest-role",
                "migratedFromUrlSlugs": ["assign-role-to-guest"],
                "method": "POST",
                "id": "assignGuestRole",
                "originalEndpointId": "endpoint_guests.assignGuestRole",
                "name": "Assign Role to Guest",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The guest id",
                      "key": "guestId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:GuestId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "guestId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:AssignActorRoleRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:AssignRoleResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "roleId": "string",
                          "actorId": "string",
                          "resourceId": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles",
                    "pathParameters": {
                      "guestId": ":guestId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Assigns a role to a guest.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-guest-role",
                "migratedFromUrlSlugs": ["remove-role-from-guest"],
                "method": "DELETE",
                "id": "deleteGuestRole",
                "originalEndpointId": "endpoint_guests.deleteGuestRole",
                "name": "Remove Role from Guest",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The guest id",
                      "key": "guestId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:GuestId"
                      }
                    },
                    {
                      "description": "The actor role id",
                      "key": "actorRoleId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ActorRoleId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/guests/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "guestId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "actorRoleId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/guests/:guestId/roles/:actorRoleId",
                    "pathParameters": {
                      "guestId": ":guestId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles/:actorRoleId",
                    "pathParameters": {
                      "guestId": ":guestId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles/:actorRoleId",
                    "pathParameters": {
                      "guestId": ":guestId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/guests/:guestId/roles/:actorRoleId",
                    "pathParameters": {
                      "guestId": ":guestId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Removes a role from a guest.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "invite",
                "migratedFromUrlSlugs": ["invite-guests"],
                "method": "POST",
                "id": "invite",
                "originalEndpointId": "endpoint_guests.invite",
                "name": "Invite guests",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/invitations"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_guests:Invite"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/invitations",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": [
                      {
                        "guestId": "us_g_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "fromName": "Your Name",
                        "message": "Hello, I would like to invite you to my space."
                      }
                    ],
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Invite\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.guests.invite(\n    request=[\n        Invite(\n            guest_id=\"us_g_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            from_name=\"Your Name\",\n            message=\"Hello, I would like to invite you to my space.\",\n        )\n    ],\n)\n",
                        "sync_client": "from flatfile import Invite\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.invite(\n    request=[\n        Invite(\n            guest_id=\"us_g_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            from_name=\"Your Name\",\n            message=\"Hello, I would like to invite you to my space.\",\n        )\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.invite([{\n        guestId: \"us_g_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        fromName: \"Your Name\",\n        message: \"Hello, I would like to invite you to my space.\"\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "guestId": "us_g_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "fromName": "Your Name",
                          "message": "Hello, I would like to invite you to my space."
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Guests can be created as a named guest on the Space or there’s a global link that will let anonymous guests into the space.",
                "authed": true
              }
            ],
            "types": [
              "type_guests:ListGuestsResponse",
              "type_guests:CreateGuestResponse",
              "type_guests:GuestResponse",
              "type_guests:Guest",
              "type_guests:GuestConfig",
              "type_guests:GuestConfigUpdate",
              "type_guests:GuestWorkbook",
              "type_guests:GuestSpace",
              "type_guests:Invite",
              "type_guests:GuestToken",
              "type_guests:GuestTokenResponse"
            ],
            "subpackages": [],
            "urlSlug": "guests",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_jobs": {
            "subpackageId": "subpackage_jobs",
            "name": "jobs",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-jobs"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_jobs.list",
                "name": "List jobs",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "When provided, only jobs for the given environment will be returned",
                    "key": "environmentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EnvironmentId"
                      }
                    }
                  },
                  {
                    "description": "When provided, only jobs for the given space will be returned",
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  },
                  {
                    "description": "When provided, only jobs for the given workbook will be returned",
                    "key": "workbookId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:WorkbookId"
                      }
                    }
                  },
                  {
                    "description": "When provided, only jobs for the given file will be returned",
                    "key": "fileId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:FileId"
                      }
                    }
                  },
                  {
                    "description": "When provided, only jobs that are parts of the given job will be returned",
                    "key": "parentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  },
                  {
                    "description": "Number of jobs to return in a page (default 20)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of jobs to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Sort direction - asc (ascending) or desc (descending)",
                    "key": "sortDirection",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortDirection"
                      }
                    }
                  },
                  {
                    "description": "When true, only top-level jobs will be returned unless a parentId is specified",
                    "key": "excludeChildJobs",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:ListJobsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID",
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      },
                      "data": [
                        {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.list(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.list(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.list({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        },
                        "data": [
                          {
                            "id": "us_jb_YOUR_ID",
                            "createdAt": "2023-10-30T20:04:28.556Z",
                            "updatedAt": "2023-10-30T20:04:32.075Z",
                            "startedAt": "2023-10-30T20:04:29.453Z",
                            "finishedAt": "2023-10-30T20:04:32.074Z",
                            "environmentId": "us_env_YOUR_ID",
                            "type": "workbook",
                            "operation": "submitAction",
                            "source": "us_wb_YOUR_ID",
                            "destination": "us_wb_YOUR_ID",
                            "config": {},
                            "trigger": "immediate",
                            "status": "complete",
                            "progress": 100,
                            "fileId": "us_fl_YOUR_ID",
                            "mode": "foreground",
                            "input": {},
                            "subject": {
                              "id": "us_wb_YOUR_ID",
                              "type": "resource"
                            },
                            "outcome": {
                              "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                            },
                            "info": "Starting job to submit action to webhook.site",
                            "managed": true
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-job"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_jobs.create",
                "name": "Create a job",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "type": "workbook",
                      "operation": "submitAction",
                      "source": "us_wb_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import JobConfig, JobType\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.create(\n    request=JobConfig(\n        type=JobType.WORKBOOK,\n        operation=\"submitAction\",\n        source=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import JobConfig, JobType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.create(\n    request=JobConfig(\n        type=JobType.WORKBOOK,\n        operation=\"submitAction\",\n        source=\"us_wb_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.create({\n    type: Flatfile.JobType.Workbook,\n    operation: \"submitAction\",\n    source: \"us_wb_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-job"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_jobs.get",
                "name": "Get a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The id of the job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.get(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    job_id=\"us_jb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.get(\"us_jb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-job"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_jobs.update",
                "name": "Update a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The id of the job to patch",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobUpdate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "config": {},
                      "status": "complete",
                      "progress": 100
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import JobStatus, JobUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.update(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobUpdate(\n        status=JobStatus.COMPLETE,\n        progress=100,\n    ),\n)\n",
                        "sync_client": "from flatfile import JobStatus, JobUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.update(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobUpdate(\n        status=JobStatus.COMPLETE,\n        progress=100,\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.update(\"us_jb_YOUR_ID\", {\n    config: {},\n    status: Flatfile.JobStatus.Complete,\n    progress: 100\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "config": {},
                        "status": "complete",
                        "progress": 100
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-job"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_jobs.delete",
                "name": "Delete a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The id of the job to delete",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.delete(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.delete(\n    job_id=\"us_jb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.delete(\"us_jb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "execute",
                "migratedFromUrlSlugs": ["execute-a-job"],
                "method": "POST",
                "id": "execute",
                "originalEndpointId": "endpoint_jobs.execute",
                "name": "Execute a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/execute"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/execute",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.execute(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.execute(\n    job_id=\"us_jb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.execute(\"us_jb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Execute a job and return the job",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-execution-plan",
                "migratedFromUrlSlugs": ["get-a-job-s-execution-plan"],
                "method": "GET",
                "id": "getExecutionPlan",
                "originalEndpointId": "endpoint_jobs.getExecutionPlan",
                "name": "Get a job's execution plan",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/plan"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobPlanResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/plan",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "job": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        },
                        "plan": {
                          "fieldMapping": [
                            {
                              "sourceField": {
                                "key": "firstName",
                                "type": "string"
                              },
                              "destinationField": {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              "preview": ["John", "Suzy", "Joe"],
                              "metadata": {
                                "certainty": "absolute",
                                "confidence": 1,
                                "source": "exact"
                              }
                            },
                            {
                              "sourceField": {
                                "key": "lastName",
                                "type": "string"
                              },
                              "destinationField": {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              "preview": ["Smith", "Que", "Montana"],
                              "metadata": {
                                "certainty": "absolute",
                                "confidence": 1,
                                "source": "exact"
                              }
                            }
                          ],
                          "unmappedSourceFields": [],
                          "unmappedDestinationFields": []
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.get_execution_plan(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get_execution_plan(\n    job_id=\"us_jb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.getExecutionPlan(\"us_jb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "job": {
                            "id": "us_jb_YOUR_ID",
                            "createdAt": "2023-10-30T20:04:28.556Z",
                            "updatedAt": "2023-10-30T20:04:32.075Z",
                            "startedAt": "2023-10-30T20:04:29.453Z",
                            "finishedAt": "2023-10-30T20:04:32.074Z",
                            "environmentId": "us_env_YOUR_ID",
                            "type": "workbook",
                            "operation": "submitAction",
                            "source": "us_wb_YOUR_ID",
                            "destination": "us_wb_YOUR_ID",
                            "config": {},
                            "trigger": "immediate",
                            "status": "complete",
                            "progress": 100,
                            "fileId": "us_fl_YOUR_ID",
                            "mode": "foreground",
                            "input": {},
                            "subject": {
                              "id": "us_wb_YOUR_ID",
                              "type": "resource"
                            },
                            "outcome": {
                              "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                            },
                            "info": "Starting job to submit action to webhook.site",
                            "managed": true
                          },
                          "plan": {
                            "fieldMapping": [
                              {
                                "sourceField": {
                                  "key": "firstName",
                                  "type": "string"
                                },
                                "destinationField": {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                "preview": ["John", "Suzy", "Joe"],
                                "metadata": {
                                  "certainty": "absolute",
                                  "confidence": 1,
                                  "source": "exact"
                                }
                              },
                              {
                                "sourceField": {
                                  "key": "lastName",
                                  "type": "string"
                                },
                                "destinationField": {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                "preview": ["Smith", "Que", "Montana"],
                                "metadata": {
                                  "certainty": "absolute",
                                  "confidence": 1,
                                  "source": "exact"
                                }
                              }
                            ],
                            "unmappedSourceFields": [],
                            "unmappedDestinationFields": []
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single job's execution plan",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-execution-plan",
                "migratedFromUrlSlugs": ["replace-a-job-s-plan"],
                "method": "PUT",
                "id": "updateExecutionPlan",
                "originalEndpointId": "endpoint_jobs.updateExecutionPlan",
                "name": "Replace a job's plan",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/plan"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobExecutionPlanRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobPlanResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/plan",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "fieldMapping": [
                        {
                          "sourceField": {
                            "key": "firstName",
                            "type": "string"
                          },
                          "destinationField": {
                            "key": "firstName",
                            "type": "string",
                            "label": "First Name"
                          }
                        },
                        {
                          "sourceField": {
                            "key": "lastName",
                            "type": "string"
                          },
                          "destinationField": {
                            "key": "lastName",
                            "type": "string",
                            "label": "Last Name"
                          }
                        }
                      ],
                      "unmappedSourceFields": [
                        {
                          "sourceField": {
                            "key": "email",
                            "type": "string"
                          }
                        }
                      ],
                      "unmappedDestinationFields": [
                        {
                          "destinationField": {
                            "key": "email",
                            "type": "string",
                            "label": "Email"
                          }
                        }
                      ],
                      "fileId": "us_fl_YOUR_ID",
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "job": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        },
                        "plan": {
                          "fieldMapping": [
                            {
                              "sourceField": {
                                "key": "firstName",
                                "type": "string"
                              },
                              "destinationField": {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              "preview": ["John", "Suzy", "Joe"],
                              "metadata": {
                                "certainty": "absolute",
                                "confidence": 1,
                                "source": "exact"
                              }
                            },
                            {
                              "sourceField": {
                                "key": "lastName",
                                "type": "string"
                              },
                              "destinationField": {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              "preview": ["Smith", "Que", "Montana"],
                              "metadata": {
                                "certainty": "absolute",
                                "confidence": 1,
                                "source": "exact"
                              }
                            }
                          ],
                          "unmappedSourceFields": [],
                          "unmappedDestinationFields": []
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import (\n    DestinationField,\n    Edge,\n    JobExecutionPlanRequest,\n    Property_String,\n    SourceField,\n)\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.update_execution_plan(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobExecutionPlanRequest(\n        field_mapping=[\n            Edge(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"firstName\",\n                ),\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"firstName\",\n                    label=\"First Name\",\n                ),\n            ),\n            Edge(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"lastName\",\n                ),\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"lastName\",\n                    label=\"Last Name\",\n                ),\n            ),\n        ],\n        unmapped_source_fields=[\n            SourceField(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"email\",\n                ),\n            )\n        ],\n        unmapped_destination_fields=[\n            DestinationField(\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"email\",\n                    label=\"Email\",\n                ),\n            )\n        ],\n        file_id=\"us_fl_YOUR_ID\",\n        job_id=\"us_jb_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import (\n    DestinationField,\n    Edge,\n    JobExecutionPlanRequest,\n    Property_String,\n    SourceField,\n)\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.update_execution_plan(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobExecutionPlanRequest(\n        field_mapping=[\n            Edge(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"firstName\",\n                ),\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"firstName\",\n                    label=\"First Name\",\n                ),\n            ),\n            Edge(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"lastName\",\n                ),\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"lastName\",\n                    label=\"Last Name\",\n                ),\n            ),\n        ],\n        unmapped_source_fields=[\n            SourceField(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"email\",\n                ),\n            )\n        ],\n        unmapped_destination_fields=[\n            DestinationField(\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"email\",\n                    label=\"Email\",\n                ),\n            )\n        ],\n        file_id=\"us_fl_YOUR_ID\",\n        job_id=\"us_jb_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.updateExecutionPlan(\"us_jb_YOUR_ID\", {\n    fieldMapping: [{\n            sourceField: {\n                type: \"string\",\n                key: \"firstName\"\n            },\n            destinationField: {\n                type: \"string\",\n                key: \"firstName\",\n                label: \"First Name\"\n            }\n        }, {\n            sourceField: {\n                type: \"string\",\n                key: \"lastName\"\n            },\n            destinationField: {\n                type: \"string\",\n                key: \"lastName\",\n                label: \"Last Name\"\n            }\n        }],\n    unmappedSourceFields: [{\n            sourceField: {\n                type: \"string\",\n                key: \"email\"\n            }\n        }],\n    unmappedDestinationFields: [{\n            destinationField: {\n                type: \"string\",\n                key: \"email\",\n                label: \"Email\"\n            }\n        }],\n    fileId: \"us_fl_YOUR_ID\",\n    jobId: \"us_jb_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "fieldMapping": [
                          {
                            "sourceField": {
                              "key": "firstName",
                              "type": "string"
                            },
                            "destinationField": {
                              "key": "firstName",
                              "type": "string",
                              "label": "First Name"
                            }
                          },
                          {
                            "sourceField": {
                              "key": "lastName",
                              "type": "string"
                            },
                            "destinationField": {
                              "key": "lastName",
                              "type": "string",
                              "label": "Last Name"
                            }
                          }
                        ],
                        "unmappedSourceFields": [
                          {
                            "sourceField": {
                              "key": "email",
                              "type": "string"
                            }
                          }
                        ],
                        "unmappedDestinationFields": [
                          {
                            "destinationField": {
                              "key": "email",
                              "type": "string",
                              "label": "Email"
                            }
                          }
                        ],
                        "fileId": "us_fl_YOUR_ID",
                        "jobId": "us_jb_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "job": {
                            "id": "us_jb_YOUR_ID",
                            "createdAt": "2023-10-30T20:04:28.556Z",
                            "updatedAt": "2023-10-30T20:04:32.075Z",
                            "startedAt": "2023-10-30T20:04:29.453Z",
                            "finishedAt": "2023-10-30T20:04:32.074Z",
                            "environmentId": "us_env_YOUR_ID",
                            "type": "workbook",
                            "operation": "submitAction",
                            "source": "us_wb_YOUR_ID",
                            "destination": "us_wb_YOUR_ID",
                            "config": {},
                            "trigger": "immediate",
                            "status": "complete",
                            "progress": 100,
                            "fileId": "us_fl_YOUR_ID",
                            "mode": "foreground",
                            "input": {},
                            "subject": {
                              "id": "us_wb_YOUR_ID",
                              "type": "resource"
                            },
                            "outcome": {
                              "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                            },
                            "info": "Starting job to submit action to webhook.site",
                            "managed": true
                          },
                          "plan": {
                            "fieldMapping": [
                              {
                                "sourceField": {
                                  "key": "firstName",
                                  "type": "string"
                                },
                                "destinationField": {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                "preview": ["John", "Suzy", "Joe"],
                                "metadata": {
                                  "certainty": "absolute",
                                  "confidence": 1,
                                  "source": "exact"
                                }
                              },
                              {
                                "sourceField": {
                                  "key": "lastName",
                                  "type": "string"
                                },
                                "destinationField": {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                "preview": ["Smith", "Que", "Montana"],
                                "metadata": {
                                  "certainty": "absolute",
                                  "confidence": 1,
                                  "source": "exact"
                                }
                              }
                            ],
                            "unmappedSourceFields": [],
                            "unmappedDestinationFields": []
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a job's entire execution plan",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-execution-plan-fields",
                "migratedFromUrlSlugs": ["update-a-job-s-plan"],
                "method": "PATCH",
                "id": "updateExecutionPlanFields",
                "originalEndpointId": "endpoint_jobs.updateExecutionPlanFields",
                "name": "Update a job's plan",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/plan"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobExecutionPlanConfigRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobPlanResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/jobs/:jobId/plan",
                    "pathParameters": {
                      "jobId": ":jobId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "fileId": "string",
                        "jobId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "job": {
                            "id": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z",
                            "startedAt": "2023-01-01T00:00:00Z",
                            "finishedAt": "2023-01-01T00:00:00Z",
                            "outcomeAcknowledgedAt": "2023-01-01T00:00:00Z",
                            "type": "file",
                            "operation": "string",
                            "source": "string",
                            "destination": "string",
                            "config": {
                              "filter": "valid",
                              "filterField": "string",
                              "searchValue": "string",
                              "searchField": "string",
                              "q": "string",
                              "sheet": "string",
                              "exceptions": ["string"],
                              "snapshotLabel": "string"
                            },
                            "trigger": "manual",
                            "status": "created",
                            "progress": 0,
                            "fileId": "string",
                            "mode": "foreground",
                            "input": {
                              "string": {}
                            },
                            "subject": {
                              "type": "resource",
                              "id": "string"
                            },
                            "outcome": {
                              "string": {}
                            },
                            "info": "string",
                            "managed": true,
                            "environmentId": "string",
                            "part": 0,
                            "partData": {
                              "string": {}
                            },
                            "partExecution": "sequential",
                            "parentId": "string",
                            "predecessorIds": ["string"],
                            "metadata": {
                              "string": {}
                            }
                          },
                          "plan": {
                            "fieldMapping": [
                              {
                                "sourceField": {
                                  "type": "string",
                                  "config": {
                                    "size": "tiny"
                                  },
                                  "key": "string",
                                  "label": "string",
                                  "description": "string",
                                  "constraints": [
                                    {
                                      "type": "required"
                                    }
                                  ],
                                  "readonly": true,
                                  "appearance": {
                                    "size": "xs"
                                  },
                                  "actions": [
                                    {
                                      "label": "string",
                                      "slug": "string",
                                      "operation": "string",
                                      "mode": "foreground",
                                      "tooltip": "string",
                                      "messages": [
                                        {
                                          "type": "error",
                                          "content": "string"
                                        }
                                      ],
                                      "type": "string",
                                      "description": "string",
                                      "schedule": "weekly",
                                      "primary": true,
                                      "confirm": true,
                                      "icon": "string",
                                      "requireAllValid": true,
                                      "requireSelection": true,
                                      "inputForm": {
                                        "type": "simple",
                                        "fields": [
                                          {
                                            "key": "string",
                                            "label": "string",
                                            "description": "string",
                                            "type": "string",
                                            "defaultValue": {},
                                            "config": {
                                              "options": [
                                                {
                                                  "label": "string",
                                                  "description": "string",
                                                  "color": "string",
                                                  "icon": "string",
                                                  "meta": {
                                                    "string": {}
                                                  },
                                                  "value": {}
                                                }
                                              ]
                                            },
                                            "constraints": [
                                              {
                                                "type": "required"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "constraints": [
                                        {
                                          "type": "hasAllValid",
                                          "ignoreSelection": true
                                        }
                                      ],
                                      "mount": {
                                        "type": "sheet",
                                        "slugs": ["string"]
                                      },
                                      "guide": {
                                        "content": "string"
                                      },
                                      "guardrail": {
                                        "content": "string"
                                      }
                                    }
                                  ],
                                  "metadata": {},
                                  "treatments": ["string"],
                                  "alternativeNames": ["string"]
                                },
                                "destinationField": {
                                  "type": "string",
                                  "config": {
                                    "size": "tiny"
                                  },
                                  "key": "string",
                                  "label": "string",
                                  "description": "string",
                                  "constraints": [
                                    {
                                      "type": "required"
                                    }
                                  ],
                                  "readonly": true,
                                  "appearance": {
                                    "size": "xs"
                                  },
                                  "actions": [
                                    {
                                      "label": "string",
                                      "slug": "string",
                                      "operation": "string",
                                      "mode": "foreground",
                                      "tooltip": "string",
                                      "messages": [
                                        {
                                          "type": "error",
                                          "content": "string"
                                        }
                                      ],
                                      "type": "string",
                                      "description": "string",
                                      "schedule": "weekly",
                                      "primary": true,
                                      "confirm": true,
                                      "icon": "string",
                                      "requireAllValid": true,
                                      "requireSelection": true,
                                      "inputForm": {
                                        "type": "simple",
                                        "fields": [
                                          {
                                            "key": "string",
                                            "label": "string",
                                            "description": "string",
                                            "type": "string",
                                            "defaultValue": {},
                                            "config": {
                                              "options": [
                                                {
                                                  "label": "string",
                                                  "description": "string",
                                                  "color": "string",
                                                  "icon": "string",
                                                  "meta": {
                                                    "string": {}
                                                  },
                                                  "value": {}
                                                }
                                              ]
                                            },
                                            "constraints": [
                                              {
                                                "type": "required"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "constraints": [
                                        {
                                          "type": "hasAllValid",
                                          "ignoreSelection": true
                                        }
                                      ],
                                      "mount": {
                                        "type": "sheet",
                                        "slugs": ["string"]
                                      },
                                      "guide": {
                                        "content": "string"
                                      },
                                      "guardrail": {
                                        "content": "string"
                                      }
                                    }
                                  ],
                                  "metadata": {},
                                  "treatments": ["string"],
                                  "alternativeNames": ["string"]
                                },
                                "preview": ["string"],
                                "enumDetails": {
                                  "mapping": [
                                    {
                                      "sourceValue": "string",
                                      "destinationValue": "string"
                                    }
                                  ],
                                  "unusedSourceValues": ["string"],
                                  "unusedDestinationValues": ["string"]
                                },
                                "metadata": {
                                  "certainty": "absolute",
                                  "confidence": 1,
                                  "source": "string"
                                }
                              }
                            ],
                            "unmappedSourceFields": [
                              {
                                "sourceField": {
                                  "type": "string",
                                  "config": {
                                    "size": "tiny"
                                  },
                                  "key": "string",
                                  "label": "string",
                                  "description": "string",
                                  "constraints": [
                                    {
                                      "type": "required"
                                    }
                                  ],
                                  "readonly": true,
                                  "appearance": {
                                    "size": "xs"
                                  },
                                  "actions": [
                                    {
                                      "label": "string",
                                      "slug": "string",
                                      "operation": "string",
                                      "mode": "foreground",
                                      "tooltip": "string",
                                      "messages": [
                                        {
                                          "type": "error",
                                          "content": "string"
                                        }
                                      ],
                                      "type": "string",
                                      "description": "string",
                                      "schedule": "weekly",
                                      "primary": true,
                                      "confirm": true,
                                      "icon": "string",
                                      "requireAllValid": true,
                                      "requireSelection": true,
                                      "inputForm": {
                                        "type": "simple",
                                        "fields": [
                                          {
                                            "key": "string",
                                            "label": "string",
                                            "description": "string",
                                            "type": "string",
                                            "defaultValue": {},
                                            "config": {
                                              "options": [
                                                {
                                                  "label": "string",
                                                  "description": "string",
                                                  "color": "string",
                                                  "icon": "string",
                                                  "meta": {
                                                    "string": {}
                                                  },
                                                  "value": {}
                                                }
                                              ]
                                            },
                                            "constraints": [
                                              {
                                                "type": "required"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "constraints": [
                                        {
                                          "type": "hasAllValid",
                                          "ignoreSelection": true
                                        }
                                      ],
                                      "mount": {
                                        "type": "sheet",
                                        "slugs": ["string"]
                                      },
                                      "guide": {
                                        "content": "string"
                                      },
                                      "guardrail": {
                                        "content": "string"
                                      }
                                    }
                                  ],
                                  "metadata": {},
                                  "treatments": ["string"],
                                  "alternativeNames": ["string"]
                                },
                                "preview": ["string"]
                              }
                            ],
                            "unmappedDestinationFields": [
                              {
                                "destinationField": {
                                  "type": "string",
                                  "config": {
                                    "size": "tiny"
                                  },
                                  "key": "string",
                                  "label": "string",
                                  "description": "string",
                                  "constraints": [
                                    {
                                      "type": "required"
                                    }
                                  ],
                                  "readonly": true,
                                  "appearance": {
                                    "size": "xs"
                                  },
                                  "actions": [
                                    {
                                      "label": "string",
                                      "slug": "string",
                                      "operation": "string",
                                      "mode": "foreground",
                                      "tooltip": "string",
                                      "messages": [
                                        {
                                          "type": "error",
                                          "content": "string"
                                        }
                                      ],
                                      "type": "string",
                                      "description": "string",
                                      "schedule": "weekly",
                                      "primary": true,
                                      "confirm": true,
                                      "icon": "string",
                                      "requireAllValid": true,
                                      "requireSelection": true,
                                      "inputForm": {
                                        "type": "simple",
                                        "fields": [
                                          {
                                            "key": "string",
                                            "label": "string",
                                            "description": "string",
                                            "type": "string",
                                            "defaultValue": {},
                                            "config": {
                                              "options": [
                                                {
                                                  "label": "string",
                                                  "description": "string",
                                                  "color": "string",
                                                  "icon": "string",
                                                  "meta": {
                                                    "string": {}
                                                  },
                                                  "value": {}
                                                }
                                              ]
                                            },
                                            "constraints": [
                                              {
                                                "type": "required"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "constraints": [
                                        {
                                          "type": "hasAllValid",
                                          "ignoreSelection": true
                                        }
                                      ],
                                      "mount": {
                                        "type": "sheet",
                                        "slugs": ["string"]
                                      },
                                      "guide": {
                                        "content": "string"
                                      },
                                      "guardrail": {
                                        "content": "string"
                                      }
                                    }
                                  ],
                                  "metadata": {},
                                  "treatments": ["string"],
                                  "alternativeNames": ["string"]
                                },
                                "preview": ["string"]
                              }
                            ],
                            "programId": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update one or more individual fields on a job's execution plan",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "ack",
                "migratedFromUrlSlugs": ["acknowledge-a-job"],
                "method": "POST",
                "id": "ack",
                "originalEndpointId": "endpoint_jobs.ack",
                "name": "Acknowledge a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/ack"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:JobAckDetails"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/ack",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "info": "Acknowledged by user",
                      "progress": 100,
                      "estimatedCompletionAt": "2023-10-30T20:04:32.074Z"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "import datetime\n\nfrom flatfile import JobAckDetails\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.ack(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobAckDetails(\n        info=\"Acknowledged by user\",\n        progress=100,\n        estimated_completion_at=datetime.datetime.fromisoformat(\n            \"2023-10-30 20:04:32.074000+00:00\",\n        ),\n    ),\n)\n",
                        "sync_client": "import datetime\n\nfrom flatfile import JobAckDetails\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.ack(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobAckDetails(\n        info=\"Acknowledged by user\",\n        progress=100,\n        estimated_completion_at=datetime.datetime.fromisoformat(\n            \"2023-10-30 20:04:32.074000+00:00\",\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.ack(\"us_jb_YOUR_ID\", {\n    info: \"Acknowledged by user\",\n    progress: 100,\n    estimatedCompletionAt: new Date(\"2023-10-30T20:04:32.074Z\")\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "info": "Acknowledged by user",
                        "progress": 100,
                        "estimatedCompletionAt": "2023-10-30T20:04:32.074Z"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Acknowledge a job and return the job",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "ack-outcome",
                "migratedFromUrlSlugs": ["acknowledge-a-job-outcome"],
                "method": "POST",
                "id": "ackOutcome",
                "originalEndpointId": "endpoint_jobs.ackOutcome",
                "name": "Acknowledge a job outcome",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/outcome/ack"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/outcome/ack",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.ack_outcome(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.ack_outcome(\n    job_id=\"us_jb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.ackOutcome(\"us_jb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Acknowledge a job outcome and return the job",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "complete",
                "migratedFromUrlSlugs": ["complete-a-job"],
                "method": "POST",
                "id": "complete",
                "originalEndpointId": "endpoint_jobs.complete",
                "name": "Complete a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/complete"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:JobCompleteDetails"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/complete",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "outcome": {
                        "acknowledge": true,
                        "buttonText": "Acknowledge",
                        "next": {
                          "id": "us_jb_YOUR_ID",
                          "type": "id"
                        },
                        "heading": "Success",
                        "message": "Job was successful"
                      },
                      "info": "Job is Complete"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import JobCompleteDetails, JobOutcome, JobOutcomeNext_Id\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.complete(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCompleteDetails(\n        outcome=JobOutcome(\n            acknowledge=True,\n            button_text=\"Acknowledge\",\n            next=JobOutcomeNext_Id(\n                type=\"id\",\n                id=\"us_jb_YOUR_ID\",\n            ),\n            heading=\"Success\",\n            message=\"Job was successful\",\n        ),\n        info=\"Job is Complete\",\n    ),\n)\n",
                        "sync_client": "from flatfile import JobCompleteDetails, JobOutcome, JobOutcomeNext_Id\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.complete(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCompleteDetails(\n        outcome=JobOutcome(\n            acknowledge=True,\n            button_text=\"Acknowledge\",\n            next=JobOutcomeNext_Id(\n                type=\"id\",\n                id=\"us_jb_YOUR_ID\",\n            ),\n            heading=\"Success\",\n            message=\"Job was successful\",\n        ),\n        info=\"Job is Complete\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.complete(\"us_jb_YOUR_ID\", {\n    outcome: {\n        acknowledge: true,\n        buttonText: \"Acknowledge\",\n        next: {\n            type: \"id\",\n            id: \"us_jb_YOUR_ID\"\n        },\n        heading: \"Success\",\n        message: \"Job was successful\"\n    },\n    info: \"Job is Complete\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "outcome": {
                          "acknowledge": true,
                          "buttonText": "Acknowledge",
                          "next": {
                            "id": "us_jb_YOUR_ID",
                            "type": "id"
                          },
                          "heading": "Success",
                          "message": "Job was successful"
                        },
                        "info": "Job is Complete"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Complete a job and return the job",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "fail",
                "migratedFromUrlSlugs": ["fail-a-job"],
                "method": "POST",
                "id": "fail",
                "originalEndpointId": "endpoint_jobs.fail",
                "name": "Fail a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/fail"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:JobCompleteDetails"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/fail",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "outcome": {
                        "acknowledge": true,
                        "buttonText": "Acknowledge",
                        "next": {
                          "id": "us_jb_YOUR_ID",
                          "type": "id"
                        },
                        "heading": "Failed",
                        "message": "Job failed"
                      },
                      "info": "Job was failed"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import JobCompleteDetails, JobOutcome, JobOutcomeNext_Id\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.fail(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCompleteDetails(\n        outcome=JobOutcome(\n            acknowledge=True,\n            button_text=\"Acknowledge\",\n            next=JobOutcomeNext_Id(\n                type=\"id\",\n                id=\"us_jb_YOUR_ID\",\n            ),\n            heading=\"Failed\",\n            message=\"Job failed\",\n        ),\n        info=\"Job was failed\",\n    ),\n)\n",
                        "sync_client": "from flatfile import JobCompleteDetails, JobOutcome, JobOutcomeNext_Id\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.fail(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCompleteDetails(\n        outcome=JobOutcome(\n            acknowledge=True,\n            button_text=\"Acknowledge\",\n            next=JobOutcomeNext_Id(\n                type=\"id\",\n                id=\"us_jb_YOUR_ID\",\n            ),\n            heading=\"Failed\",\n            message=\"Job failed\",\n        ),\n        info=\"Job was failed\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.fail(\"us_jb_YOUR_ID\", {\n    outcome: {\n        acknowledge: true,\n        buttonText: \"Acknowledge\",\n        next: {\n            type: \"id\",\n            id: \"us_jb_YOUR_ID\"\n        },\n        heading: \"Failed\",\n        message: \"Job failed\"\n    },\n    info: \"Job was failed\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "outcome": {
                          "acknowledge": true,
                          "buttonText": "Acknowledge",
                          "next": {
                            "id": "us_jb_YOUR_ID",
                            "type": "id"
                          },
                          "heading": "Failed",
                          "message": "Job failed"
                        },
                        "info": "Job was failed"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Fail a job and return the job",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "cancel",
                "migratedFromUrlSlugs": ["cancel-a-job"],
                "method": "POST",
                "id": "cancel",
                "originalEndpointId": "endpoint_jobs.cancel",
                "name": "Cancel a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_jobs:JobCancelDetails"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/cancel",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "info": "Job was canceled"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import JobCancelDetails\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.cancel(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCancelDetails(\n        info=\"Job was canceled\",\n    ),\n)\n",
                        "sync_client": "from flatfile import JobCancelDetails\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.cancel(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCancelDetails(\n        info=\"Job was canceled\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.cancel(\"us_jb_YOUR_ID\", {\n    info: \"Job was canceled\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "info": "Job was canceled"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Cancel a job and return the job",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "retry",
                "migratedFromUrlSlugs": ["retry-a-failed-job"],
                "method": "POST",
                "id": "retry",
                "originalEndpointId": "endpoint_jobs.retry",
                "name": "Retry a failed job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/retry"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/jobs/:jobId/retry",
                    "pathParameters": {
                      "jobId": ":jobId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "startedAt": "2023-01-01T00:00:00Z",
                          "finishedAt": "2023-01-01T00:00:00Z",
                          "outcomeAcknowledgedAt": "2023-01-01T00:00:00Z",
                          "type": "file",
                          "operation": "string",
                          "source": "string",
                          "destination": "string",
                          "config": {
                            "filter": "valid",
                            "filterField": "string",
                            "searchValue": "string",
                            "searchField": "string",
                            "q": "string",
                            "sheet": "string",
                            "exceptions": ["string"],
                            "snapshotLabel": "string"
                          },
                          "trigger": "manual",
                          "status": "created",
                          "progress": 0,
                          "fileId": "string",
                          "mode": "foreground",
                          "input": {
                            "string": {}
                          },
                          "subject": {
                            "type": "resource",
                            "id": "string"
                          },
                          "outcome": {
                            "string": {}
                          },
                          "info": "string",
                          "managed": true,
                          "environmentId": "string",
                          "part": 0,
                          "partData": {
                            "string": {}
                          },
                          "partExecution": "sequential",
                          "parentId": "string",
                          "predecessorIds": ["string"],
                          "metadata": {
                            "string": {}
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retry a failt job and return the job",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "preview-mutation",
                "migratedFromUrlSlugs": ["preview-a-mutation"],
                "method": "POST",
                "id": "previewMutation",
                "originalEndpointId": "endpoint_jobs.previewMutation",
                "name": "Preview a mutation",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/preview-mutation"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:MutateJobConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_records:DiffRecordsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/jobs/preview-mutation",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "string",
                        "mutateRecord": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "values": {
                              "string": {
                                "snapshotValue": "string",
                                "clipValue": "string",
                                "valid": true,
                                "messages": [
                                  {
                                    "field": "string",
                                    "type": "error",
                                    "source": "required-constraint",
                                    "message": "string",
                                    "path": "string"
                                  }
                                ],
                                "metadata": {
                                  "string": {}
                                },
                                "value": "string",
                                "layer": "string",
                                "updatedAt": "2023-01-01T00:00:00Z"
                              }
                            },
                            "resolves": [
                              {
                                "field": "string",
                                "type": "conflict",
                                "resolveTo": "clip"
                              }
                            ],
                            "id": "string",
                            "versionId": "string",
                            "commitId": "string",
                            "valid": true,
                            "messages": [
                              {
                                "field": "string",
                                "type": "error",
                                "source": "required-constraint",
                                "message": "string",
                                "path": "string"
                              }
                            ],
                            "metadata": {
                              "string": {}
                            },
                            "config": {
                              "readonly": true,
                              "fields": {
                                "string": {
                                  "readonly": true
                                }
                              },
                              "markedForDeletion": true
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Preview the results of a mutation",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "split",
                "migratedFromUrlSlugs": ["split-a-job"],
                "method": "POST",
                "id": "split",
                "originalEndpointId": "endpoint_jobs.split",
                "name": "Split a job",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of job to return",
                      "key": "jobId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:JobId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/jobs"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "jobId"
                    },
                    {
                      "type": "literal",
                      "value": "/split"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobSplitDetails"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_jobs:JobResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/jobs/us_jb_YOUR_ID/split",
                    "pathParameters": {
                      "jobId": "us_jb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "parts": [{}],
                      "runInParallel": true
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_jb_YOUR_ID",
                        "createdAt": "2023-10-30T20:04:28.556Z",
                        "updatedAt": "2023-10-30T20:04:32.075Z",
                        "startedAt": "2023-10-30T20:04:29.453Z",
                        "finishedAt": "2023-10-30T20:04:32.074Z",
                        "environmentId": "us_env_YOUR_ID",
                        "type": "workbook",
                        "operation": "submitAction",
                        "source": "us_wb_YOUR_ID",
                        "destination": "us_wb_YOUR_ID",
                        "config": {},
                        "trigger": "immediate",
                        "status": "complete",
                        "progress": 100,
                        "fileId": "us_fl_YOUR_ID",
                        "mode": "foreground",
                        "input": {},
                        "subject": {
                          "id": "us_wb_YOUR_ID",
                          "type": "resource"
                        },
                        "outcome": {
                          "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                        },
                        "info": "Starting job to submit action to webhook.site",
                        "managed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import JobSplitDetails\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.jobs.split(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobSplitDetails(\n        run_in_parallel=True,\n    ),\n)\n",
                        "sync_client": "from flatfile import JobSplitDetails\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.split(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobSplitDetails(\n        run_in_parallel=True,\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.split(\"us_jb_YOUR_ID\", {\n    parts: [{}],\n    runInParallel: true\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "parts": [{}],
                        "runInParallel": true
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_jb_YOUR_ID",
                          "createdAt": "2023-10-30T20:04:28.556Z",
                          "updatedAt": "2023-10-30T20:04:32.075Z",
                          "startedAt": "2023-10-30T20:04:29.453Z",
                          "finishedAt": "2023-10-30T20:04:32.074Z",
                          "environmentId": "us_env_YOUR_ID",
                          "type": "workbook",
                          "operation": "submitAction",
                          "source": "us_wb_YOUR_ID",
                          "destination": "us_wb_YOUR_ID",
                          "config": {},
                          "trigger": "immediate",
                          "status": "complete",
                          "progress": 100,
                          "fileId": "us_fl_YOUR_ID",
                          "mode": "foreground",
                          "input": {},
                          "subject": {
                            "id": "us_wb_YOUR_ID",
                            "type": "resource"
                          },
                          "outcome": {
                            "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                          },
                          "info": "Starting job to submit action to webhook.site",
                          "managed": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Split a job and return the job",
                "authed": true
              }
            ],
            "types": [
              "type_jobs:ListJobsResponse",
              "type_jobs:JobResponse",
              "type_jobs:JobPlanResponse",
              "type_jobs:Job",
              "type_jobs:JobConfig",
              "type_jobs:JobUpdate",
              "type_jobs:JobPartExecution",
              "type_jobs:JobUpdateConfig",
              "type_jobs:JobSource",
              "type_jobs:JobDestination",
              "type_jobs:DeleteRecordsJobConfig",
              "type_jobs:FileJobConfig",
              "type_jobs:MutateJobConfig",
              "type_jobs:MappingProgramJobConfig",
              "type_jobs:AiGenerateBlueprintJobConfig",
              "type_jobs:AppAutobuildDeployJobConfig",
              "type_jobs:AiGenerateSampleDataJobConfig",
              "type_jobs:AiGenerateBlueprintConstraintsJobConfig",
              "type_jobs:AiGenerateConstraintJobConfig",
              "type_jobs:Driver",
              "type_jobs:Trigger",
              "type_jobs:PipelineJobConfig",
              "type_jobs:JobType",
              "type_jobs:JobStatus",
              "type_jobs:JobMode",
              "type_jobs:JobSubject",
              "type_jobs:CollectionJobSubject",
              "type_jobs:ResourceJobSubject",
              "type_jobs:JobPlan",
              "type_jobs:JobExecutionPlanRequest",
              "type_jobs:JobExecutionPlanConfigRequest",
              "type_jobs:JobAckDetails",
              "type_jobs:JobCompleteDetails",
              "type_jobs:JobOutcomeTriggerType",
              "type_jobs:JobOutcomeTriggerAudience",
              "type_jobs:JobOutcomeTriggerDetails",
              "type_jobs:JobOutcomeTrigger",
              "type_jobs:JobOutcome",
              "type_jobs:JobOutcomeNext",
              "type_jobs:JobOutcomeNextId",
              "type_jobs:JobOutcomeNextUrl",
              "type_jobs:JobOutcomeNextDownload",
              "type_jobs:JobOutcomeNextFileObject",
              "type_jobs:JobOutcomeNextFiles",
              "type_jobs:JobOutcomeNextWait",
              "type_jobs:JobOutcomeNextRetry",
              "type_jobs:JobOutcomeNextSnapshot",
              "type_jobs:JobOutcomeNextView",
              "type_jobs:JobCancelDetails",
              "type_jobs:JobSplitDetails",
              "type_jobs:JobParts",
              "type_jobs:JobPartsArray",
              "type_jobs:JobExecutionPlan",
              "type_jobs:JobExecutionPlanConfig",
              "type_jobs:Edge",
              "type_jobs:SourceField",
              "type_jobs:DestinationField",
              "type_jobs:EnumDetails",
              "type_jobs:EnumValue",
              "type_jobs:Metadata",
              "type_jobs:Certainty",
              "type_jobs:CategoryMapping",
              "type_jobs:FindAndReplaceJobConfig",
              "type_jobs:ExportJobConfig",
              "type_jobs:ExportOptions",
              "type_jobs:EmptyObject"
            ],
            "subpackages": [],
            "urlSlug": "jobs",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_mapping": {
            "subpackageId": "subpackage_mapping",
            "name": "mapping",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-mapping-program",
                "migratedFromUrlSlugs": ["create-a-mapping-between-two-schemas"],
                "method": "POST",
                "id": "createMappingProgram",
                "originalEndpointId": "endpoint_mapping.createMappingProgram",
                "name": "Create a mapping between two schemas",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:ProgramConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:ProgramResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "source": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        },
                        "destination": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "rules": [
                            {
                              "id": "string",
                              "confidence": 0,
                              "createdBy": "string",
                              "createdAt": "2023-01-01T00:00:00Z",
                              "updatedAt": "2023-01-01T00:00:00Z",
                              "deletedAt": "2023-01-01T00:00:00Z",
                              "name": "string",
                              "type": "string",
                              "config": {},
                              "acceptedAt": "2023-01-01T00:00:00Z",
                              "acceptedBy": "string",
                              "metadata": {}
                            }
                          ],
                          "id": "string",
                          "namespace": "string",
                          "familyId": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "createdBy": "string",
                          "sourceKeys": ["string"],
                          "destinationKeys": ["string"],
                          "summary": {
                            "totalRuleCount": 0,
                            "addedRuleCount": 0,
                            "deletedRuleCount": 0
                          },
                          "accessToken": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "source": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        },
                        "destination": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "source": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        },
                        "destination": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates a list of mapping rules based on two provided schemas",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-all-history-for-user",
                "migratedFromUrlSlugs": ["delete-all-history-for-the-authenticated-user"],
                "method": "DELETE",
                "id": "deleteAllHistoryForUser",
                "originalEndpointId": "endpoint_mapping.deleteAllHistoryForUser",
                "name": "Delete all history for the authenticated user",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "environmentId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_commons:EnvironmentId"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes all history for the authenticated user",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list-mapping-programs",
                "method": "GET",
                "id": "listMappingPrograms",
                "originalEndpointId": "endpoint_mapping.listMappingPrograms",
                "name": "List mapping programs",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Number of programs to return in a page (default 10)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of records to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by creator",
                    "key": "createdBy",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    }
                  },
                  {
                    "description": "Filter by creation time",
                    "key": "createdAfter",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by creation time",
                    "key": "createdBefore",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "The ID of the environment",
                    "key": "environmentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EnvironmentId"
                      }
                    }
                  },
                  {
                    "description": "Filter by family",
                    "key": "familyId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:FamilyId"
                      }
                    }
                  },
                  {
                    "description": "Filter by namespace",
                    "key": "namespace",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by source keys",
                    "key": "sourceKeys",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by destination keys",
                    "key": "destinationKeys",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:ProgramsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {
                      "pageSize": 0,
                      "pageNumber": 0
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "rules": [
                              {
                                "id": "string",
                                "confidence": 0,
                                "createdBy": "string",
                                "createdAt": "2023-01-01T00:00:00Z",
                                "updatedAt": "2023-01-01T00:00:00Z",
                                "deletedAt": "2023-01-01T00:00:00Z",
                                "name": "string",
                                "type": "string",
                                "config": {},
                                "acceptedAt": "2023-01-01T00:00:00Z",
                                "acceptedBy": "string",
                                "metadata": {}
                              }
                            ],
                            "id": "string",
                            "namespace": "string",
                            "familyId": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "createdBy": "string",
                            "sourceKeys": ["string"],
                            "destinationKeys": ["string"],
                            "summary": {
                              "totalRuleCount": 0,
                              "addedRuleCount": 0,
                              "deletedRuleCount": 0
                            },
                            "accessToken": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping",
                    "pathParameters": {},
                    "queryParameters": {
                      "pageSize": 0,
                      "pageNumber": 0
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "List all mapping programs",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-mapping-program",
                "migratedFromUrlSlugs": ["get-a-mapping-program"],
                "method": "GET",
                "id": "getMappingProgram",
                "originalEndpointId": "endpoint_mapping.getMappingProgram",
                "name": "Get a mapping program",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:ProgramResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "rules": [
                            {
                              "id": "string",
                              "confidence": 0,
                              "createdBy": "string",
                              "createdAt": "2023-01-01T00:00:00Z",
                              "updatedAt": "2023-01-01T00:00:00Z",
                              "deletedAt": "2023-01-01T00:00:00Z",
                              "name": "string",
                              "type": "string",
                              "config": {},
                              "acceptedAt": "2023-01-01T00:00:00Z",
                              "acceptedBy": "string",
                              "metadata": {}
                            }
                          ],
                          "id": "string",
                          "namespace": "string",
                          "familyId": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "createdBy": "string",
                          "sourceKeys": ["string"],
                          "destinationKeys": ["string"],
                          "summary": {
                            "totalRuleCount": 0,
                            "addedRuleCount": 0,
                            "deletedRuleCount": 0
                          },
                          "accessToken": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a mapping program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-mapping-program",
                "migratedFromUrlSlugs": ["update-a-mapping-program"],
                "method": "PATCH",
                "id": "updateMappingProgram",
                "originalEndpointId": "endpoint_mapping.updateMappingProgram",
                "name": "Update a mapping program",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:ProgramConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:ProgramResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "source": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        },
                        "destination": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "rules": [
                            {
                              "id": "string",
                              "confidence": 0,
                              "createdBy": "string",
                              "createdAt": "2023-01-01T00:00:00Z",
                              "updatedAt": "2023-01-01T00:00:00Z",
                              "deletedAt": "2023-01-01T00:00:00Z",
                              "name": "string",
                              "type": "string",
                              "config": {},
                              "acceptedAt": "2023-01-01T00:00:00Z",
                              "acceptedBy": "string",
                              "metadata": {}
                            }
                          ],
                          "id": "string",
                          "namespace": "string",
                          "familyId": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "createdBy": "string",
                          "sourceKeys": ["string"],
                          "destinationKeys": ["string"],
                          "summary": {
                            "totalRuleCount": 0,
                            "addedRuleCount": 0,
                            "deletedRuleCount": 0
                          },
                          "accessToken": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "source": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        },
                        "destination": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "source": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        },
                        "destination": {
                          "name": "string",
                          "fields": [
                            {
                              "type": "string",
                              "key": "string"
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a mapping program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-mapping-program",
                "migratedFromUrlSlugs": ["delete-a-mapping-program"],
                "method": "DELETE",
                "id": "deleteMappingProgram",
                "originalEndpointId": "endpoint_mapping.deleteMappingProgram",
                "name": "Delete a mapping program",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a mapping program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-rules",
                "migratedFromUrlSlugs": ["add-mapping-rules-to-a-program"],
                "method": "POST",
                "id": "createRules",
                "originalEndpointId": "endpoint_mapping.createRules",
                "name": "Add mapping rules to a program",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": "/rules"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:CreateMappingRulesRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:MappingRulesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "name": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "confidence": 0,
                            "createdBy": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z",
                            "deletedAt": "2023-01-01T00:00:00Z",
                            "name": "string",
                            "type": "string",
                            "config": {},
                            "acceptedAt": "2023-01-01T00:00:00Z",
                            "acceptedBy": "string",
                            "metadata": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "name": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "name": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Add mapping rules to a program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-multiple-rules",
                "migratedFromUrlSlugs": ["delete-multiple-mapping-rules"],
                "method": "DELETE",
                "id": "deleteMultipleRules",
                "originalEndpointId": "endpoint_mapping.deleteMultipleRules",
                "name": "Delete multiple mapping rules",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": "/rules"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Array of rule IDs to be deleted",
                        "key": "ruleIds",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_commons:MappingId"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "ruleIds": ["string"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "ruleIds": ["string"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "ruleIds": ["string"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes multiple mapping rules from a program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list-rules",
                "migratedFromUrlSlugs": ["list-mapping-rules"],
                "method": "GET",
                "id": "listRules",
                "originalEndpointId": "endpoint_mapping.listRules",
                "name": "List mapping rules",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": "/rules"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:MappingRulesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/mapping/us_mp_YOUR_ID/rules",
                    "pathParameters": {
                      "programId": "us_mp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "mapping-rule-id",
                          "name": "Assign mapping rule",
                          "type": "assign",
                          "config": {},
                          "confidence": 1,
                          "createdBy": "us_usr_YOUR_ID",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "updatedAt": "2021-01-01T00:00:00Z",
                          "metadata": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.listRules(\"us_mp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "mapping-rule-id",
                            "name": "Assign mapping rule",
                            "type": "assign",
                            "config": {},
                            "confidence": 1,
                            "createdBy": "us_usr_YOUR_ID",
                            "createdAt": "2021-01-01T00:00:00Z",
                            "updatedAt": "2021-01-01T00:00:00Z",
                            "metadata": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.listRules(\"us_mp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.listRules(\"us_mp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "List all mapping rules in a program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-rule",
                "migratedFromUrlSlugs": ["get-a-mapping-rule"],
                "method": "GET",
                "id": "getRule",
                "originalEndpointId": "endpoint_mapping.getRule",
                "name": "Get a mapping rule",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    },
                    {
                      "description": "ID of mapping rule",
                      "key": "mappingId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:MappingId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": "/rules/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "mappingId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:MappingRuleResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID",
                    "pathParameters": {
                      "programId": "us_mp_YOUR_ID",
                      "mappingId": "us_mr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "mapping-rule-id",
                        "name": "Assign mapping rule",
                        "type": "assign",
                        "config": {},
                        "confidence": 1,
                        "createdBy": "us_usr_YOUR_ID",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "updatedAt": "2021-01-01T00:00:00Z",
                        "metadata": {}
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.getRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "mapping-rule-id",
                          "name": "Assign mapping rule",
                          "type": "assign",
                          "config": {},
                          "confidence": 1,
                          "createdBy": "us_usr_YOUR_ID",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "updatedAt": "2021-01-01T00:00:00Z",
                          "metadata": {}
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules/:mappingId",
                    "pathParameters": {
                      "programId": ":programId",
                      "mappingId": ":mappingId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.getRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules/:mappingId",
                    "pathParameters": {
                      "programId": ":programId",
                      "mappingId": ":mappingId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.getRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a mapping rule from a program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-rule",
                "migratedFromUrlSlugs": ["update-a-mapping-rule"],
                "method": "PATCH",
                "id": "updateRule",
                "originalEndpointId": "endpoint_mapping.updateRule",
                "name": "Update a mapping rule",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    },
                    {
                      "description": "ID of mapping rule",
                      "key": "mappingId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:MappingId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": "/rules/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "mappingId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:MappingRuleConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:MappingRuleResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID",
                    "pathParameters": {
                      "programId": "us_mp_YOUR_ID",
                      "mappingId": "us_mr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "Assign mapping rule",
                      "type": "assign",
                      "config": {},
                      "metadata": {}
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "mapping-rule-id",
                        "name": "Assign mapping rule",
                        "type": "assign",
                        "config": {},
                        "confidence": 1,
                        "createdBy": "us_usr_YOUR_ID",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "updatedAt": "2021-01-01T00:00:00Z",
                        "metadata": {}
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import MappingRuleConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n",
                        "sync_client": "from flatfile import MappingRuleConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.updateRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\", {\n    name: \"Assign mapping rule\",\n    type: \"assign\",\n    config: {},\n    metadata: {}\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "Assign mapping rule",
                        "type": "assign",
                        "config": {},
                        "metadata": {}
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "mapping-rule-id",
                          "name": "Assign mapping rule",
                          "type": "assign",
                          "config": {},
                          "confidence": 1,
                          "createdBy": "us_usr_YOUR_ID",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "updatedAt": "2021-01-01T00:00:00Z",
                          "metadata": {}
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules/:mappingId",
                    "pathParameters": {
                      "programId": ":programId",
                      "mappingId": ":mappingId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import MappingRuleConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n",
                        "sync_client": "from flatfile import MappingRuleConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.updateRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\", {\n    name: \"Assign mapping rule\",\n    type: \"assign\",\n    config: {},\n    metadata: {}\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string",
                        "type": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules/:mappingId",
                    "pathParameters": {
                      "programId": ":programId",
                      "mappingId": ":mappingId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import MappingRuleConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n",
                        "sync_client": "from flatfile import MappingRuleConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.updateRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\", {\n    name: \"Assign mapping rule\",\n    type: \"assign\",\n    config: {},\n    metadata: {}\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string",
                        "type": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a mapping rule in a program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-rules",
                "migratedFromUrlSlugs": ["update-a-list-of-mapping-rules"],
                "method": "PATCH",
                "id": "updateRules",
                "originalEndpointId": "endpoint_mapping.updateRules",
                "name": "Update a list of mapping rules",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": "/rules"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:UpdateMappingRulesRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_mapping:MappingRulesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "id": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "name": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "confidence": 0,
                            "createdBy": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z",
                            "deletedAt": "2023-01-01T00:00:00Z",
                            "name": "string",
                            "type": "string",
                            "config": {},
                            "acceptedAt": "2023-01-01T00:00:00Z",
                            "acceptedBy": "string",
                            "metadata": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "id": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "name": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules",
                    "pathParameters": {
                      "programId": ":programId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "id": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "name": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a list of mapping rules in a program",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-rule",
                "migratedFromUrlSlugs": ["delete-a-mapping-rule"],
                "method": "DELETE",
                "id": "deleteRule",
                "originalEndpointId": "endpoint_mapping.deleteRule",
                "name": "Delete a mapping rule",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the program",
                      "key": "programId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ProgramId"
                      }
                    },
                    {
                      "description": "ID of mapping rule",
                      "key": "mappingId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:MappingId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/mapping"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "programId"
                    },
                    {
                      "type": "literal",
                      "value": "/rules/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "mappingId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID",
                    "pathParameters": {
                      "programId": "us_mp_YOUR_ID",
                      "mappingId": "us_mr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.deleteRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules/:mappingId",
                    "pathParameters": {
                      "programId": ":programId",
                      "mappingId": ":mappingId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.deleteRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/mapping/:programId/rules/:mappingId",
                    "pathParameters": {
                      "programId": ":programId",
                      "mappingId": ":mappingId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.deleteRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a mapping rule from a program",
                "authed": true
              }
            ],
            "types": [
              "type_mapping:ProgramConfig",
              "type_mapping:ProgramsResponse",
              "type_mapping:ProgramResponse",
              "type_mapping:Program",
              "type_mapping:ProgramSummary",
              "type_mapping:MappingRuleConfig",
              "type_mapping:MappingRule",
              "type_mapping:MappingRuleOrConfig",
              "type_mapping:CreateMappingRulesRequest",
              "type_mapping:UpdateMappingRulesRequest",
              "type_mapping:MappingRuleResponse",
              "type_mapping:MappingRulesResponse"
            ],
            "subpackages": [],
            "urlSlug": "mapping",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_records": {
            "subpackageId": "subpackage_records",
            "name": "records",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-records"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_records.get",
                "name": "Get records",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/records"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Deprecated, use `commitId` instead.",
                    "key": "versionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:VersionId"
                      }
                    },
                    "availability": "Deprecated"
                  },
                  {
                    "key": "commitId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  },
                  {
                    "description": "Deprecated, use `sinceCommitId` instead.",
                    "key": "sinceVersionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:VersionId"
                      }
                    },
                    "availability": "Deprecated"
                  },
                  {
                    "key": "sinceCommitId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  },
                  {
                    "key": "sortField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortField"
                      }
                    }
                  },
                  {
                    "key": "sortDirection",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortDirection"
                      }
                    }
                  },
                  {
                    "key": "filter",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Filter"
                      }
                    }
                  },
                  {
                    "description": "Name of field by which to filter records",
                    "key": "filterField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:FilterField"
                      }
                    }
                  },
                  {
                    "key": "searchValue",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchValue"
                      }
                    }
                  },
                  {
                    "key": "searchField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchField"
                      }
                    }
                  },
                  {
                    "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records. Maximum of 100 allowed.",
                    "key": "ids",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  },
                  {
                    "description": "Number of records to return in a page (default 10,000)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of records to return (Note - numbers start at 1)",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "**DEPRECATED** Use GET /sheets/:sheetId/counts",
                    "key": "includeCounts",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    },
                    "availability": "Deprecated"
                  },
                  {
                    "description": "The length of the record result set, returned as counts.total",
                    "key": "includeLength",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "If true, linked records will be included in the results. Defaults to false.",
                    "key": "includeLinks",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "Include error messages, defaults to false.",
                    "key": "includeMessages",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "A list of field keys to include in the response. If not provided, all fields will be included.",
                    "key": "fields",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "if \"for\" is provided, the query parameters will be pulled from the event payload",
                    "key": "for",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EventId"
                      }
                    }
                  },
                  {
                    "description": "An FFQL query used to filter the result set",
                    "key": "q",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_records:GetRecordsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/records",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "records": [
                          {
                            "id": "us_rc_YOUR_ID",
                            "values": {
                              "firstName": {
                                "value": "John",
                                "messages": [],
                                "valid": true,
                                "updatedAt": "2023-11-20T16:59:40.286Z"
                              },
                              "lastName": {
                                "value": "Smith",
                                "messages": [],
                                "valid": true,
                                "updatedAt": "2023-11-20T16:59:40.286Z"
                              },
                              "email": {
                                "value": "john.smith@example.com",
                                "messages": [],
                                "valid": true,
                                "updatedAt": "2023-11-20T16:59:40.286Z"
                              }
                            },
                            "valid": true,
                            "metadata": {},
                            "config": {}
                          }
                        ],
                        "counts": {
                          "valid": 1000,
                          "error": 0,
                          "total": 1000
                        },
                        "versionId": "us_vr_YOUR_ID",
                        "commitId": "us_vr_YOUR_ID",
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.get(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "records": [
                            {
                              "id": "us_rc_YOUR_ID",
                              "values": {
                                "firstName": {
                                  "value": "John",
                                  "messages": [],
                                  "valid": true,
                                  "updatedAt": "2023-11-20T16:59:40.286Z"
                                },
                                "lastName": {
                                  "value": "Smith",
                                  "messages": [],
                                  "valid": true,
                                  "updatedAt": "2023-11-20T16:59:40.286Z"
                                },
                                "email": {
                                  "value": "john.smith@example.com",
                                  "messages": [],
                                  "valid": true,
                                  "updatedAt": "2023-11-20T16:59:40.286Z"
                                }
                              },
                              "valid": true,
                              "metadata": {},
                              "config": {}
                            }
                          ],
                          "counts": {
                            "valid": 1000,
                            "error": 0,
                            "total": 1000
                          },
                          "versionId": "us_vr_YOUR_ID",
                          "commitId": "us_vr_YOUR_ID",
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {
                      "versionId": "string",
                      "commitId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.get(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {
                      "versionId": "string",
                      "commitId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.get(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns records from a sheet in a workbook",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-records"],
                "method": "PUT",
                "id": "update",
                "originalEndpointId": "endpoint_records.update",
                "name": "Update records",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/records"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_records:Records"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_versions:VersionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/records",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": [
                      {
                        "id": "us_rc_YOUR_ID",
                        "versionId": "us_vr_YOUR_ID",
                        "commitId": "us_vr_YOUR_ID",
                        "values": {
                          "firstName": {
                            "value": "John",
                            "messages": [],
                            "valid": true
                          },
                          "lastName": {
                            "value": "Smith",
                            "messages": [],
                            "valid": true
                          },
                          "email": {
                            "value": "john.smith@example.com",
                            "messages": [],
                            "valid": true
                          }
                        },
                        "valid": true,
                        "metadata": {},
                        "config": {}
                      }
                    ],
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "versionId": "us_vr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n",
                        "sync_client": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.update(\"us_sh_YOUR_ID\", [{\n        id: \"us_rc_YOUR_ID\",\n        versionId: \"us_vr_YOUR_ID\",\n        commitId: \"us_vr_YOUR_ID\",\n        values: {\n            \"firstName\": {\n                value: \"John\",\n                messages: [],\n                valid: true\n            },\n            \"lastName\": {\n                value: \"Smith\",\n                messages: [],\n                valid: true\n            },\n            \"email\": {\n                value: \"john.smith@example.com\",\n                messages: [],\n                valid: true\n            }\n        },\n        valid: true,\n        metadata: {},\n        config: {}\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "id": "us_rc_YOUR_ID",
                          "versionId": "us_vr_YOUR_ID",
                          "commitId": "us_vr_YOUR_ID",
                          "values": {
                            "firstName": {
                              "value": "John",
                              "messages": [],
                              "valid": true
                            },
                            "lastName": {
                              "value": "Smith",
                              "messages": [],
                              "valid": true
                            },
                            "email": {
                              "value": "john.smith@example.com",
                              "messages": [],
                              "valid": true
                            }
                          },
                          "valid": true,
                          "metadata": {},
                          "config": {}
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "versionId": "us_vr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n",
                        "sync_client": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.update(\"us_sh_YOUR_ID\", [{\n        id: \"us_rc_YOUR_ID\",\n        versionId: \"us_vr_YOUR_ID\",\n        commitId: \"us_vr_YOUR_ID\",\n        values: {\n            \"firstName\": {\n                value: \"John\",\n                messages: [],\n                valid: true\n            },\n            \"lastName\": {\n                value: \"Smith\",\n                messages: [],\n                valid: true\n            },\n            \"email\": {\n                value: \"john.smith@example.com\",\n                messages: [],\n                valid: true\n            }\n        },\n        valid: true,\n        metadata: {},\n        config: {}\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "values": {
                            "string": {}
                          },
                          "id": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n",
                        "sync_client": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.update(\"us_sh_YOUR_ID\", [{\n        id: \"us_rc_YOUR_ID\",\n        versionId: \"us_vr_YOUR_ID\",\n        commitId: \"us_vr_YOUR_ID\",\n        values: {\n            \"firstName\": {\n                value: \"John\",\n                messages: [],\n                valid: true\n            },\n            \"lastName\": {\n                value: \"Smith\",\n                messages: [],\n                valid: true\n            },\n            \"email\": {\n                value: \"john.smith@example.com\",\n                messages: [],\n                valid: true\n            }\n        },\n        valid: true,\n        metadata: {},\n        config: {}\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "values": {
                            "string": {}
                          },
                          "id": "string"
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates existing records in a workbook sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "insert",
                "migratedFromUrlSlugs": ["insert-records"],
                "method": "POST",
                "id": "insert",
                "originalEndpointId": "endpoint_records.insert",
                "name": "Insert records",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/records"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_records:RecordData"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_records:RecordsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/records",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": [
                      {
                        "firstName": {
                          "value": "John",
                          "messages": [],
                          "valid": true
                        },
                        "lastName": {
                          "value": "Smith",
                          "messages": [],
                          "valid": true
                        },
                        "email": {
                          "value": "john.smith@example.com",
                          "messages": [],
                          "valid": true
                        }
                      }
                    ],
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "records": [
                          {
                            "id": "us_rc_YOUR_ID",
                            "values": {
                              "firstName": {
                                "value": "John",
                                "messages": [],
                                "valid": true,
                                "updatedAt": "2023-11-20T16:59:40.286Z"
                              },
                              "lastName": {
                                "value": "Smith",
                                "messages": [],
                                "valid": true,
                                "updatedAt": "2023-11-20T16:59:40.286Z"
                              },
                              "email": {
                                "value": "john.smith@example.com",
                                "messages": [],
                                "valid": true,
                                "updatedAt": "2023-11-20T16:59:40.286Z"
                              }
                            },
                            "valid": true,
                            "metadata": {},
                            "config": {}
                          }
                        ],
                        "counts": {
                          "valid": 1000,
                          "error": 0,
                          "total": 1000
                        },
                        "versionId": "us_vr_YOUR_ID",
                        "commitId": "us_vr_YOUR_ID",
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import CellValue\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n",
                        "sync_client": "from flatfile import CellValue\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.insert(\"us_sh_YOUR_ID\", [{\n        \"firstName\": {\n            value: \"John\",\n            messages: [],\n            valid: true\n        },\n        \"lastName\": {\n            value: \"Smith\",\n            messages: [],\n            valid: true\n        },\n        \"email\": {\n            value: \"john.smith@example.com\",\n            messages: [],\n            valid: true\n        }\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "firstName": {
                            "value": "John",
                            "messages": [],
                            "valid": true
                          },
                          "lastName": {
                            "value": "Smith",
                            "messages": [],
                            "valid": true
                          },
                          "email": {
                            "value": "john.smith@example.com",
                            "messages": [],
                            "valid": true
                          }
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "records": [
                            {
                              "id": "us_rc_YOUR_ID",
                              "values": {
                                "firstName": {
                                  "value": "John",
                                  "messages": [],
                                  "valid": true,
                                  "updatedAt": "2023-11-20T16:59:40.286Z"
                                },
                                "lastName": {
                                  "value": "Smith",
                                  "messages": [],
                                  "valid": true,
                                  "updatedAt": "2023-11-20T16:59:40.286Z"
                                },
                                "email": {
                                  "value": "john.smith@example.com",
                                  "messages": [],
                                  "valid": true,
                                  "updatedAt": "2023-11-20T16:59:40.286Z"
                                }
                              },
                              "valid": true,
                              "metadata": {},
                              "config": {}
                            }
                          ],
                          "counts": {
                            "valid": 1000,
                            "error": 0,
                            "total": 1000
                          },
                          "versionId": "us_vr_YOUR_ID",
                          "commitId": "us_vr_YOUR_ID",
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import CellValue\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n",
                        "sync_client": "from flatfile import CellValue\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.insert(\"us_sh_YOUR_ID\", [{\n        \"firstName\": {\n            value: \"John\",\n            messages: [],\n            valid: true\n        },\n        \"lastName\": {\n            value: \"Smith\",\n            messages: [],\n            valid: true\n        },\n        \"email\": {\n            value: \"john.smith@example.com\",\n            messages: [],\n            valid: true\n        }\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import CellValue\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n",
                        "sync_client": "from flatfile import CellValue\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.insert(\"us_sh_YOUR_ID\", [{\n        \"firstName\": {\n            value: \"John\",\n            messages: [],\n            valid: true\n        },\n        \"lastName\": {\n            value: \"Smith\",\n            messages: [],\n            valid: true\n        },\n        \"email\": {\n            value: \"john.smith@example.com\",\n            messages: [],\n            valid: true\n        }\n    }]);\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Adds records to a workbook sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-records"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_records.delete",
                "name": "Delete records",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/records"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "A list of record IDs to delete. Maximum of 100 allowed.",
                    "key": "ids",
                    "type": {
                      "type": "id",
                      "value": "type_commons:RecordId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/records",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {
                      "ids": "us_rc_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.delete(\"us_sh_YOUR_ID\", {\n    ids: \"us_rc_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {
                      "ids": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.delete(\"us_sh_YOUR_ID\", {\n    ids: \"us_rc_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/records",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {
                      "ids": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.delete(\"us_sh_YOUR_ID\", {\n    ids: \"us_rc_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes records from a workbook sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "find-and-replace",
                "migratedFromUrlSlugs": ["finds-and-replaces-field-values-matching-search-criteria"],
                "method": "PUT",
                "id": "findAndReplace",
                "originalEndpointId": "endpoint_records.findAndReplace",
                "name": "Finds and replaces field values matching search criteria\n",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/find-replace"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "filter",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Filter"
                      }
                    }
                  },
                  {
                    "description": "Name of field by which to filter records",
                    "key": "filterField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:FilterField"
                      }
                    }
                  },
                  {
                    "key": "searchValue",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchValue"
                      }
                    }
                  },
                  {
                    "key": "searchField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchField"
                      }
                    }
                  },
                  {
                    "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records",
                    "key": "ids",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  },
                  {
                    "description": "An FFQL query used to filter the result set",
                    "key": "q",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "A value to find for a given field in a sheet. For exact matches, wrap the value in double quotes (\"Bob\")",
                        "key": "find",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_records:CellValueUnion"
                          }
                        }
                      },
                      {
                        "description": "The value to replace found values with",
                        "key": "replace",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_records:CellValueUnion"
                          }
                        }
                      },
                      {
                        "description": "A unique key used to identify a field in a sheet",
                        "key": "fieldKey",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_versions:VersionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/find-replace",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "fieldKey": "email"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "versionId": "us_vr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.records.find_and_replace(\n    sheet_id=\"us_sh_YOUR_ID\",\n    field_key=\"email\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.find_and_replace(\n    sheet_id=\"us_sh_YOUR_ID\",\n    field_key=\"email\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.findAndReplace(\"us_sh_YOUR_ID\", {\n    fieldKey: \"email\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "fieldKey": "email"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "versionId": "us_vr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Searches for all values that match the 'find' value (globally or for a specific field via 'fieldKey') and replaces them with the 'replace' value. Wrap 'find' value in double quotes for exact match (\"\"). Returns a commitId for the updated records",
                "authed": true
              }
            ],
            "types": [
              "type_records:RecordsResponse",
              "type_records:RecordsResponseData",
              "type_records:GetRecordsResponse",
              "type_records:GetRecordsResponseData",
              "type_records:FieldRecordCounts",
              "type_records:RecordCounts",
              "type_records:RecordsWithLinks",
              "type_records:RecordWithLinks",
              "type_records:RecordDataWithLinks",
              "type_records:CellValueWithLinks",
              "type_records:RecordBase",
              "type_records:Records",
              "type_records:Record",
              "type_records:RecordData",
              "type_records:CellValue",
              "type_records:CellValueUnion",
              "type_records:DiffRecordsResponse",
              "type_records:DiffRecords",
              "type_records:RecordConfig",
              "type_records:CellConfig",
              "type_records:DiffRecord",
              "type_records:DiffData",
              "type_records:DiffValue",
              "type_records:ValidationMessage",
              "type_records:ValidationType",
              "type_records:ValidationSource"
            ],
            "subpackages": [],
            "urlSlug": "records",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_roles": {
            "subpackageId": "subpackage_roles",
            "name": "roles",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-roles"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_roles.list",
                "name": "List roles",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/roles"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:ListRolesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/roles",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "name": "string",
                            "accountId": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "List all roles for an account",
                "authed": true
              }
            ],
            "types": [
              "type_roles:ListRolesResponse",
              "type_roles:RoleResponse",
              "type_roles:ListActorRolesResponse",
              "type_roles:ActorRoleResponse",
              "type_roles:AssignActorRoleRequest",
              "type_roles:ResourceIdUnion",
              "type_roles:AssignRoleResponse",
              "type_roles:AssignRoleResponseData"
            ],
            "subpackages": [],
            "urlSlug": "roles",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_secrets": {
            "subpackageId": "subpackage_secrets",
            "name": "secrets",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-secrets"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_secrets.list",
                "name": "List secrets",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/secrets"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "The Environment of the secret.",
                    "key": "environmentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EnvironmentId"
                      }
                    }
                  },
                  {
                    "description": "The Space of the secret.",
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  },
                  {
                    "description": "The Actor of the secret.",
                    "key": "actorId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:ActorIdUnion"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_secrets:SecretsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/secrets",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_sec_YOUR_ID",
                          "name": "My Secret",
                          "value": "Sup3r$ecret/alue!",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "actorId": "us_usr_YOUR_ID"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_sec_YOUR_ID",
                            "name": "My Secret",
                            "value": "Sup3r$ecret/alue!",
                            "environmentId": "us_env_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "actorId": "us_usr_YOUR_ID"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/secrets",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string",
                      "spaceId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/secrets",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string",
                      "spaceId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Fetch all secrets for a given environmentId and optionally apply space overrides",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "upsert",
                "migratedFromUrlSlugs": ["upsert-a-secret"],
                "method": "POST",
                "id": "upsert",
                "originalEndpointId": "endpoint_secrets.upsert",
                "name": "Upsert a Secret",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/secrets"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_secrets:WriteSecret"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_secrets:SecretsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/secrets",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "My Secret",
                      "value": "Sup3r$ecret/alue!",
                      "environmentId": "us_env_YOUR_ID",
                      "spaceId": "us_sp_YOUR_ID",
                      "actorId": "us_usr_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_sec_YOUR_ID",
                          "name": "My Secret",
                          "value": "Sup3r$ecret/alue!",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "actorId": "us_usr_YOUR_ID"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import WriteSecret\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import WriteSecret\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.upsert({\n    name: \"My Secret\",\n    value: \"Sup3r$ecret\\/alue!\",\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    actorId: \"us_usr_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "My Secret",
                        "value": "Sup3r$ecret/alue!",
                        "environmentId": "us_env_YOUR_ID",
                        "spaceId": "us_sp_YOUR_ID",
                        "actorId": "us_usr_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_sec_YOUR_ID",
                            "name": "My Secret",
                            "value": "Sup3r$ecret/alue!",
                            "environmentId": "us_env_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "actorId": "us_usr_YOUR_ID"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/secrets",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import WriteSecret\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import WriteSecret\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.upsert({\n    name: \"My Secret\",\n    value: \"Sup3r$ecret\\/alue!\",\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    actorId: \"us_usr_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string",
                        "value": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/secrets",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import WriteSecret\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import WriteSecret\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.upsert({\n    name: \"My Secret\",\n    value: \"Sup3r$ecret\\/alue!\",\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    actorId: \"us_usr_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string",
                        "value": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Insert or Update a Secret by name for environment or space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-secret-by-it-s-id"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_secrets.delete",
                "name": "Delete a secret by it's Id",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The ID of the secret.",
                      "key": "secretId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SecretId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/secrets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "secretId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_secrets:SecretsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/secrets/us_sec_YOUR_ID",
                    "pathParameters": {
                      "secretId": "us_sec_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_sec_YOUR_ID",
                          "name": "My Secret",
                          "value": "Sup3r$ecret/alue!",
                          "environmentId": "us_env_YOUR_ID",
                          "spaceId": "us_sp_YOUR_ID",
                          "actorId": "us_usr_YOUR_ID"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.delete(\"us_sec_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_sec_YOUR_ID",
                            "name": "My Secret",
                            "value": "Sup3r$ecret/alue!",
                            "environmentId": "us_env_YOUR_ID",
                            "spaceId": "us_sp_YOUR_ID",
                            "actorId": "us_usr_YOUR_ID"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/secrets/:secretId",
                    "pathParameters": {
                      "secretId": ":secretId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.delete(\"us_sec_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/secrets/:secretId",
                    "pathParameters": {
                      "secretId": ":secretId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.delete(\"us_sec_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a specific Secret from the Environment or Space as is the case",
                "authed": true
              }
            ],
            "types": [
              "type_secrets:SecretsResponse",
              "type_secrets:WriteSecret",
              "type_secrets:Secret",
              "type_secrets:SecretName",
              "type_secrets:SecretValue"
            ],
            "subpackages": [],
            "urlSlug": "secrets",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_sheets": {
            "subpackageId": "subpackage_sheets",
            "name": "sheets",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-sheets"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_sheets.list",
                "name": "List sheets",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "ID of workbook",
                    "key": "workbookId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:WorkbookId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_sheets:ListSheetsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets",
                    "pathParameters": {},
                    "queryParameters": {
                      "workbookId": "us_wb_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_sh_YOUR_ID",
                          "workbookId": "us_wb_YOUR_ID",
                          "name": "Contacts",
                          "slug": "contacts",
                          "config": {
                            "name": "Contacts",
                            "slug": "contacts",
                            "fields": [
                              {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              {
                                "key": "email",
                                "type": "string",
                                "label": "Email"
                              }
                            ],
                            "mappingConfidenceThreshold": 0.5
                          },
                          "metadata": {
                            "rowHeaders": [4]
                          },
                          "updatedAt": "2021-08-31T18:00:00Z",
                          "createdAt": "2021-08-31T18:00:00Z"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.list(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.list(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.list({\n    workbookId: \"us_wb_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_sh_YOUR_ID",
                            "workbookId": "us_wb_YOUR_ID",
                            "name": "Contacts",
                            "slug": "contacts",
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            },
                            "metadata": {
                              "rowHeaders": [4]
                            },
                            "updatedAt": "2021-08-31T18:00:00Z",
                            "createdAt": "2021-08-31T18:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns sheets in a workbook",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-sheet"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_sheets.get",
                "name": "Get a sheet",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_sheets:SheetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_sh_YOUR_ID",
                        "workbookId": "us_wb_YOUR_ID",
                        "name": "Contacts",
                        "slug": "contacts",
                        "config": {
                          "name": "Contacts",
                          "slug": "contacts",
                          "fields": [
                            {
                              "key": "firstName",
                              "type": "string",
                              "label": "First Name"
                            },
                            {
                              "key": "lastName",
                              "type": "string",
                              "label": "Last Name"
                            },
                            {
                              "key": "email",
                              "type": "string",
                              "label": "Email"
                            }
                          ],
                          "mappingConfidenceThreshold": 0.5
                        },
                        "metadata": {
                          "rowHeaders": [4]
                        },
                        "updatedAt": "2021-08-31T18:00:00Z",
                        "createdAt": "2021-08-31T18:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.get(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_sh_YOUR_ID",
                          "workbookId": "us_wb_YOUR_ID",
                          "name": "Contacts",
                          "slug": "contacts",
                          "config": {
                            "name": "Contacts",
                            "slug": "contacts",
                            "fields": [
                              {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              {
                                "key": "email",
                                "type": "string",
                                "label": "Email"
                              }
                            ],
                            "mappingConfidenceThreshold": 0.5
                          },
                          "metadata": {
                            "rowHeaders": [4]
                          },
                          "updatedAt": "2021-08-31T18:00:00Z",
                          "createdAt": "2021-08-31T18:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a sheet in a workbook",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-sheet"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_sheets.delete",
                "name": "Delete a sheet",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.delete(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.delete(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.delete(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a specific sheet from a workbook",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "validate",
                "migratedFromUrlSlugs": ["validate-a-sheet"],
                "method": "POST",
                "id": "validate",
                "originalEndpointId": "endpoint_sheets.validate",
                "name": "Validate a sheet",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": "/validate"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/validate",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.validate(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/validate",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.validate(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/validate",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.validate(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Trigger data hooks and validation to run on a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-records-as-csv",
                "migratedFromUrlSlugs": ["download-records-as-a-csv-file"],
                "method": "GET",
                "id": "getRecordsAsCsv",
                "originalEndpointId": "endpoint_sheets.getRecordsAsCsv",
                "name": "Download records as a CSV file",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": "/download"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Deprecated, use `sinceCommitId` instead.",
                    "key": "versionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "availability": "Deprecated"
                  },
                  {
                    "description": "Returns records that were changed in that version in that version and only those records.",
                    "key": "commitId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  },
                  {
                    "description": "Deprecated, use `sinceCommitId` instead.",
                    "key": "sinceVersionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:VersionId"
                      }
                    },
                    "availability": "Deprecated"
                  },
                  {
                    "description": "Returns records that were changed in that version in addition to any records from versions after that version.",
                    "key": "sinceCommitId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  },
                  {
                    "description": "The field to sort the data on.",
                    "key": "sortField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortField"
                      }
                    }
                  },
                  {
                    "description": "Sort direction - asc (ascending) or desc (descending)",
                    "key": "sortDirection",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortDirection"
                      }
                    }
                  },
                  {
                    "description": "Options to filter records",
                    "key": "filter",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Filter"
                      }
                    }
                  },
                  {
                    "description": "The field to filter the data on.",
                    "key": "filterField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:FilterField"
                      }
                    }
                  },
                  {
                    "description": "The value to search for data on.",
                    "key": "searchValue",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchValue"
                      }
                    }
                  },
                  {
                    "description": "The field to search for data on.",
                    "key": "searchField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchField"
                      }
                    }
                  },
                  {
                    "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records",
                    "key": "ids",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:RecordId"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "fileDownload"
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/sheets/:sheetId/download",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {
                      "versionId": "string",
                      "commitId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "filename",
                      "value": "<filename>"
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns records from a sheet in a workbook as a csv file",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-record-counts",
                "method": "GET",
                "id": "getRecordCounts",
                "originalEndpointId": "endpoint_sheets.getRecordCounts",
                "name": "Get record counts",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": "/counts"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Returns records that were changed in that version and only those records.",
                    "key": "versionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Deprecated, use `sinceCommitId` instead.",
                    "key": "sinceVersionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:VersionId"
                      }
                    },
                    "availability": "Deprecated"
                  },
                  {
                    "description": "Returns records that were changed in that version in addition to any records from versions after that version.",
                    "key": "commitId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  },
                  {
                    "description": "Listing a commit ID here will return all records since the specified commit.",
                    "key": "sinceCommitId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:CommitId"
                      }
                    }
                  },
                  {
                    "description": "Options to filter records",
                    "key": "filter",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Filter"
                      }
                    }
                  },
                  {
                    "description": "The field to filter the data on.",
                    "key": "filterField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:FilterField"
                      }
                    }
                  },
                  {
                    "description": "The value to search for data on.",
                    "key": "searchValue",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchValue"
                      }
                    }
                  },
                  {
                    "description": "The field to search for data on.",
                    "key": "searchField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchField"
                      }
                    }
                  },
                  {
                    "description": "If true, the counts for each field will also be returned",
                    "key": "byField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "An FFQL query used to filter the result set to be counted",
                    "key": "q",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_sheets:RecordCountsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/counts",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {
                      "versionId": "us_vr_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "counts": {
                          "valid": 1000,
                          "error": 0,
                          "total": 1000
                        },
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.get_record_counts(\n    sheet_id=\"us_sh_YOUR_ID\",\n    version_id=\"us_vr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get_record_counts(\n    sheet_id=\"us_sh_YOUR_ID\",\n    version_id=\"us_vr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.getRecordCounts(\"us_sh_YOUR_ID\", {\n    versionId: \"us_vr_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "counts": {
                            "valid": 1000,
                            "error": 0,
                            "total": 1000
                          },
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns counts of records from a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-sheet-commits",
                "migratedFromUrlSlugs": ["get-commit-versions-for-a-sheet"],
                "method": "GET",
                "id": "getSheetCommits",
                "originalEndpointId": "endpoint_sheets.getSheetCommits",
                "name": "Get commit versions for a sheet",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": "/commits"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "If true, only return commits that have been completed. If false, only return commits that have not been completed. If not provided, return all commits.",
                    "key": "completed",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commits:ListCommitsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/commits",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_vr_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "createdBy": "us_usr_YOUR_ID",
                          "createdAt": "2019-08-24T14:15:22Z"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.get_sheet_commits(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get_sheet_commits(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.getSheetCommits(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_vr_YOUR_ID",
                            "sheetId": "us_sh_YOUR_ID",
                            "createdBy": "us_usr_YOUR_ID",
                            "createdAt": "2019-08-24T14:15:22Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns the commit versions for a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "lock-sheet",
                "migratedFromUrlSlugs": ["lock-a-sheet"],
                "method": "POST",
                "id": "lockSheet",
                "originalEndpointId": "endpoint_sheets.lockSheet",
                "name": "Lock a sheet",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": "/lock"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/lock",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.lockSheet(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/lock",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.lockSheet(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/lock",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.lockSheet(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Locks a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "unlock-sheet",
                "migratedFromUrlSlugs": ["unlock-a-sheet"],
                "method": "POST",
                "id": "unlockSheet",
                "originalEndpointId": "endpoint_sheets.unlockSheet",
                "name": "Unlock a sheet",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": "/unlock"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/unlock",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.unlockSheet(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/unlock",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.unlockSheet(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId/unlock",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.unlockSheet(\"us_sh_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Removes a lock from a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-cell-values",
                "migratedFromUrlSlugs": ["get-record-cells-by-field"],
                "method": "GET",
                "id": "getCellValues",
                "originalEndpointId": "endpoint_sheets.getCellValues",
                "name": "Get record cells by field",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": "/cells"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "fieldKey",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:FieldKey"
                      }
                    }
                  },
                  {
                    "key": "sortField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortField"
                      }
                    }
                  },
                  {
                    "key": "sortDirection",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortDirection"
                      }
                    }
                  },
                  {
                    "key": "filter",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:Filter"
                      }
                    }
                  },
                  {
                    "description": "Name of field by which to filter records",
                    "key": "filterField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:FilterField"
                      }
                    }
                  },
                  {
                    "description": "Number of records to return in a page (default 1000 if pageNumber included)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PageSize"
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of records to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:PageNumber"
                      }
                    }
                  },
                  {
                    "description": "Must be set to true",
                    "key": "distinct",
                    "type": {
                      "type": "id",
                      "value": "type_sheets:Distinct"
                    }
                  },
                  {
                    "key": "includeCounts",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_sheets:IncludeCounts"
                      }
                    }
                  },
                  {
                    "description": "A value to find for a given field in a sheet. Wrap the value in \"\" for exact match",
                    "key": "searchValue",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SearchValue"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_sheets:CellsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID/cells",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {
                      "distinct": true,
                      "fieldKey": "firstName",
                      "sortField": "firstName",
                      "sortDirection": "asc",
                      "filter": "valid"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "firstName": [
                          {
                            "value": "Mike",
                            "valid": true,
                            "counts": {
                              "total": 1,
                              "valid": 1,
                              "error": 0
                            }
                          },
                          {
                            "value": "Jordan",
                            "valid": true,
                            "counts": {
                              "total": 1,
                              "valid": 1,
                              "error": 0
                            }
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Filter, SortDirection\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.get_cell_values(\n    sheet_id=\"us_sh_YOUR_ID\",\n    distinct=True,\n    field_key=\"firstName\",\n    sort_field=\"firstName\",\n    sort_direction=SortDirection.ASC,\n    filter=Filter.VALID,\n)\n",
                        "sync_client": "from flatfile import Filter, SortDirection\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get_cell_values(\n    sheet_id=\"us_sh_YOUR_ID\",\n    distinct=True,\n    field_key=\"firstName\",\n    sort_field=\"firstName\",\n    sort_direction=SortDirection.ASC,\n    filter=Filter.VALID,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.cells.getValues(\"us_sh_YOUR_ID\", {\n    fieldKey: \"firstName\",\n    sortField: \"firstName\",\n    sortDirection: Flatfile.SortDirection.Asc,\n    filter: Flatfile.Filter.Valid\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "firstName": [
                            {
                              "value": "Mike",
                              "valid": true,
                              "counts": {
                                "total": 1,
                                "valid": 1,
                                "error": 0
                              }
                            },
                            {
                              "value": "Jordan",
                              "valid": true,
                              "counts": {
                                "total": 1,
                                "valid": 1,
                                "error": 0
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns record cell values grouped by all fields in the sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-sheet",
                "migratedFromUrlSlugs": ["update-a-sheet"],
                "method": "PATCH",
                "id": "updateSheet",
                "originalEndpointId": "endpoint_sheets.updateSheet",
                "name": "Update a sheet",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of sheet",
                      "key": "sheetId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SheetId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/sheets"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "sheetId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_sheets:SheetUpdateRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_sheets:SheetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/sheets/us_sh_YOUR_ID",
                    "pathParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "New Sheet Name",
                      "metadata": {
                        "rowHeaders": [6]
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_sh_YOUR_ID",
                        "workbookId": "us_wb_YOUR_ID",
                        "name": "New Sheet Name",
                        "slug": "contacts",
                        "config": {
                          "name": "Contacts",
                          "slug": "contacts",
                          "fields": [
                            {
                              "key": "firstName",
                              "type": "string",
                              "label": "First Name"
                            },
                            {
                              "key": "lastName",
                              "type": "string",
                              "label": "Last Name"
                            },
                            {
                              "key": "email",
                              "type": "string",
                              "label": "Email"
                            }
                          ],
                          "mappingConfidenceThreshold": 0.5
                        },
                        "metadata": {
                          "rowHeaders": [6]
                        },
                        "updatedAt": "2021-08-31T18:00:00Z",
                        "createdAt": "2021-08-31T18:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n",
                        "sync_client": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.updateSheet(\"us_sh_YOUR_ID\", {\n    name: \"New Sheet Name\",\n    metadata: {\n        \"rowHeaders\": [\n            6\n        ]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "New Sheet Name",
                        "metadata": {
                          "rowHeaders": [6]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_sh_YOUR_ID",
                          "workbookId": "us_wb_YOUR_ID",
                          "name": "New Sheet Name",
                          "slug": "contacts",
                          "config": {
                            "name": "Contacts",
                            "slug": "contacts",
                            "fields": [
                              {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              {
                                "key": "email",
                                "type": "string",
                                "label": "Email"
                              }
                            ],
                            "mappingConfidenceThreshold": 0.5
                          },
                          "metadata": {
                            "rowHeaders": [6]
                          },
                          "updatedAt": "2021-08-31T18:00:00Z",
                          "createdAt": "2021-08-31T18:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n",
                        "sync_client": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.updateSheet(\"us_sh_YOUR_ID\", {\n    name: \"New Sheet Name\",\n    metadata: {\n        \"rowHeaders\": [\n            6\n        ]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/sheets/:sheetId",
                    "pathParameters": {
                      "sheetId": ":sheetId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n",
                        "sync_client": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.updateSheet(\"us_sh_YOUR_ID\", {\n    name: \"New Sheet Name\",\n    metadata: {\n        \"rowHeaders\": [\n            6\n        ]\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates Sheet",
                "authed": true
              }
            ],
            "types": [
              "type_sheets:ListSheetsResponse",
              "type_sheets:SheetResponse",
              "type_sheets:Sheet",
              "type_sheets:SheetConfig",
              "type_sheets:SheetConfigUpdate",
              "type_sheets:SheetConstraint",
              "type_sheets:ExternalSheetConstraint",
              "type_sheets:CompositeUniqueConstraint",
              "type_sheets:CompositeUniqueConstraintStrategy",
              "type_sheets:SheetUpdate",
              "type_sheets:SheetUpdateRequest",
              "type_sheets:SheetConfigOrUpdate",
              "type_sheets:RecordCountsResponse",
              "type_sheets:RecordCountsResponseData",
              "type_sheets:SheetAccess",
              "type_sheets:CellsResponse",
              "type_sheets:CellsResponseData",
              "type_sheets:CellValueWithCounts",
              "type_sheets:FieldKey",
              "type_sheets:Distinct",
              "type_sheets:IncludeCounts"
            ],
            "subpackages": [],
            "urlSlug": "sheets",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_snapshots": {
            "subpackageId": "subpackage_snapshots",
            "name": "snapshots",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-snapshot",
                "migratedFromUrlSlugs": ["create-a-snapshot"],
                "method": "POST",
                "id": "createSnapshot",
                "originalEndpointId": "endpoint_snapshots.createSnapshot",
                "name": "Create a snapshot",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/snapshots"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "ID of sheet",
                        "key": "sheetId",
                        "valueType": {
                          "type": "id",
                          "value": "type_commons:SheetId"
                        }
                      },
                      {
                        "description": "Label for the snapshot",
                        "key": "label",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_snapshots:SnapshotResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/snapshots",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "sheetId": "us_sh_YOUR_ID",
                      "label": "My snapshot"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_ss_YOUR_ID",
                        "sheetId": "us_sh_YOUR_ID",
                        "label": "My snapshot",
                        "summary": {
                          "createdSince": {
                            "total": 0
                          },
                          "updatedSince": {
                            "total": 5,
                            "byField": {
                              "lastName": 5
                            }
                          },
                          "deletedSince": {
                            "total": 5,
                            "byField": {
                              "firstName": 1
                            }
                          },
                          "schemaDiff": {
                            "firstName": "added",
                            "lastName": "removed",
                            "email": "unchanged"
                          },
                          "config": {
                            "name": "Contacts",
                            "slug": "contacts",
                            "fields": [
                              {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              {
                                "key": "email",
                                "type": "string",
                                "label": "Email"
                              }
                            ],
                            "mappingConfidenceThreshold": 0.5
                          }
                        },
                        "createdAt": "2023-01-01T00:00:00Z",
                        "createdBy": "us_usr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.createSnapshot({\n    sheetId: \"us_sh_YOUR_ID\",\n    label: \"My snapshot\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "us_sh_YOUR_ID",
                        "label": "My snapshot"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_ss_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "label": "My snapshot",
                          "summary": {
                            "createdSince": {
                              "total": 0
                            },
                            "updatedSince": {
                              "total": 5,
                              "byField": {
                                "lastName": 5
                              }
                            },
                            "deletedSince": {
                              "total": 5,
                              "byField": {
                                "firstName": 1
                              }
                            },
                            "schemaDiff": {
                              "firstName": "added",
                              "lastName": "removed",
                              "email": "unchanged"
                            },
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            }
                          },
                          "createdAt": "2023-01-01T00:00:00Z",
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.createSnapshot({\n    sheetId: \"us_sh_YOUR_ID\",\n    label: \"My snapshot\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.createSnapshot({\n    sheetId: \"us_sh_YOUR_ID\",\n    label: \"My snapshot\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates a snapshot of a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list-snapshots",
                "method": "GET",
                "id": "listSnapshots",
                "originalEndpointId": "endpoint_snapshots.listSnapshots",
                "name": "List snapshots",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/snapshots"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "ID of sheet",
                    "key": "sheetId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:SheetId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_snapshots:SnapshotsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/snapshots",
                    "pathParameters": {},
                    "queryParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_ss_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "label": "My snapshot",
                          "summary": {
                            "createdSince": {
                              "total": 0
                            },
                            "updatedSince": {
                              "total": 5,
                              "byField": {
                                "lastName": 5
                              }
                            },
                            "deletedSince": {
                              "total": 5,
                              "byField": {
                                "firstName": 1
                              }
                            },
                            "schemaDiff": {
                              "firstName": "added",
                              "lastName": "removed",
                              "email": "unchanged"
                            },
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            }
                          },
                          "createdAt": "2023-01-01T00:00:00Z",
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.listSnapshots({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_ss_YOUR_ID",
                            "sheetId": "us_sh_YOUR_ID",
                            "label": "My snapshot",
                            "summary": {
                              "createdSince": {
                                "total": 0
                              },
                              "updatedSince": {
                                "total": 5,
                                "byField": {
                                  "lastName": 5
                                }
                              },
                              "deletedSince": {
                                "total": 5,
                                "byField": {
                                  "firstName": 1
                                }
                              },
                              "schemaDiff": {
                                "firstName": "added",
                                "lastName": "removed",
                                "email": "unchanged"
                              },
                              "config": {
                                "name": "Contacts",
                                "slug": "contacts",
                                "fields": [
                                  {
                                    "key": "firstName",
                                    "type": "string",
                                    "label": "First Name"
                                  },
                                  {
                                    "key": "lastName",
                                    "type": "string",
                                    "label": "Last Name"
                                  },
                                  {
                                    "key": "email",
                                    "type": "string",
                                    "label": "Email"
                                  }
                                ],
                                "mappingConfidenceThreshold": 0.5
                              }
                            },
                            "createdAt": "2023-01-01T00:00:00Z",
                            "createdBy": "us_usr_YOUR_ID"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots",
                    "pathParameters": {},
                    "queryParameters": {
                      "sheetId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.listSnapshots({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots",
                    "pathParameters": {},
                    "queryParameters": {
                      "sheetId": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.listSnapshots({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "List all snapshots of a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-snapshot",
                "migratedFromUrlSlugs": ["get-a-snapshot"],
                "method": "GET",
                "id": "getSnapshot",
                "originalEndpointId": "endpoint_snapshots.getSnapshot",
                "name": "Get a snapshot",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of snapshot",
                      "key": "snapshotId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SnapshotId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/snapshots"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "snapshotId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Whether to include a summary in the snapshot response",
                    "key": "includeSummary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_snapshots:SnapshotResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/snapshots/us_ss_YOUR_ID",
                    "pathParameters": {
                      "snapshotId": "us_ss_YOUR_ID"
                    },
                    "queryParameters": {
                      "includeSummary": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_ss_YOUR_ID",
                        "sheetId": "us_sh_YOUR_ID",
                        "label": "My snapshot",
                        "summary": {
                          "createdSince": {
                            "total": 0
                          },
                          "updatedSince": {
                            "total": 5,
                            "byField": {
                              "lastName": 5
                            }
                          },
                          "deletedSince": {
                            "total": 5,
                            "byField": {
                              "firstName": 1
                            }
                          },
                          "schemaDiff": {
                            "firstName": "added",
                            "lastName": "removed",
                            "email": "unchanged"
                          },
                          "config": {
                            "name": "Contacts",
                            "slug": "contacts",
                            "fields": [
                              {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              {
                                "key": "email",
                                "type": "string",
                                "label": "Email"
                              }
                            ],
                            "mappingConfidenceThreshold": 0.5
                          }
                        },
                        "createdAt": "2023-01-01T00:00:00Z",
                        "createdBy": "us_usr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshot(\"us_ss_YOUR_ID\", {\n    includeSummary: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_ss_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "label": "My snapshot",
                          "summary": {
                            "createdSince": {
                              "total": 0
                            },
                            "updatedSince": {
                              "total": 5,
                              "byField": {
                                "lastName": 5
                              }
                            },
                            "deletedSince": {
                              "total": 5,
                              "byField": {
                                "firstName": 1
                              }
                            },
                            "schemaDiff": {
                              "firstName": "added",
                              "lastName": "removed",
                              "email": "unchanged"
                            },
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            }
                          },
                          "createdAt": "2023-01-01T00:00:00Z",
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {
                      "includeSummary": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshot(\"us_ss_YOUR_ID\", {\n    includeSummary: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {
                      "includeSummary": true
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshot(\"us_ss_YOUR_ID\", {\n    includeSummary: true\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Gets a snapshot of a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-snapshot",
                "migratedFromUrlSlugs": ["delete-a-snapshot"],
                "method": "DELETE",
                "id": "deleteSnapshot",
                "originalEndpointId": "endpoint_snapshots.deleteSnapshot",
                "name": "Delete a snapshot",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of snapshot",
                      "key": "snapshotId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SnapshotId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/snapshots"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "snapshotId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/snapshots/us_ss_YOUR_ID",
                    "pathParameters": {
                      "snapshotId": "us_ss_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.deleteSnapshot(\"us_ss_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.deleteSnapshot(\"us_ss_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.deleteSnapshot(\"us_ss_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a snapshot of a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "restore-snapshot",
                "migratedFromUrlSlugs": ["restore-a-snapshot"],
                "method": "POST",
                "id": "restoreSnapshot",
                "originalEndpointId": "endpoint_snapshots.restoreSnapshot",
                "name": "Restore a snapshot",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of snapshot",
                      "key": "snapshotId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SnapshotId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/snapshots"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "snapshotId"
                    },
                    {
                      "type": "literal",
                      "value": "/restore"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_snapshots:RestoreOptions"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_snapshots:SnapshotResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/snapshots/us_ss_YOUR_ID/restore",
                    "pathParameters": {
                      "snapshotId": "us_ss_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "created": true,
                      "updated": true,
                      "deleted": true
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_ss_YOUR_ID",
                        "sheetId": "us_sh_YOUR_ID",
                        "label": "My snapshot",
                        "summary": {
                          "createdSince": {
                            "total": 0
                          },
                          "updatedSince": {
                            "total": 5,
                            "byField": {
                              "lastName": 5
                            }
                          },
                          "deletedSince": {
                            "total": 5,
                            "byField": {
                              "firstName": 1
                            }
                          },
                          "schemaDiff": {
                            "firstName": "added",
                            "lastName": "removed",
                            "email": "unchanged"
                          },
                          "config": {
                            "name": "Contacts",
                            "slug": "contacts",
                            "fields": [
                              {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              {
                                "key": "email",
                                "type": "string",
                                "label": "Email"
                              }
                            ],
                            "mappingConfidenceThreshold": 0.5
                          }
                        },
                        "createdAt": "2023-01-01T00:00:00Z",
                        "createdBy": "us_usr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import RestoreOptions\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n",
                        "sync_client": "from flatfile import RestoreOptions\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.restoreSnapshot(\"us_ss_YOUR_ID\", {\n    created: true,\n    updated: true,\n    deleted: true\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "created": true,
                        "updated": true,
                        "deleted": true
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_ss_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "label": "My snapshot",
                          "summary": {
                            "createdSince": {
                              "total": 0
                            },
                            "updatedSince": {
                              "total": 5,
                              "byField": {
                                "lastName": 5
                              }
                            },
                            "deletedSince": {
                              "total": 5,
                              "byField": {
                                "firstName": 1
                              }
                            },
                            "schemaDiff": {
                              "firstName": "added",
                              "lastName": "removed",
                              "email": "unchanged"
                            },
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            }
                          },
                          "createdAt": "2023-01-01T00:00:00Z",
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId/restore",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import RestoreOptions\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n",
                        "sync_client": "from flatfile import RestoreOptions\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.restoreSnapshot(\"us_ss_YOUR_ID\", {\n    created: true,\n    updated: true,\n    deleted: true\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json"
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId/restore",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import RestoreOptions\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n",
                        "sync_client": "from flatfile import RestoreOptions\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.restoreSnapshot(\"us_ss_YOUR_ID\", {\n    created: true,\n    updated: true,\n    deleted: true\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json"
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Restores a snapshot of a sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-snapshot-records",
                "migratedFromUrlSlugs": ["get-records-from-a-snapshot"],
                "method": "GET",
                "id": "getSnapshotRecords",
                "originalEndpointId": "endpoint_snapshots.getSnapshotRecords",
                "name": "Get records from a snapshot",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of snapshot",
                      "key": "snapshotId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SnapshotId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/snapshots"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "snapshotId"
                    },
                    {
                      "type": "literal",
                      "value": "/records"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Number of records to return in a page",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of records to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter records by change type",
                    "key": "changeType",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_snapshots:ChangeType"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_records:DiffRecordsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/snapshots/us_ss_YOUR_ID/records",
                    "pathParameters": {
                      "snapshotId": "us_ss_YOUR_ID"
                    },
                    "queryParameters": {
                      "pageSize": 10,
                      "pageNumber": 1,
                      "changeType": "createdSince"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_rc_YOUR_ID",
                          "values": {
                            "firstName": {
                              "snapshotValue": "John",
                              "value": "Johns"
                            },
                            "lastName": {
                              "snapshotValue": "Doe",
                              "value": "Does"
                            },
                            "email": {
                              "snapshotValue": "john.doe@example.com",
                              "value": "john.doe@example.com"
                            }
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import ChangeType\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n",
                        "sync_client": "from flatfile import ChangeType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshotRecords(\"us_ss_YOUR_ID\", {\n    pageSize: 10,\n    pageNumber: 1,\n    changeType: Flatfile.ChangeType.CreatedSince\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_rc_YOUR_ID",
                            "values": {
                              "firstName": {
                                "snapshotValue": "John",
                                "value": "Johns"
                              },
                              "lastName": {
                                "snapshotValue": "Doe",
                                "value": "Does"
                              },
                              "email": {
                                "snapshotValue": "john.doe@example.com",
                                "value": "john.doe@example.com"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId/records",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {
                      "pageSize": 0,
                      "pageNumber": 0
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import ChangeType\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n",
                        "sync_client": "from flatfile import ChangeType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshotRecords(\"us_ss_YOUR_ID\", {\n    pageSize: 10,\n    pageNumber: 1,\n    changeType: Flatfile.ChangeType.CreatedSince\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/snapshots/:snapshotId/records",
                    "pathParameters": {
                      "snapshotId": ":snapshotId"
                    },
                    "queryParameters": {
                      "pageSize": 0,
                      "pageNumber": 0
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import ChangeType\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n",
                        "sync_client": "from flatfile import ChangeType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshotRecords(\"us_ss_YOUR_ID\", {\n    pageSize: 10,\n    pageNumber: 1,\n    changeType: Flatfile.ChangeType.CreatedSince\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Gets records from a snapshot of a sheet",
                "authed": true
              }
            ],
            "types": [
              "type_snapshots:SnapshotResponse",
              "type_snapshots:SnapshotsResponse",
              "type_snapshots:Snapshot",
              "type_snapshots:SnapshotSummary",
              "type_snapshots:RestoreOptions",
              "type_snapshots:SummarySection",
              "type_snapshots:ChangeType",
              "type_snapshots:SchemaDiffRecord",
              "type_snapshots:SchemaDiffData",
              "type_snapshots:SchemaDiffEnum"
            ],
            "subpackages": [],
            "urlSlug": "snapshots",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_spaces": {
            "subpackageId": "subpackage_spaces",
            "name": "spaces",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-spaces"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_spaces.list",
                "name": "List spaces",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "The ID of the environment.",
                    "key": "environmentId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:EnvironmentId"
                      }
                    }
                  },
                  {
                    "description": "Number of spaces to return in a page (default 10)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of records to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Search query for spaces",
                    "key": "search",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Search by namespace",
                    "key": "namespace",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Flag to include archived spaces",
                    "key": "archived",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "Field to sort spaces by",
                    "key": "sortField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_spaces:GetSpacesSortField"
                      }
                    }
                  },
                  {
                    "description": "Direction of sorting",
                    "key": "sortDirection",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortDirection"
                      }
                    }
                  },
                  {
                    "description": "Flag for collaborative (project) spaces",
                    "key": "isCollaborative",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:ListSpacesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "us_env_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      },
                      "data": [
                        {
                          "id": "us_sp_YOUR_ID",
                          "name": "My First Worbook",
                          "displayOrder": 1,
                          "createdAt": "2021-01-01T00:00:00.000Z",
                          "updatedAt": "2021-01-01T00:00:00.000Z",
                          "lastActivityAt": "2021-01-01T00:00:00.000Z",
                          "createdByUserId": "us_usr_YOUR_ID",
                          "workbooksCount": 1,
                          "filesCount": 1,
                          "isCollaborative": true,
                          "upgradedAt": "2021-01-01T00:00:00.000Z",
                          "guestAuthentication": ["magic_link", "shared_link"],
                          "environmentId": "us_env_YOUR_ID",
                          "primaryWorkbookId": "us_wb_YOUR_ID",
                          "labels": [],
                          "metadata": null
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        },
                        "data": [
                          {
                            "id": "us_sp_YOUR_ID",
                            "name": "My First Worbook",
                            "displayOrder": 1,
                            "createdAt": "2021-01-01T00:00:00.000Z",
                            "updatedAt": "2021-01-01T00:00:00.000Z",
                            "lastActivityAt": "2021-01-01T00:00:00.000Z",
                            "createdByUserId": "us_usr_YOUR_ID",
                            "workbooksCount": 1,
                            "filesCount": 1,
                            "isCollaborative": true,
                            "upgradedAt": "2021-01-01T00:00:00.000Z",
                            "guestAuthentication": ["magic_link", "shared_link"],
                            "environmentId": "us_env_YOUR_ID",
                            "primaryWorkbookId": "us_wb_YOUR_ID",
                            "labels": [],
                            "metadata": null
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {
                      "environmentId": "string",
                      "pageSize": 0
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns all spaces for an account or environment",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-space"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_spaces.create",
                "name": "Create a space",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:SpaceConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:SpaceResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "My First Workbook",
                      "displayOrder": 1,
                      "environmentId": "us_env_YOUR_ID",
                      "primaryWorkbookId": "us_wb_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_sp_YOUR_ID",
                        "name": "My First Worbook",
                        "displayOrder": 1,
                        "createdAt": "2021-01-01T00:00:00.000Z",
                        "updatedAt": "2021-01-01T00:00:00.000Z",
                        "lastActivityAt": "2021-01-01T00:00:00.000Z",
                        "createdByUserId": "us_usr_YOUR_ID",
                        "workbooksCount": 1,
                        "filesCount": 1,
                        "isCollaborative": true,
                        "upgradedAt": "2021-01-01T00:00:00.000Z",
                        "guestAuthentication": ["magic_link", "shared_link"],
                        "environmentId": "us_env_YOUR_ID",
                        "primaryWorkbookId": "us_wb_YOUR_ID",
                        "labels": [],
                        "metadata": null
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SpaceConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.create({\n    name: \"My First Workbook\",\n    displayOrder: 1,\n    environmentId: \"us_env_YOUR_ID\",\n    primaryWorkbookId: \"us_wb_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "My First Workbook",
                        "displayOrder": 1,
                        "environmentId": "us_env_YOUR_ID",
                        "primaryWorkbookId": "us_wb_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_sp_YOUR_ID",
                          "name": "My First Worbook",
                          "displayOrder": 1,
                          "createdAt": "2021-01-01T00:00:00.000Z",
                          "updatedAt": "2021-01-01T00:00:00.000Z",
                          "lastActivityAt": "2021-01-01T00:00:00.000Z",
                          "createdByUserId": "us_usr_YOUR_ID",
                          "workbooksCount": 1,
                          "filesCount": 1,
                          "isCollaborative": true,
                          "upgradedAt": "2021-01-01T00:00:00.000Z",
                          "guestAuthentication": ["magic_link", "shared_link"],
                          "environmentId": "us_env_YOUR_ID",
                          "primaryWorkbookId": "us_wb_YOUR_ID",
                          "labels": [],
                          "metadata": null
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SpaceConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.create({\n    name: \"My First Workbook\",\n    displayOrder: 1,\n    environmentId: \"us_env_YOUR_ID\",\n    primaryWorkbookId: \"us_wb_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SpaceConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                        "sync_client": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.create({\n    name: \"My First Workbook\",\n    displayOrder: 1,\n    environmentId: \"us_env_YOUR_ID\",\n    primaryWorkbookId: \"us_wb_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates a new space based on an existing Space Config",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-space"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_spaces.get",
                "name": "Get a space",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to return",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:SpaceResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_sp_YOUR_ID",
                        "name": "My First Worbook",
                        "displayOrder": 1,
                        "createdAt": "2021-01-01T00:00:00.000Z",
                        "updatedAt": "2021-01-01T00:00:00.000Z",
                        "lastActivityAt": "2021-01-01T00:00:00.000Z",
                        "createdByUserId": "us_usr_YOUR_ID",
                        "workbooksCount": 1,
                        "filesCount": 1,
                        "isCollaborative": true,
                        "upgradedAt": "2021-01-01T00:00:00.000Z",
                        "guestAuthentication": ["magic_link", "shared_link"],
                        "environmentId": "us_env_YOUR_ID",
                        "primaryWorkbookId": "us_wb_YOUR_ID",
                        "labels": [],
                        "metadata": null
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.get(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_sp_YOUR_ID",
                          "name": "My First Worbook",
                          "displayOrder": 1,
                          "createdAt": "2021-01-01T00:00:00.000Z",
                          "updatedAt": "2021-01-01T00:00:00.000Z",
                          "lastActivityAt": "2021-01-01T00:00:00.000Z",
                          "createdByUserId": "us_usr_YOUR_ID",
                          "workbooksCount": 1,
                          "filesCount": 1,
                          "isCollaborative": true,
                          "upgradedAt": "2021-01-01T00:00:00.000Z",
                          "guestAuthentication": ["magic_link", "shared_link"],
                          "environmentId": "us_env_YOUR_ID",
                          "primaryWorkbookId": "us_wb_YOUR_ID",
                          "labels": [],
                          "metadata": null
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.get(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.get(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-space"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_spaces.delete",
                "name": "Delete a space",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to delete",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.delete(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.delete(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.delete(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "bulk-delete",
                "migratedFromUrlSlugs": ["delete-spaces"],
                "method": "DELETE",
                "id": "bulkDelete",
                "originalEndpointId": "endpoint_spaces.bulkDelete",
                "name": "Delete spaces",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "List of ids for the spaces to be deleted",
                    "key": "spaceIds",
                    "type": {
                      "type": "id",
                      "value": "type_commons:SpaceId"
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {
                      "spaceIds": "us_sp_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.bulkDelete({\n    spaceIds: \"us_sp_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {
                      "spaceIds": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.bulkDelete({\n    spaceIds: \"us_sp_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces",
                    "pathParameters": {},
                    "queryParameters": {
                      "spaceIds": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.bulkDelete({\n    spaceIds: \"us_sp_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete multiple spaces by id",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-space"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_spaces.update",
                "name": "Update a space",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to update",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:SpaceConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_spaces:SpaceResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "My Updated Worbook"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_sp_YOUR_ID",
                        "name": "My Updated Worbook",
                        "displayOrder": 1,
                        "createdAt": "2021-01-01T00:00:00.000Z",
                        "updatedAt": "2021-01-01T00:00:00.000Z",
                        "lastActivityAt": "2021-01-01T00:00:00.000Z",
                        "createdByUserId": "us_usr_YOUR_ID",
                        "workbooksCount": 1,
                        "filesCount": 1,
                        "isCollaborative": true,
                        "upgradedAt": "2021-01-01T00:00:00.000Z",
                        "guestAuthentication": ["magic_link", "shared_link"],
                        "environmentId": "us_env_YOUR_ID",
                        "primaryWorkbookId": "us_wb_YOUR_ID",
                        "labels": [],
                        "metadata": null
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SpaceConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n",
                        "sync_client": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.update(\"us_sp_YOUR_ID\", {\n    name: \"My Updated Worbook\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "My Updated Worbook"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_sp_YOUR_ID",
                          "name": "My Updated Worbook",
                          "displayOrder": 1,
                          "createdAt": "2021-01-01T00:00:00.000Z",
                          "updatedAt": "2021-01-01T00:00:00.000Z",
                          "lastActivityAt": "2021-01-01T00:00:00.000Z",
                          "createdByUserId": "us_usr_YOUR_ID",
                          "workbooksCount": 1,
                          "filesCount": 1,
                          "isCollaborative": true,
                          "upgradedAt": "2021-01-01T00:00:00.000Z",
                          "guestAuthentication": ["magic_link", "shared_link"],
                          "environmentId": "us_env_YOUR_ID",
                          "primaryWorkbookId": "us_wb_YOUR_ID",
                          "labels": [],
                          "metadata": null
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SpaceConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n",
                        "sync_client": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.update(\"us_sp_YOUR_ID\", {\n    name: \"My Updated Worbook\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import SpaceConfig\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n",
                        "sync_client": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.update(\"us_sp_YOUR_ID\", {\n    name: \"My Updated Worbook\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a space, to change the name for example",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "archive-space",
                "migratedFromUrlSlugs": ["archives-a-space"],
                "method": "POST",
                "id": "archiveSpace",
                "originalEndpointId": "endpoint_spaces.archiveSpace",
                "name": "Archives a space",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to archive",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": "/archive"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID/archive",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.archiveSpace(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/archive",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.archiveSpace(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/archive",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.archiveSpace(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Sets archivedAt timestamp on a space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "unarchive-space",
                "migratedFromUrlSlugs": ["unarchives-a-space"],
                "method": "POST",
                "id": "unarchiveSpace",
                "originalEndpointId": "endpoint_spaces.unarchiveSpace",
                "name": "Unarchives a space",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of space to unarchive",
                      "key": "spaceId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/spaces"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "spaceId"
                    },
                    {
                      "type": "literal",
                      "value": "/unarchive"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/spaces/us_sp_YOUR_ID/unarchive",
                    "pathParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.unarchiveSpace(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/unarchive",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.unarchiveSpace(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/spaces/:spaceId/unarchive",
                    "pathParameters": {
                      "spaceId": ":spaceId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.unarchiveSpace(\"us_sp_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Sets archivedAt timestamp on a space to null",
                "authed": true
              }
            ],
            "types": [
              "type_spaces:ListSpacesResponse",
              "type_spaces:SpaceResponse",
              "type_spaces:Space",
              "type_spaces:SpaceSize",
              "type_spaces:SpaceConfig",
              "type_spaces:InternalSpaceConfigBase",
              "type_spaces:SpaceSettings",
              "type_spaces:SpaceSidebarConfig",
              "type_spaces:EventTokenResponse",
              "type_spaces:EventToken",
              "type_spaces:GetSpacesSortField",
              "type_spaces:SpaceAccess"
            ],
            "subpackages": [],
            "urlSlug": "spaces",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_users": {
            "subpackageId": "subpackage_users",
            "name": "users",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-users"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_users.list",
                "name": "List users",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Email of guest to return",
                    "key": "email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "String to search for users by name and email",
                    "key": "search",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Field to sort users by",
                    "key": "sortField",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_users:ListUsersSortField"
                      }
                    }
                  },
                  {
                    "description": "Direction of sorting",
                    "key": "sortDirection",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SortDirection"
                      }
                    }
                  },
                  {
                    "description": "Number of users to return in a page (default 20)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of users to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_users:ListUsersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/users",
                    "pathParameters": {},
                    "queryParameters": {
                      "email": "john.smith@example.com"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_usr_YOUR_ID",
                          "email": "john.smith@example.com",
                          "name": "john.smith",
                          "accountId": "us_acc_YOUR_ID",
                          "idp": "FRONTEGG",
                          "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                          "metadata": {},
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "lastSeenAt": "2023-10-30T16:59:45.735Z",
                          "dashboard": 2
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.users.list(\n    email=\"john.smith@example.com\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    email=\"john.smith@example.com\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.users.list({\n    email: \"john.smith@example.com\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_usr_YOUR_ID",
                            "email": "john.smith@example.com",
                            "name": "john.smith",
                            "accountId": "us_acc_YOUR_ID",
                            "idp": "FRONTEGG",
                            "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                            "metadata": {},
                            "createdAt": "2023-10-30T16:59:45.735Z",
                            "updatedAt": "2023-10-30T16:59:45.735Z",
                            "lastSeenAt": "2023-10-30T16:59:45.735Z",
                            "dashboard": 2
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Gets a list of users",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-and-invite",
                "migratedFromUrlSlugs": ["create-and-invite-user"],
                "method": "POST",
                "id": "createAndInvite",
                "originalEndpointId": "endpoint_users.createAndInvite",
                "name": "Create and Invite User",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/invite"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_users:UserCreateAndInviteRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_users:UserWithRolesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/users/invite",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "email": "john.smith@example.com",
                      "name": "John Smith",
                      "actorRoles": [
                        {
                          "roleId": "us_rol_YOUR_ID",
                          "resourceId": "us_acc_YOUR_ID"
                        },
                        {
                          "roleId": "us_rol_YOUR_ID",
                          "resourceId": "us_env_YOUR_ID"
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_usr_YOUR_ID",
                        "email": "john.smith@example.com",
                        "name": "john.smith",
                        "accountId": "us_acc_YOUR_ID",
                        "idp": "FRONTEGG",
                        "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                        "metadata": {},
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z",
                        "lastSeenAt": "2023-10-30T16:59:45.735Z",
                        "dashboard": 2,
                        "actorRoles": [
                          {
                            "id": "us_acr_YOUR_ID",
                            "roleId": "us_rol_YOUR_ID",
                            "actorId": "us_usr_YOUR_ID",
                            "resourceId": "us_acc_YOUR_ID",
                            "createdAt": "2021-01-01T00:00:00Z",
                            "updatedAt": "2021-01-01T00:00:00Z"
                          },
                          {
                            "id": "us_acr_YOUR_ID",
                            "roleId": "us_rol_YOUR_ID",
                            "actorId": "us_ag_YOUR_ID",
                            "resourceId": "us_env_YOUR_ID",
                            "createdAt": "2021-01-01T00:00:00Z",
                            "updatedAt": "2021-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import AssignActorRoleRequest, UserCreateAndInviteRequest\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.users.create_and_invite(\n    request=UserCreateAndInviteRequest(\n        email=\"john.smith@example.com\",\n        name=\"John Smith\",\n        actor_roles=[\n            AssignActorRoleRequest(\n                role_id=\"us_rol_YOUR_ID\",\n            ),\n            AssignActorRoleRequest(\n                role_id=\"us_rol_YOUR_ID\",\n            ),\n        ],\n    ),\n)\n",
                        "sync_client": "from flatfile import AssignActorRoleRequest, UserCreateAndInviteRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_and_invite(\n    request=UserCreateAndInviteRequest(\n        email=\"john.smith@example.com\",\n        name=\"John Smith\",\n        actor_roles=[\n            AssignActorRoleRequest(\n                role_id=\"us_rol_YOUR_ID\",\n            ),\n            AssignActorRoleRequest(\n                role_id=\"us_rol_YOUR_ID\",\n            ),\n        ],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.users.createAndInvite({\n    email: \"john.smith@example.com\",\n    name: \"John Smith\",\n    actorRoles: [{\n            roleId: \"us_rol_YOUR_ID\",\n            resourceId: \"us_acc_YOUR_ID\"\n        }, {\n            roleId: \"us_rol_YOUR_ID\",\n            resourceId: \"us_env_YOUR_ID\"\n        }]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "john.smith@example.com",
                        "name": "John Smith",
                        "actorRoles": [
                          {
                            "roleId": "us_rol_YOUR_ID",
                            "resourceId": "us_acc_YOUR_ID"
                          },
                          {
                            "roleId": "us_rol_YOUR_ID",
                            "resourceId": "us_env_YOUR_ID"
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_usr_YOUR_ID",
                          "email": "john.smith@example.com",
                          "name": "john.smith",
                          "accountId": "us_acc_YOUR_ID",
                          "idp": "FRONTEGG",
                          "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                          "metadata": {},
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "lastSeenAt": "2023-10-30T16:59:45.735Z",
                          "dashboard": 2,
                          "actorRoles": [
                            {
                              "id": "us_acr_YOUR_ID",
                              "roleId": "us_rol_YOUR_ID",
                              "actorId": "us_usr_YOUR_ID",
                              "resourceId": "us_acc_YOUR_ID",
                              "createdAt": "2021-01-01T00:00:00Z",
                              "updatedAt": "2021-01-01T00:00:00Z"
                            },
                            {
                              "id": "us_acr_YOUR_ID",
                              "roleId": "us_rol_YOUR_ID",
                              "actorId": "us_ag_YOUR_ID",
                              "resourceId": "us_env_YOUR_ID",
                              "createdAt": "2021-01-01T00:00:00Z",
                              "updatedAt": "2021-01-01T00:00:00Z"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates and invites a new user to your account.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "resend-invite",
                "migratedFromUrlSlugs": ["resend-user-invite"],
                "method": "POST",
                "id": "resendInvite",
                "originalEndpointId": "endpoint_users.resendInvite",
                "name": "Resend User Invite",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The user id",
                      "key": "userId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/resend-invite"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/users/:userId/resend-invite",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Resends an invite to a user for your account.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-user"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_users.update",
                "name": "Update a user",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The user id",
                      "key": "userId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "name",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "dashboard",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_users:UserResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/users/:userId",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "idp": "string",
                          "idpRef": "string",
                          "metadata": {
                            "string": {}
                          },
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z",
                          "lastSeenAt": "2023-01-01T00:00:00Z",
                          "dashboard": 0,
                          "email": "string",
                          "name": "string",
                          "accountId": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a user",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-user"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_users.get",
                "name": "Get a user",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The user id",
                      "key": "userId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_users:UserResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/users/us_usr_YOUR_ID",
                    "pathParameters": {
                      "userId": "us_usr_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_usr_YOUR_ID",
                        "email": "john.smith@example.com",
                        "name": "john.smith",
                        "accountId": "us_acc_YOUR_ID",
                        "idp": "FRONTEGG",
                        "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                        "metadata": {},
                        "createdAt": "2023-10-30T16:59:45.735Z",
                        "updatedAt": "2023-10-30T16:59:45.735Z",
                        "lastSeenAt": "2023-10-30T16:59:45.735Z",
                        "dashboard": 2
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.users.get(\n    user_id=\"us_usr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    user_id=\"us_usr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.users.get(\"us_usr_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_usr_YOUR_ID",
                          "email": "john.smith@example.com",
                          "name": "john.smith",
                          "accountId": "us_acc_YOUR_ID",
                          "idp": "FRONTEGG",
                          "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                          "metadata": {},
                          "createdAt": "2023-10-30T16:59:45.735Z",
                          "updatedAt": "2023-10-30T16:59:45.735Z",
                          "lastSeenAt": "2023-10-30T16:59:45.735Z",
                          "dashboard": 2
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Gets a user",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-user"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_users.delete",
                "name": "Delete a user",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The user id",
                      "key": "userId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/users/:userId",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a user",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list-user-roles",
                "method": "GET",
                "id": "listUserRoles",
                "originalEndpointId": "endpoint_users.listUserRoles",
                "name": "List User Roles",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The user id",
                      "key": "userId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:ListActorRolesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "roleId": "string",
                            "actorId": "string",
                            "resourceId": "string",
                            "createdAt": "2023-01-01T00:00:00Z",
                            "updatedAt": "2023-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Lists roles assigned to a user.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "assign-user-role",
                "migratedFromUrlSlugs": ["assign-role-to-user"],
                "method": "POST",
                "id": "assignUserRole",
                "originalEndpointId": "endpoint_users.assignUserRole",
                "name": "Assign Role to User",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The user id",
                      "key": "userId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:AssignActorRoleRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_roles:AssignRoleResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "string",
                          "roleId": "string",
                          "actorId": "string",
                          "resourceId": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "updatedAt": "2023-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "roleId": "string",
                        "resourceId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Assigns a role to a user.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete-user-role",
                "migratedFromUrlSlugs": ["remove-role-from-user"],
                "method": "DELETE",
                "id": "deleteUserRole",
                "originalEndpointId": "endpoint_users.deleteUserRole",
                "name": "Remove Role from User",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The user id",
                      "key": "userId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:UserId"
                      }
                    },
                    {
                      "description": "The actor role id",
                      "key": "actorRoleId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ActorRoleId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/roles/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "actorRoleId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 403,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/users/:userId/roles/:actorRoleId",
                    "pathParameters": {
                      "userId": ":userId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles/:actorRoleId",
                    "pathParameters": {
                      "userId": ":userId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles/:actorRoleId",
                    "pathParameters": {
                      "userId": ":userId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/users/:userId/roles/:actorRoleId",
                    "pathParameters": {
                      "userId": ":userId",
                      "actorRoleId": ":actorRoleId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 403,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Removes a role from a user.",
                "authed": true
              }
            ],
            "types": [
              "type_users:ListUsersResponse",
              "type_users:UserResponse",
              "type_users:UserWithRolesResponse",
              "type_users:UserWithRoles",
              "type_users:User",
              "type_users:UserConfig",
              "type_users:ListUsersSortField",
              "type_users:UserCreateAndInviteRequest"
            ],
            "subpackages": [],
            "urlSlug": "users",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_versions": {
            "subpackageId": "subpackage_versions",
            "name": "versions",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "availability": "Deprecated",
                "defaultEnvironment": "Production",
                "urlSlug": "create-id",
                "method": "POST",
                "id": "createId",
                "originalEndpointId": "endpoint_versions.createId",
                "name": "Create Id",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/versions"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The ID of the Sheet.",
                        "key": "sheetId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_commons:SheetId"
                          }
                        }
                      },
                      {
                        "description": "Deprecated, creating or updating a group of records together will automatically generate a commitId to group those record changes together.",
                        "key": "parentVersionId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_commons:VersionId"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_versions:VersionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/versions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "sheetId": "us_sh_YOUR_ID",
                      "parentVersionId": "us_vr_YOUR_ID"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "versionId": "us_vr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.versions.create_id(\n    sheet_id=\"us_sh_YOUR_ID\",\n    parent_version_id=\"us_vr_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.versions.create_id(\n    sheet_id=\"us_sh_YOUR_ID\",\n    parent_version_id=\"us_vr_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.versions.createId({\n    sheetId: \"us_sh_YOUR_ID\",\n    parentVersionId: \"us_vr_YOUR_ID\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "us_sh_YOUR_ID",
                        "parentVersionId": "us_vr_YOUR_ID"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "versionId": "us_vr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": ["type_versions:VersionResponse", "type_versions:Version"],
            "subpackages": [],
            "urlSlug": "versions",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_views": {
            "subpackageId": "subpackage_views",
            "name": "views",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-views-by-sheet"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_views.list",
                "name": "List views by Sheet",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/views"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "The associated sheet ID of the view.",
                    "key": "sheetId",
                    "type": {
                      "type": "id",
                      "value": "type_commons:SheetId"
                    }
                  },
                  {
                    "description": "Number of prompts to return in a page (default 10)",
                    "key": "pageSize",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Based on pageSize, which page of prompts to return",
                    "key": "pageNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_views:ListViewsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/views",
                    "pathParameters": {},
                    "queryParameters": {
                      "sheetId": "us_sh_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_vi_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "name": "My View",
                          "config": {
                            "filter": "error",
                            "filterField": "email",
                            "q": "firstname like %John%",
                            "sortField": "email",
                            "sortDirection": "asc"
                          },
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      ],
                      "pagination": {
                        "currentPage": 3,
                        "pageCount": 50,
                        "totalCount": 100
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.list({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_vi_YOUR_ID",
                            "sheetId": "us_sh_YOUR_ID",
                            "name": "My View",
                            "config": {
                              "filter": "error",
                              "filterField": "email",
                              "q": "firstname like %John%",
                              "sortField": "email",
                              "sortDirection": "asc"
                            },
                            "createdBy": "us_usr_YOUR_ID"
                          }
                        ],
                        "pagination": {
                          "currentPage": 3,
                          "pageCount": 50,
                          "totalCount": 100
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views",
                    "pathParameters": {},
                    "queryParameters": {
                      "sheetId": "string",
                      "pageSize": 0,
                      "pageNumber": 0
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.list({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views",
                    "pathParameters": {},
                    "queryParameters": {
                      "sheetId": "string",
                      "pageSize": 0,
                      "pageNumber": 0
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.list({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns all views for the sheet",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-view"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_views.create",
                "name": "Create a view",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/views"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_views:ViewCreate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_views:ViewResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/views",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "sheetId": "us_sh_YOUR_ID",
                      "name": "My View",
                      "config": {
                        "filter": "error",
                        "filterField": "email",
                        "q": "firstname like %John%",
                        "sortField": "email",
                        "sortDirection": "asc"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_vi_YOUR_ID",
                        "sheetId": "us_sh_YOUR_ID",
                        "name": "My View",
                        "config": {
                          "filter": "error",
                          "filterField": "email",
                          "q": "firstname like %John%",
                          "sortField": "email",
                          "sortDirection": "asc"
                        },
                        "createdBy": "us_usr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.create({\n    sheetId: \"us_sh_YOUR_ID\",\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "us_sh_YOUR_ID",
                        "name": "My View",
                        "config": {
                          "filter": "error",
                          "filterField": "email",
                          "q": "firstname like %John%",
                          "sortField": "email",
                          "sortDirection": "asc"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_vi_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "name": "My View",
                          "config": {
                            "filter": "error",
                            "filterField": "email",
                            "q": "firstname like %John%",
                            "sortField": "email",
                            "sortDirection": "asc"
                          },
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.create({\n    sheetId: \"us_sh_YOUR_ID\",\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "string",
                        "name": "string",
                        "config": {}
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.create({\n    sheetId: \"us_sh_YOUR_ID\",\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "sheetId": "string",
                        "name": "string",
                        "config": {}
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Add a new view to the space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-view"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_views.get",
                "name": "Get a view",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of view to return",
                      "key": "viewId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ViewId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/views"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "viewId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_views:ViewResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/views/us_vi_YOUR_ID",
                    "pathParameters": {
                      "viewId": "us_vi_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_vi_YOUR_ID",
                        "sheetId": "us_sh_YOUR_ID",
                        "name": "My View",
                        "config": {
                          "filter": "error",
                          "filterField": "email",
                          "q": "firstname like %John%",
                          "sortField": "email",
                          "sortDirection": "asc"
                        },
                        "createdBy": "us_usr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.get(\"us_vi_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_vi_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "name": "My View",
                          "config": {
                            "filter": "error",
                            "filterField": "email",
                            "q": "firstname like %John%",
                            "sortField": "email",
                            "sortDirection": "asc"
                          },
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views/:viewId",
                    "pathParameters": {
                      "viewId": ":viewId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.get(\"us_vi_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views/:viewId",
                    "pathParameters": {
                      "viewId": ":viewId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.get(\"us_vi_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single view",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-view"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_views.update",
                "name": "Update a view",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of view to update",
                      "key": "viewId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ViewId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/views"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "viewId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_views:ViewUpdate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_views:ViewResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/views/us_vi_YOUR_ID",
                    "pathParameters": {
                      "viewId": "us_vi_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "My View",
                      "config": {
                        "filter": "error",
                        "filterField": "email",
                        "q": "firstname like %John%",
                        "sortField": "email",
                        "sortDirection": "asc"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_vi_YOUR_ID",
                        "sheetId": "us_sh_YOUR_ID",
                        "name": "My View",
                        "config": {
                          "filter": "error",
                          "filterField": "email",
                          "q": "firstname like %John%",
                          "sortField": "email",
                          "sortDirection": "asc"
                        },
                        "createdBy": "us_usr_YOUR_ID"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.update(\"us_vi_YOUR_ID\", {\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "My View",
                        "config": {
                          "filter": "error",
                          "filterField": "email",
                          "q": "firstname like %John%",
                          "sortField": "email",
                          "sortDirection": "asc"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_vi_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "name": "My View",
                          "config": {
                            "filter": "error",
                            "filterField": "email",
                            "q": "firstname like %John%",
                            "sortField": "email",
                            "sortDirection": "asc"
                          },
                          "createdBy": "us_usr_YOUR_ID"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views/:viewId",
                    "pathParameters": {
                      "viewId": ":viewId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.update(\"us_vi_YOUR_ID\", {\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "config": {}
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/views/:viewId",
                    "pathParameters": {
                      "viewId": ":viewId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.update(\"us_vi_YOUR_ID\", {\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "config": {}
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a single view",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-view"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_views.delete",
                "name": "Delete a view",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of view to delete",
                      "key": "viewId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:ViewId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/views"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "viewId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/views/us_vi_YOUR_ID",
                    "pathParameters": {
                      "viewId": "us_vi_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.views.delete(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.delete(\n    view_id=\"us_vi_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.delete(\"us_vi_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a single view",
                "authed": true
              }
            ],
            "types": [
              "type_views:ViewConfig",
              "type_views:View",
              "type_views:ListViewsResponse",
              "type_views:ViewResponse",
              "type_views:ViewCreate",
              "type_views:ViewUpdate"
            ],
            "subpackages": [],
            "urlSlug": "views",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_workbooks": {
            "subpackageId": "subpackage_workbooks",
            "name": "workbooks",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "list",
                "migratedFromUrlSlugs": ["list-workbooks"],
                "method": "GET",
                "id": "list",
                "originalEndpointId": "endpoint_workbooks.list",
                "name": "List workbooks",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/workbooks"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "The associated Space ID of the Workbook.",
                    "key": "spaceId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_commons:SpaceId"
                      }
                    }
                  },
                  {
                    "description": "Filter by name. Precede with - to negate the filter",
                    "key": "name",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by namespace. Precede with - to negate the filter",
                    "key": "namespace",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by label. Precede with - to negate the filter",
                    "key": "label",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter by treatment.",
                    "key": "treatment",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Include sheets for the workbook (default true)",
                    "key": "includeSheets",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "Include counts for the workbook. **DEPRECATED** Counts will return 0s. Use GET /sheets/:sheetId/counts",
                    "key": "includeCounts",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_workbooks:ListWorkbooksResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/workbooks",
                    "pathParameters": {},
                    "queryParameters": {
                      "spaceId": "us_sp_YOUR_ID"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_wb_YOUR_ID",
                          "name": "My First Workbook",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "sheets": [
                            {
                              "id": "us_sh_YOUR_ID",
                              "workbookId": "us_wb_YOUR_ID",
                              "name": "Contacts",
                              "slug": "contacts",
                              "config": {
                                "name": "Contacts",
                                "slug": "contacts",
                                "fields": [
                                  {
                                    "key": "firstName",
                                    "type": "string",
                                    "label": "First Name"
                                  },
                                  {
                                    "key": "lastName",
                                    "type": "string",
                                    "label": "Last Name"
                                  },
                                  {
                                    "key": "email",
                                    "type": "string",
                                    "label": "Email"
                                  }
                                ],
                                "mappingConfidenceThreshold": 0.5
                              },
                              "metadata": {
                                "rowHeaders": [4]
                              },
                              "updatedAt": "2021-08-31T18:00:00Z",
                              "createdAt": "2021-08-31T18:00:00Z"
                            }
                          ],
                          "labels": ["simple-demo"],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "settings": {
                            "trackChanges": true
                          },
                          "updatedAt": "2021-01-01T00:00:00Z",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "expiredAt": "2021-01-01T00:00:00Z"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.list({\n    spaceId: \"us_sp_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_wb_YOUR_ID",
                            "name": "My First Workbook",
                            "spaceId": "us_sp_YOUR_ID",
                            "environmentId": "us_env_YOUR_ID",
                            "sheets": [
                              {
                                "id": "us_sh_YOUR_ID",
                                "workbookId": "us_wb_YOUR_ID",
                                "name": "Contacts",
                                "slug": "contacts",
                                "config": {
                                  "name": "Contacts",
                                  "slug": "contacts",
                                  "fields": [
                                    {
                                      "key": "firstName",
                                      "type": "string",
                                      "label": "First Name"
                                    },
                                    {
                                      "key": "lastName",
                                      "type": "string",
                                      "label": "Last Name"
                                    },
                                    {
                                      "key": "email",
                                      "type": "string",
                                      "label": "Email"
                                    }
                                  ],
                                  "mappingConfidenceThreshold": 0.5
                                },
                                "metadata": {
                                  "rowHeaders": [4]
                                },
                                "updatedAt": "2021-08-31T18:00:00Z",
                                "createdAt": "2021-08-31T18:00:00Z"
                              }
                            ],
                            "labels": ["simple-demo"],
                            "actions": [
                              {
                                "operation": "submitAction",
                                "mode": "foreground",
                                "label": "Submit",
                                "description": "Submit data to webhook.site",
                                "primary": true
                              }
                            ],
                            "settings": {
                              "trackChanges": true
                            },
                            "updatedAt": "2021-01-01T00:00:00Z",
                            "createdAt": "2021-01-01T00:00:00Z",
                            "expiredAt": "2021-01-01T00:00:00Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks",
                    "pathParameters": {},
                    "queryParameters": {
                      "spaceId": "string",
                      "name": "string"
                    },
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.list({\n    spaceId: \"us_sp_YOUR_ID\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns all workbooks matching a filter for an account or space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-workbook"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_workbooks.create",
                "name": "Create a workbook",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/workbooks"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_workbooks:CreateWorkbookConfig"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_workbooks:WorkbookResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/workbooks",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "My First Workbook",
                      "sheets": [
                        {
                          "name": "Contacts",
                          "slug": "contacts",
                          "fields": [
                            {
                              "key": "firstName",
                              "type": "string",
                              "label": "First Name"
                            },
                            {
                              "key": "lastName",
                              "type": "string",
                              "label": "Last Name"
                            },
                            {
                              "key": "email",
                              "type": "string",
                              "label": "Email"
                            }
                          ],
                          "mappingConfidenceThreshold": 0.5
                        }
                      ],
                      "labels": ["simple-demo"],
                      "actions": [
                        {
                          "operation": "submitAction",
                          "mode": "foreground",
                          "label": "Submit",
                          "description": "Submit data to webhook.site",
                          "primary": true
                        }
                      ],
                      "settings": {
                        "trackChanges": true
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_wb_YOUR_ID",
                        "name": "My First Workbook",
                        "spaceId": "us_sp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "sheets": [
                          {
                            "id": "us_sh_YOUR_ID",
                            "workbookId": "us_wb_YOUR_ID",
                            "name": "Contacts",
                            "slug": "contacts",
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            },
                            "metadata": {
                              "rowHeaders": [4]
                            },
                            "updatedAt": "2021-08-31T18:00:00Z",
                            "createdAt": "2021-08-31T18:00:00Z"
                          }
                        ],
                        "labels": ["simple-demo"],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ],
                        "settings": {
                          "trackChanges": true
                        },
                        "updatedAt": "2021-01-01T00:00:00Z",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "expiredAt": "2021-01-01T00:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import (\n    Action,\n    ActionMode,\n    CreateWorkbookConfig,\n    Property_String,\n    SheetConfig,\n    WorkbookConfigSettings,\n)\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.create(\n    request=CreateWorkbookConfig(\n        name=\"My First Workbook\",\n        sheets=[\n            SheetConfig(\n                name=\"Contacts\",\n                slug=\"contacts\",\n                fields=[\n                    Property_String(\n                        type=\"string\",\n                        key=\"firstName\",\n                        label=\"First Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"lastName\",\n                        label=\"Last Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"email\",\n                        label=\"Email\",\n                    ),\n                ],\n                mapping_confidence_threshold=0.5,\n            )\n        ],\n        labels=[\"simple-demo\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n        settings=WorkbookConfigSettings(\n            track_changes=True,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import (\n    Action,\n    ActionMode,\n    CreateWorkbookConfig,\n    Property_String,\n    SheetConfig,\n    WorkbookConfigSettings,\n)\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.create(\n    request=CreateWorkbookConfig(\n        name=\"My First Workbook\",\n        sheets=[\n            SheetConfig(\n                name=\"Contacts\",\n                slug=\"contacts\",\n                fields=[\n                    Property_String(\n                        type=\"string\",\n                        key=\"firstName\",\n                        label=\"First Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"lastName\",\n                        label=\"Last Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"email\",\n                        label=\"Email\",\n                    ),\n                ],\n                mapping_confidence_threshold=0.5,\n            )\n        ],\n        labels=[\"simple-demo\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n        settings=WorkbookConfigSettings(\n            track_changes=True,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.create({\n    name: \"My First Workbook\",\n    sheets: [{\n            name: \"Contacts\",\n            slug: \"contacts\",\n            fields: [{\n                    type: \"string\",\n                    key: \"firstName\",\n                    label: \"First Name\"\n                }, {\n                    type: \"string\",\n                    key: \"lastName\",\n                    label: \"Last Name\"\n                }, {\n                    type: \"string\",\n                    key: \"email\",\n                    label: \"Email\"\n                }],\n            mappingConfidenceThreshold: 0.5\n        }],\n    labels: [\"simple-demo\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }],\n    settings: {\n        trackChanges: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "My First Workbook",
                        "sheets": [
                          {
                            "name": "Contacts",
                            "slug": "contacts",
                            "fields": [
                              {
                                "key": "firstName",
                                "type": "string",
                                "label": "First Name"
                              },
                              {
                                "key": "lastName",
                                "type": "string",
                                "label": "Last Name"
                              },
                              {
                                "key": "email",
                                "type": "string",
                                "label": "Email"
                              }
                            ],
                            "mappingConfidenceThreshold": 0.5
                          }
                        ],
                        "labels": ["simple-demo"],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ],
                        "settings": {
                          "trackChanges": true
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_wb_YOUR_ID",
                          "name": "My First Workbook",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "sheets": [
                            {
                              "id": "us_sh_YOUR_ID",
                              "workbookId": "us_wb_YOUR_ID",
                              "name": "Contacts",
                              "slug": "contacts",
                              "config": {
                                "name": "Contacts",
                                "slug": "contacts",
                                "fields": [
                                  {
                                    "key": "firstName",
                                    "type": "string",
                                    "label": "First Name"
                                  },
                                  {
                                    "key": "lastName",
                                    "type": "string",
                                    "label": "Last Name"
                                  },
                                  {
                                    "key": "email",
                                    "type": "string",
                                    "label": "Email"
                                  }
                                ],
                                "mappingConfidenceThreshold": 0.5
                              },
                              "metadata": {
                                "rowHeaders": [4]
                              },
                              "updatedAt": "2021-08-31T18:00:00Z",
                              "createdAt": "2021-08-31T18:00:00Z"
                            }
                          ],
                          "labels": ["simple-demo"],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "settings": {
                            "trackChanges": true
                          },
                          "updatedAt": "2021-01-01T00:00:00Z",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "expiredAt": "2021-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import (\n    Action,\n    ActionMode,\n    CreateWorkbookConfig,\n    Property_String,\n    SheetConfig,\n    WorkbookConfigSettings,\n)\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.create(\n    request=CreateWorkbookConfig(\n        name=\"My First Workbook\",\n        sheets=[\n            SheetConfig(\n                name=\"Contacts\",\n                slug=\"contacts\",\n                fields=[\n                    Property_String(\n                        type=\"string\",\n                        key=\"firstName\",\n                        label=\"First Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"lastName\",\n                        label=\"Last Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"email\",\n                        label=\"Email\",\n                    ),\n                ],\n                mapping_confidence_threshold=0.5,\n            )\n        ],\n        labels=[\"simple-demo\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n        settings=WorkbookConfigSettings(\n            track_changes=True,\n        ),\n    ),\n)\n",
                        "sync_client": "from flatfile import (\n    Action,\n    ActionMode,\n    CreateWorkbookConfig,\n    Property_String,\n    SheetConfig,\n    WorkbookConfigSettings,\n)\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.create(\n    request=CreateWorkbookConfig(\n        name=\"My First Workbook\",\n        sheets=[\n            SheetConfig(\n                name=\"Contacts\",\n                slug=\"contacts\",\n                fields=[\n                    Property_String(\n                        type=\"string\",\n                        key=\"firstName\",\n                        label=\"First Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"lastName\",\n                        label=\"Last Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"email\",\n                        label=\"Email\",\n                    ),\n                ],\n                mapping_confidence_threshold=0.5,\n            )\n        ],\n        labels=[\"simple-demo\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n        settings=WorkbookConfigSettings(\n            track_changes=True,\n        ),\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.create({\n    name: \"My First Workbook\",\n    sheets: [{\n            name: \"Contacts\",\n            slug: \"contacts\",\n            fields: [{\n                    type: \"string\",\n                    key: \"firstName\",\n                    label: \"First Name\"\n                }, {\n                    type: \"string\",\n                    key: \"lastName\",\n                    label: \"Last Name\"\n                }, {\n                    type: \"string\",\n                    key: \"email\",\n                    label: \"Email\"\n                }],\n            mappingConfidenceThreshold: 0.5\n        }],\n    labels: [\"simple-demo\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }],\n    settings: {\n        trackChanges: true\n    }\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creates a workbook and adds it to a space",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get",
                "migratedFromUrlSlugs": ["get-a-workbook"],
                "method": "GET",
                "id": "get",
                "originalEndpointId": "endpoint_workbooks.get",
                "name": "Get a workbook",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of workbook to return",
                      "key": "workbookId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:WorkbookId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/workbooks"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "workbookId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_workbooks:WorkbookResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/workbooks/us_wb_YOUR_ID",
                    "pathParameters": {
                      "workbookId": "us_wb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_wb_YOUR_ID",
                        "name": "My First Workbook",
                        "spaceId": "us_sp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "sheets": [
                          {
                            "id": "us_sh_YOUR_ID",
                            "workbookId": "us_wb_YOUR_ID",
                            "name": "Contacts",
                            "slug": "contacts",
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            },
                            "metadata": {
                              "rowHeaders": [4]
                            },
                            "updatedAt": "2021-08-31T18:00:00Z",
                            "createdAt": "2021-08-31T18:00:00Z"
                          }
                        ],
                        "labels": ["simple-demo"],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ],
                        "settings": {
                          "trackChanges": true
                        },
                        "updatedAt": "2021-01-01T00:00:00Z",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "expiredAt": "2021-01-01T00:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.get(\"us_wb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_wb_YOUR_ID",
                          "name": "My First Workbook",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "sheets": [
                            {
                              "id": "us_sh_YOUR_ID",
                              "workbookId": "us_wb_YOUR_ID",
                              "name": "Contacts",
                              "slug": "contacts",
                              "config": {
                                "name": "Contacts",
                                "slug": "contacts",
                                "fields": [
                                  {
                                    "key": "firstName",
                                    "type": "string",
                                    "label": "First Name"
                                  },
                                  {
                                    "key": "lastName",
                                    "type": "string",
                                    "label": "Last Name"
                                  },
                                  {
                                    "key": "email",
                                    "type": "string",
                                    "label": "Email"
                                  }
                                ],
                                "mappingConfidenceThreshold": 0.5
                              },
                              "metadata": {
                                "rowHeaders": [4]
                              },
                              "updatedAt": "2021-08-31T18:00:00Z",
                              "createdAt": "2021-08-31T18:00:00Z"
                            }
                          ],
                          "labels": ["simple-demo"],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "settings": {
                            "trackChanges": true
                          },
                          "updatedAt": "2021-01-01T00:00:00Z",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "expiredAt": "2021-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks/:workbookId",
                    "pathParameters": {
                      "workbookId": ":workbookId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.get(\"us_wb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks/:workbookId",
                    "pathParameters": {
                      "workbookId": ":workbookId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.get(\"us_wb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single workbook",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-workbook"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_workbooks.delete",
                "name": "Delete a workbook",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of workbook to delete",
                      "key": "workbookId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:WorkbookId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/workbooks"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "workbookId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commons:Success"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/workbooks/us_wb_YOUR_ID",
                    "pathParameters": {
                      "workbookId": "us_wb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "success": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.delete(\"us_wb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "success": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks/:workbookId",
                    "pathParameters": {
                      "workbookId": ":workbookId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.delete(\"us_wb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks/:workbookId",
                    "pathParameters": {
                      "workbookId": ":workbookId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.delete(\"us_wb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a workbook and all of its record data permanently",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update",
                "migratedFromUrlSlugs": ["update-a-workbook"],
                "method": "PATCH",
                "id": "update",
                "originalEndpointId": "endpoint_workbooks.update",
                "name": "Update a workbook",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of workbook to update",
                      "key": "workbookId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:WorkbookId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/workbooks"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "workbookId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_workbooks:WorkbookUpdate"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_workbooks:WorkbookResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 400,
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_commons:Errors"
                      }
                    },
                    "statusCode": 404,
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/workbooks/us_wb_YOUR_ID",
                    "pathParameters": {
                      "workbookId": "us_wb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "requestBody": {
                      "name": "My Updated Workbook",
                      "labels": ["my-new-label"],
                      "actions": [
                        {
                          "operation": "submitAction",
                          "mode": "foreground",
                          "label": "Submit Changes",
                          "description": "Submit data to webhook.site",
                          "primary": true
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "us_wb_YOUR_ID",
                        "name": "My First Workbook",
                        "spaceId": "us_sp_YOUR_ID",
                        "environmentId": "us_env_YOUR_ID",
                        "sheets": [
                          {
                            "id": "us_sh_YOUR_ID",
                            "workbookId": "us_wb_YOUR_ID",
                            "name": "Contacts",
                            "slug": "contacts",
                            "config": {
                              "name": "Contacts",
                              "slug": "contacts",
                              "fields": [
                                {
                                  "key": "firstName",
                                  "type": "string",
                                  "label": "First Name"
                                },
                                {
                                  "key": "lastName",
                                  "type": "string",
                                  "label": "Last Name"
                                },
                                {
                                  "key": "email",
                                  "type": "string",
                                  "label": "Email"
                                }
                              ],
                              "mappingConfidenceThreshold": 0.5
                            },
                            "metadata": {
                              "rowHeaders": [4]
                            },
                            "updatedAt": "2021-08-31T18:00:00Z",
                            "createdAt": "2021-08-31T18:00:00Z"
                          }
                        ],
                        "labels": ["simple-demo"],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ],
                        "settings": {
                          "trackChanges": true
                        },
                        "updatedAt": "2021-01-01T00:00:00Z",
                        "createdAt": "2021-01-01T00:00:00Z",
                        "expiredAt": "2021-01-01T00:00:00Z"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                        "sync_client": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.update(\"us_wb_YOUR_ID\", {\n    name: \"My Updated Workbook\",\n    labels: [\"my-new-label\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit Changes\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "My Updated Workbook",
                        "labels": ["my-new-label"],
                        "actions": [
                          {
                            "operation": "submitAction",
                            "mode": "foreground",
                            "label": "Submit Changes",
                            "description": "Submit data to webhook.site",
                            "primary": true
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "us_wb_YOUR_ID",
                          "name": "My First Workbook",
                          "spaceId": "us_sp_YOUR_ID",
                          "environmentId": "us_env_YOUR_ID",
                          "sheets": [
                            {
                              "id": "us_sh_YOUR_ID",
                              "workbookId": "us_wb_YOUR_ID",
                              "name": "Contacts",
                              "slug": "contacts",
                              "config": {
                                "name": "Contacts",
                                "slug": "contacts",
                                "fields": [
                                  {
                                    "key": "firstName",
                                    "type": "string",
                                    "label": "First Name"
                                  },
                                  {
                                    "key": "lastName",
                                    "type": "string",
                                    "label": "Last Name"
                                  },
                                  {
                                    "key": "email",
                                    "type": "string",
                                    "label": "Email"
                                  }
                                ],
                                "mappingConfidenceThreshold": 0.5
                              },
                              "metadata": {
                                "rowHeaders": [4]
                              },
                              "updatedAt": "2021-08-31T18:00:00Z",
                              "createdAt": "2021-08-31T18:00:00Z"
                            }
                          ],
                          "labels": ["simple-demo"],
                          "actions": [
                            {
                              "operation": "submitAction",
                              "mode": "foreground",
                              "label": "Submit",
                              "description": "Submit data to webhook.site",
                              "primary": true
                            }
                          ],
                          "settings": {
                            "trackChanges": true
                          },
                          "updatedAt": "2021-01-01T00:00:00Z",
                          "createdAt": "2021-01-01T00:00:00Z",
                          "expiredAt": "2021-01-01T00:00:00Z"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks/:workbookId",
                    "pathParameters": {
                      "workbookId": ":workbookId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                        "sync_client": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.update(\"us_wb_YOUR_ID\", {\n    name: \"My Updated Workbook\",\n    labels: [\"my-new-label\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit Changes\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/workbooks/:workbookId",
                    "pathParameters": {
                      "workbookId": ":workbookId"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                        "sync_client": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.update(\"us_wb_YOUR_ID\", {\n    name: \"My Updated Workbook\",\n    labels: [\"my-new-label\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit Changes\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errors": [
                          {
                            "key": "string",
                            "message": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Updates a workbook",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.x.flatfile.com/v1"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-workbook-commits",
                "migratedFromUrlSlugs": ["get-commits-for-a-workbook"],
                "method": "GET",
                "id": "getWorkbookCommits",
                "originalEndpointId": "endpoint_workbooks.getWorkbookCommits",
                "name": "Get commits for a workbook",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of workbook",
                      "key": "workbookId",
                      "type": {
                        "type": "id",
                        "value": "type_commons:WorkbookId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/workbooks"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "workbookId"
                    },
                    {
                      "type": "literal",
                      "value": "/commits"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "If true, only return commits that have been completed. If false, only return commits that have not been completed. If not provided, return all commits.",
                    "key": "completed",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_commits:ListCommitsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "Example0",
                    "path": "/workbooks/us_wb_YOUR_ID/commits",
                    "pathParameters": {
                      "workbookId": "us_wb_YOUR_ID"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Disable-Hooks": "true"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "us_vr_YOUR_ID",
                          "sheetId": "us_sh_YOUR_ID",
                          "createdBy": "us_usr_YOUR_ID",
                          "createdAt": "2019-08-24T14:15:22Z"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "pythonSdk": {
                        "type": "python",
                        "sdk": {
                          "version": "0.0.27",
                          "package": "flatfile"
                        },
                        "async_client": "from flatfile.client import AsyncFlatfile\n\nclient = AsyncFlatfile(\n    token=\"YOUR_TOKEN\",\n)\nawait client.workbooks.get_workbook_commits(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                        "sync_client": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get_workbook_commits(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n"
                      },
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "1.11.0",
                          "package": "@flatfile/api"
                        },
                        "client": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.getWorkbookCommits(\"us_wb_YOUR_ID\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "us_vr_YOUR_ID",
                            "sheetId": "us_sh_YOUR_ID",
                            "createdBy": "us_usr_YOUR_ID",
                            "createdAt": "2019-08-24T14:15:22Z"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns the commits for a workbook",
                "authed": true
              }
            ],
            "types": [
              "type_workbooks:ListWorkbooksResponse",
              "type_workbooks:WorkbookResponse",
              "type_workbooks:Workbook",
              "type_workbooks:CreateWorkbookConfig",
              "type_workbooks:WorkbookConfigSettings",
              "type_workbooks:WorkbookUpdate",
              "type_workbooks:WorkbookTreatments"
            ],
            "subpackages": [],
            "urlSlug": "workbooks",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "bearerAuth",
          "tokenName": "token"
        },
        "hasMultipleBaseUrls": false,
        "globalHeaders": [
          {
            "key": "X-Disable-Hooks",
            "type": {
              "type": "literal",
              "value": {
                "type": "stringLiteral",
                "value": "true"
              }
            }
          }
        ]
      }
    },
    "files": {
      "229f260f-d946-4cdd-b56a-5b0a407851f8": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//flatfile.docs.buildwithfern.com/2024-11-05T04%3A22%3A41.958Z/fonts/CircularXXWeb-Regular.woff2",
      "0caedca6-fc1f-48bd-ba2a-1c79e950e3ed": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//flatfile.docs.buildwithfern.com/2024-11-05T04%3A22%3A41.958Z/fonts/CircularXXWeb-Bold.woff2",
      "8d4d4eb7-c3f5-4c1d-a191-54f0aef63f98": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//flatfile.docs.buildwithfern.com/2024-11-05T04%3A22%3A41.958Z/fonts/Friends-Black.woff2",
      "b16d0953-36b4-43ea-aec8-9bf946892224": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//flatfile.docs.buildwithfern.com/2024-11-05T04%3A22%3A41.958Z/logo/dark.png",
      "7de9c471-d3d3-4427-9f20-e345a6b7be63": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//flatfile.docs.buildwithfern.com/2024-11-05T04%3A22%3A41.958Z/logo/light.png",
      "5d90cadd-815b-4718-9f2a-275faa561cd7": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//flatfile.docs.buildwithfern.com/2024-11-05T04%3A22%3A41.958Z/favicon.jpg"
    },
    "jsFiles": {},
    "filesV2": {
      "229f260f-d946-4cdd-b56a-5b0a407851f8": {
        "type": "url",
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://flatfile.docs.buildwithfern.com/2024-11-05T04:22:41.958Z/fonts/CircularXXWeb-Regular.woff2"
      },
      "0caedca6-fc1f-48bd-ba2a-1c79e950e3ed": {
        "type": "url",
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://flatfile.docs.buildwithfern.com/2024-11-05T04:22:41.958Z/fonts/CircularXXWeb-Bold.woff2"
      },
      "8d4d4eb7-c3f5-4c1d-a191-54f0aef63f98": {
        "type": "url",
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://flatfile.docs.buildwithfern.com/2024-11-05T04:22:41.958Z/fonts/Friends-Black.woff2"
      },
      "b16d0953-36b4-43ea-aec8-9bf946892224": {
        "type": "image",
        "width": 276,
        "height": 64,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://flatfile.docs.buildwithfern.com/2024-11-05T04:22:41.958Z/logo/dark.png"
      },
      "7de9c471-d3d3-4427-9f20-e345a6b7be63": {
        "type": "image",
        "width": 276,
        "height": 64,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://flatfile.docs.buildwithfern.com/2024-11-05T04:22:41.958Z/logo/light.png"
      },
      "5d90cadd-815b-4718-9f2a-275faa561cd7": {
        "type": "image",
        "width": 360,
        "height": 360,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://flatfile.docs.buildwithfern.com/2024-11-05T04:22:41.958Z/favicon.jpg"
      }
    },
    "pages": {
      "mdx/welcome.mdx": {
        "markdown": "\n<Card \n  href=\"https://app.getpostman.com/run-collection/31067885-897e74ef-e13d-4cdb-8681-65785a63b2a3?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D31067885-897e74ef-e13d-4cdb-8681-65785a63b2a3%26entityType%3Dcollection%26workspaceId%3Da2b6bd5c-0afa-46d3-bb84-e29a36dd97ec\"\n  icon=\"fa-regular fa-play\"\n  title=\"Run in Postman\"\n/>\n\n<br />\n**It's a wild west of data out there, where rules and best practices are shot from the hip. This makes injesting data cleanly a colossal pain in the ass. Flatfile is the missing API for data exchange, import, and migration.**\n\nWith Flatfile, you can:\n\n- Accept, transform, and validate data so that it arrives in your systems in exactly the right shape\n- Embed an easy-to-use, self-service data importer directly into your app\n- Invite your customers to collaborate on a hosted onboarding project, replacing hours of back-and-forth communication\n\nLet's design and build your dream data exchange experience.\n\n### About our API\n\nThe Flatfile API uses [REST](http://www.drdobbs.com/web-development/restful-web-services-a-tutorial/240169069). Our API is designed to have predictable resource-oriented URLs and to use HTTP response codes to indicate API errors. It accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n\nThe Flatfile API doesn't have a test mode; however, [Environments](/api-reference/environments)  allow you to test without affecting your live data.\n\n### Getting started\n\nTo begin working with Flatfile, follow this [link](https://platform.flatfile.com/account/sign-up) to sign up and immediately retrieve your API keys.\n\n### We're Here to Help\nContact Support at [support@flatfile.com](mailto:support@flatfile.com) to get help from our team of in-house experts.\n"
      },
      "mdx/auth.mdx": {
        "markdown": "**Learn how to use API keys to authenticate API requests.**\n\nFlatfile provides two different kinds of environment-specific API keys you can use to interact with the API. In addition, you can work with a development key or a production environment.\n\nRead on to learn more about how to think about which keys to use and how to test in development mode.\n\n## Testing and development\n\n[Environments](/api-reference/environments) are isolated entities and are intended to be a safe place to create and\ntest different configurations. A `development` and `production` environment are created\nby default.\n\n| isProd  | Name          | Description                                                                                 |\n| ------- | ------------- | ------------------------------------------------------------------------------------------- |\n| _false_ | `development` | Use this default environment, and its associated test API keys, as you build with Flatfile. |\n| _true_  | `production`  | When you're ready to launch, create a new environment and swap out your keys.               |\n\n<Callout intent=\"success\">\n    The development environment does not count towards your paid credits.\n</Callout>\n\n## Secret and publishable keys\n\nAll Accounts have two key types for each environment. Learn when to use each type of key:\n\n| Type            | Id                     | Description                                                                                                             |\n| --------------- | ---------------------- | ----------------------------------------------------------------------------------------------------------------------- |\n| Secret key      | `sk_23ghsyuyshs7dcrty` | **On the server-side:** Store this securely in your server-side code. Don’t expose this key in an application.          |\n| Publishable key | `pk_23ghsyuyshs7dcert` | **On the client-side:** Can be publicly-accessible in your application's client-side code. Use when embedding Flatfile. |\n\n<Callout intent=\"info\">\n    The `accessToken` provided from `publishableKey` will remain valid for a\n    duration of 24 hours.\n</Callout>\n"
      },
      "mdx/using-environments.mdx": {
        "markdown": "**Learn how to use Environments for testing and authentication.**\n\n[Environments](/api-reference/environments) are isolated entities and are intended to be a safe place to create and\ntest different configurations. Environments serve as self-contained, secure domains\nwhere diverse configurations can be created and tested. By default, a development\nand a production environment are set up.\n\n| isProd  | Name          | Description                                                                                  |\n| ------- | ------------- | -------------------------------------------------------------------------------------------- |\n| _false_ | `development` | Use this default environment, and it’s associated test API keys, as you build with Flatfile. |\n| _true_  | `production`  | When you're ready to launch, create a new environment and swap out your keys.                |\n\n<Callout intent=\"success\">\n    The development environment does not count towards your paid credits.\n</Callout>\n\n## Guest Authentication\n\nEnvironments support two types of guest authentication:\n\n1. `magic_link`: This method dispatches an email to your guests, which includes a magic link to facilitate login.\n2. `shared_link`: This method transforms the Space URL into a public one, typically used in conjunction with embedded Flatfile.\n\n### Additional Info\n\nShould the `guestAuthentication` be left unspecified, both `magic_link` and `shared_link` types are enabled by default.\n\nIt's important to note that `guestAuthentication` settings can be applied at both Environment and Space levels. However, in case of any conflicting settings, the authentication type set at the Space level will take precedence over the Environment level setting. This flexibility enables customization based on specific needs, ensuring the right balance of accessibility and security.\n\n## Secret and publishable keys\n\nAll Accounts have two key types for each environment. Learn when to use each type of key:\n\n| Type            | Id                     | Description                                                                                                             |\n| --------------- | ---------------------- | ----------------------------------------------------------------------------------------------------------------------- |\n| Secret key      | `sk_23ghsyuyshs7dcrty` | **On the server-side:** Store this securely in your server-side code. Don’t expose this key in an application.          |\n| Publishable key | `pk_23ghsyuyshs7dcert` | **On the client-side:** Can be publicly-accessible in your application's client-side code. Use when embedding Flatfile. |\n\n<Callout intent=\"warning\">\n    The publishable key only has permissions to create a Space.\n</Callout>\n"
      }
    },
    "search": {
      "type": "singleAlgoliaIndex",
      "value": {
        "type": "unversioned",
        "indexSegment": {
          "id": "seg_flatfile.docs.buildwithfern.com_03caf257-a255-4375-93d2-0ac22798b2eb",
          "searchApiKey": "MDkxYzc4ZWMwMTg2OTkxYjhkOTU5OTBlNGVjYTM1MWJhYTVmNTE1Yzk0OWNiNGMzMTVjYzQzMmI1M2RhOWM2ZGZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfZmxhdGZpbGUuZG9jcy5idWlsZHdpdGhmZXJuLmNvbV8wM2NhZjI1Ny1hMjU1LTQzNzUtOTNkMi0wYWMyMjc5OGIyZWImdmFsaWRVbnRpbD0xNzMwODExMTY4"
        }
      }
    },
    "id": "docs_definition_6dad2a2a-e604-458f-beba-a8310f62cc5b"
  },
  "lightModeEnabled": true
}
