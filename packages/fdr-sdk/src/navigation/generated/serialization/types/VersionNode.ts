/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as FernNavigation from "../../api/index";
import * as core from "../../core";
import { VersionId } from "./VersionId";
import { VersionChild } from "./VersionChild";
import { Availability } from "./Availability";
import { WithNodeMetadata } from "./WithNodeMetadata";
import { WithRedirect } from "./WithRedirect";

export const VersionNode: core.serialization.ObjectSchema<serializers.VersionNode.Raw, FernNavigation.VersionNode> =
    core.serialization
        .objectWithoutOptionalProperties({
            type: core.serialization.stringLiteral("version"),
            versionId: VersionId,
            child: VersionChild,
            availability: Availability.optional(),
        })
        .extend(WithNodeMetadata)
        .extend(WithRedirect);

export declare namespace VersionNode {
    interface Raw extends WithNodeMetadata.Raw, WithRedirect.Raw {
        type: "version";
        versionId: VersionId.Raw;
        child: VersionChild.Raw;
        availability?: Availability.Raw | null;
    }
}
