/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as FernNavigation from "../../api/index";
import * as core from "../../core";
import { ApiDefinitionId } from "../resources/apiReference/types/ApiDefinitionId";
import { WebSocketId } from "../resources/apiReference/types/WebSocketId";
import { Availability } from "./Availability";
import { WithNodeMetadata } from "./WithNodeMetadata";

export const WebSocketNode: core.serialization.ObjectSchema<
    serializers.WebSocketNode.Raw,
    FernNavigation.WebSocketNode
> = core.serialization
    .objectWithoutOptionalProperties({
        type: core.serialization.stringLiteral("webSocket"),
        apiDefinitionId: ApiDefinitionId,
        webSocketId: WebSocketId,
        availability: Availability.optional(),
    })
    .extend(WithNodeMetadata);

export declare namespace WebSocketNode {
    interface Raw extends WithNodeMetadata.Raw {
        type: "webSocket";
        apiDefinitionId: ApiDefinitionId.Raw;
        webSocketId: WebSocketId.Raw;
        availability?: Availability.Raw | null;
    }
}
