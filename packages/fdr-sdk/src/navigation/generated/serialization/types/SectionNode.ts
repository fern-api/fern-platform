/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as FernNavigation from "../../api/index";
import * as core from "../../core";
import { WithNodeMetadata } from "./WithNodeMetadata";
import { WithOverviewPage } from "./WithOverviewPage";

export const SectionNode: core.serialization.ObjectSchema<serializers.SectionNode.Raw, FernNavigation.SectionNode> =
    core.serialization
        .objectWithoutOptionalProperties({
            type: core.serialization.stringLiteral("section"),
            collapsed: core.serialization.boolean().optional(),
            children: core.serialization.list(
                core.serialization.lazy(async () => (await import("..")).NavigationChild)
            ),
        })
        .extend(WithNodeMetadata)
        .extend(WithOverviewPage);

export declare namespace SectionNode {
    interface Raw extends WithNodeMetadata.Raw, WithOverviewPage.Raw {
        type: "section";
        collapsed?: boolean | null;
        children: serializers.NavigationChild.Raw[];
    }
}
