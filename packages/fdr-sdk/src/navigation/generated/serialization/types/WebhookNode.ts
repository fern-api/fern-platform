/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as FernNavigation from "../../api/index";
import * as core from "../../core";
import { HttpMethod } from "./HttpMethod";
import { ApiDefinitionId } from "../resources/apiReference/types/ApiDefinitionId";
import { WebhookId } from "../resources/apiReference/types/WebhookId";
import { Availability } from "./Availability";
import { WithNodeMetadata } from "./WithNodeMetadata";

export const WebhookNode: core.serialization.ObjectSchema<serializers.WebhookNode.Raw, FernNavigation.WebhookNode> =
    core.serialization
        .objectWithoutOptionalProperties({
            type: core.serialization.stringLiteral("webhook"),
            method: HttpMethod,
            apiDefinitionId: ApiDefinitionId,
            webhookId: WebhookId,
            availability: Availability.optional(),
        })
        .extend(WithNodeMetadata);

export declare namespace WebhookNode {
    interface Raw extends WithNodeMetadata.Raw {
        type: "webhook";
        method: HttpMethod.Raw;
        apiDefinitionId: ApiDefinitionId.Raw;
        webhookId: WebhookId.Raw;
        availability?: Availability.Raw | null;
    }
}
