* Proxying function: createGetAuthStateEdge *
* Arguments start *
 [
  {
  cookies: RequestCookies {},
  nextUrl: {
  href: 'http://localhost:3000/',
  origin: 'http://localhost:3000',
  protocol: 'http:',
  username: '',
  password: '',
  host: 'localhost:3000',
  hostname: 'localhost',
  port: '3000',
  pathname: '/',
  search: '',
  searchParams: URLSearchParams {  },
  hash: ''
},
  url: 'http://localhost:3000/',
  bodyUsed: false,
  cache: 'default',
  credentials: 'same-origin',
  destination: '',
  headers: {
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  accept-encoding: 'gzip, deflate, br, zstd',
  accept-language: 'en-US,en;q=0.9',
  connection: 'keep-alive',
  host: 'localhost:3000',
  sec-ch-ua: '"Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"',
  sec-ch-ua-mobile: '?0',
  sec-ch-ua-platform: '"macOS"',
  sec-fetch-dest: 'document',
  sec-fetch-mode: 'navigate',
  sec-fetch-site: 'none',
  sec-fetch-user: '?1',
  upgrade-insecure-requests: '1',
  user-agent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36',
  x-forwarded-for: '::1',
  x-forwarded-host: 'localhost:3000',
  x-forwarded-port: '3000',
  x-forwarded-proto: 'http'
},
  integrity: '',
  keepalive: false,
  method: 'GET',
  mode: 'cors',
  redirect: 'follow',
  referrer: 'about:client',
  referrerPolicy: '',
  signal: AbortSignal {
  [Symbol(kEvents)]: SafeMap(0) {},
  [Symbol(events.maxEventTargetListeners)]: 0,
  [Symbol(events.maxEventTargetListenersWarned)]: false,
  [Symbol(kHandlers)]: SafeMap(0) {},
  [Symbol(kAborted)]: false,
  [Symbol(kReason)]: undefined,
  [Symbol(kComposite)]: false
}
},
  [Function]
] 
* Arguments end *
* Proxying function: getDocsDomainEdge *
* Arguments start *
 [
  {
  cookies: RequestCookies {},
  nextUrl: {
  href: 'http://localhost:3000/',
  origin: 'http://localhost:3000',
  protocol: 'http:',
  username: '',
  password: '',
  host: 'localhost:3000',
  hostname: 'localhost',
  port: '3000',
  pathname: '/',
  search: '',
  searchParams: URLSearchParams {  },
  hash: ''
},
  url: 'http://localhost:3000/',
  bodyUsed: false,
  cache: 'default',
  credentials: 'same-origin',
  destination: '',
  headers: {
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  accept-encoding: 'gzip, deflate, br, zstd',
  accept-language: 'en-US,en;q=0.9',
  connection: 'keep-alive',
  host: 'localhost:3000',
  sec-ch-ua: '"Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"',
  sec-ch-ua-mobile: '?0',
  sec-ch-ua-platform: '"macOS"',
  sec-fetch-dest: 'document',
  sec-fetch-mode: 'navigate',
  sec-fetch-site: 'none',
  sec-fetch-user: '?1',
  upgrade-insecure-requests: '1',
  user-agent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36',
  x-forwarded-for: '::1',
  x-forwarded-host: 'localhost:3000',
  x-forwarded-port: '3000',
  x-forwarded-proto: 'http'
},
  integrity: '',
  keepalive: false,
  method: 'GET',
  mode: 'cors',
  redirect: 'follow',
  referrer: 'about:client',
  referrerPolicy: '',
  signal: AbortSignal {
  [Symbol(kEvents)]: SafeMap(0) {},
  [Symbol(events.maxEventTargetListeners)]: 0,
  [Symbol(events.maxEventTargetListenersWarned)]: false,
  [Symbol(kHandlers)]: SafeMap(0) {},
  [Symbol(kAborted)]: false,
  [Symbol(kReason)]: undefined,
  [Symbol(kComposite)]: false
}
}
] 
* Arguments end *
** Proxy result: skyflow.docs.buildwithfern.com

* Proxying function: createGetAuthState *
* Arguments start *
 [
  'localhost:3000',
  'skyflow.docs.buildwithfern.com',
  undefined,
  undefined,
  undefined,
  [Function]
] 
* Arguments end *
* Proxying function: getAuthStateInternal *
* Arguments start *
 [
  {
  fernToken: undefined,
  authConfig: { type: 'sso', partner: 'workos', organization: 'skyflow' },
  setFernToken: [Function],
  previewAuthConfig: undefined,
  domain: 'skyflow.docs.buildwithfern.com',
  host: 'localhost:3000'
}
] 
* Arguments end *
went through workos path
** Proxy result: (pathname)=>(0,_debug_utils__WEBPACK_IMPORTED_MODULE_1__.proxyF)(_workos_handler__WEBPACK_IMPORTED_MODULE_2__.handleWorkosAuth)({
                host,
                domain,
                fernToken,
                organization: authConfig.organization,
                pathname,
                setFernToken,
                authorizationUrl: {
                    connection: authConfig.connection,
                    provider: authConfig.provider,
                    domainHint: authConfig.domainHint,
                    loginHint: authConfig.loginHint
                }
            })

** Proxy result: [object Object]

** Proxy result: [object Object]

* Proxying function:  *
* Arguments start *
 [ '/' ] 
* Arguments end *
* Proxying function: handleWorkosAuth *
* Arguments start *
 [
  {
  host: 'localhost:3000',
  domain: 'skyflow.docs.buildwithfern.com',
  fernToken: undefined,
  organization: 'skyflow',
  pathname: '/',
  setFernToken: [Function],
  authorizationUrl: {
  connection: undefined,
  provider: undefined,
  domainHint: undefined,
  loginHint: undefined
}
}
] 
* Arguments end *
* Proxying function: preferPreview *
* Arguments start *
 [ 'localhost:3000', 'skyflow.docs.buildwithfern.com' ] 
* Arguments end *
** Proxy result: localhost:3000