// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should serialize announcement 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = void 0;
  function _createMdxContent(props) {
    const _components = {
      a: "a",
      p: "p",
      ...useMDXComponents(),
      ...props.components
    };
    return (0, import_jsx_runtime.jsxs)(_components.p, {
      children: ["\\u{1F680} Vapi now provides server SDKs! Check out the ", (0, import_jsx_runtime.jsx)(_components.a, {
        href: "/server-sdks",
        children: "supported languages"
      }), "."]
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize cards.mdx 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    Aside: () => Aside,
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = {
    "title": "Cards",
    "description": "Use cards to display content in a box"
  };
  function AsideComponent() {
    const { ErrorBoundary, CodeGroup, CodeBlock } = MdxJsReact.useMDXComponents();
    return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, {
      children: (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsxs)(CodeGroup, {
          children: [(0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(CodeBlock, {
              title: "Basic",
              code: \`<Card
  title="Python"
  icon="brands python"
  href="https://github.com/fern-api/fern/tree/main/generators/python"
>
  View Fern's Python SDK generator.
</Card>
\`,
              language: "jsx",
              className: "language-jsx"
            })
          }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(CodeBlock, {
              title: "Custom Icon",
              code: \`<Card
  title="Python"
  icon={
    <img
      src="https://upload.wikimedia.org/wikipedia/commons/c/c3/Python-logo-notext.svg"
      alt="Python logo"
    />
  }
  href="https://github.com/fern-api/fern/tree/main/generators/python"
>
  View Fern's Python SDK generator.
</Card>
\`,
              language: "jsx",
              className: "language-jsx"
            })
          }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(CodeBlock, {
              title: "Icon Position",
              code: '<Card title="Location" icon="regular globe" iconPosition="left">\\n  You can set the icon position as \`left\` or \`top\`. Default is \`top\`.\\n</Card>\\n',
              language: "jsx",
              className: "language-jsx"
            })
          })]
        })
      })
    });
  }
  var Aside = AsideComponent;
  function _createMdxContent(props) {
    const _components = {
      a: "a",
      code: "code",
      h2: "h2",
      h3: "h3",
      img: "img",
      p: "p",
      table: "table",
      tbody: "tbody",
      td: "td",
      th: "th",
      thead: "thead",
      tr: "tr",
      ...useMDXComponents(),
      ...props.components
    }, { Card, CardGroup, ErrorBoundary } = _components;
    if (!Card) _missingMdxReference("Card", true);
    if (!CardGroup) _missingMdxReference("CardGroup", true);
    if (!ErrorBoundary) _missingMdxReference("ErrorBoundary", true);
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsx)(_components.p, {
        children: "Cards are container components that group related content and actions together. They provide a flexible way to present information with optional elements like icons, titles, and links in a visually distinct box."
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h2, {
        id: "properties",
        children: "Properties"
      }), "\\n", (0, import_jsx_runtime.jsxs)(_components.table, {
        children: [(0, import_jsx_runtime.jsx)(_components.thead, {
          children: (0, import_jsx_runtime.jsxs)(_components.tr, {
            children: [(0, import_jsx_runtime.jsx)(_components.th, {
              children: "Property"
            }), (0, import_jsx_runtime.jsx)(_components.th, {
              children: "Type"
            }), (0, import_jsx_runtime.jsx)(_components.th, {
              children: "Description"
            })]
          })
        }), (0, import_jsx_runtime.jsxs)(_components.tbody, {
          children: [(0, import_jsx_runtime.jsxs)(_components.tr, {
            children: [(0, import_jsx_runtime.jsx)(_components.td, {
              children: (0, import_jsx_runtime.jsx)(_components.code, {
                children: "title"
              })
            }), (0, import_jsx_runtime.jsx)(_components.td, {
              children: (0, import_jsx_runtime.jsx)(_components.code, {
                children: "string"
              })
            }), (0, import_jsx_runtime.jsx)(_components.td, {
              children: "The title text to display in the card"
            })]
          }), (0, import_jsx_runtime.jsxs)(_components.tr, {
            children: [(0, import_jsx_runtime.jsx)(_components.td, {
              children: (0, import_jsx_runtime.jsx)(_components.code, {
                children: "icon"
              })
            }), (0, import_jsx_runtime.jsx)(_components.td, {
              children: (0, import_jsx_runtime.jsx)(_components.code, {
                children: "string | img"
              })
            }), (0, import_jsx_runtime.jsxs)(_components.td, {
              children: ["Either a ", (0, import_jsx_runtime.jsx)(_components.a, {
                href: "https://fontawesome.com/icons",
                children: "Font Awesome"
              }), " icon class (e.g. \\u2018brands python\\u2019) or a custom image"]
            })]
          }), (0, import_jsx_runtime.jsxs)(_components.tr, {
            children: [(0, import_jsx_runtime.jsx)(_components.td, {
              children: (0, import_jsx_runtime.jsx)(_components.code, {
                children: "href"
              })
            }), (0, import_jsx_runtime.jsx)(_components.td, {
              children: (0, import_jsx_runtime.jsx)(_components.code, {
                children: "string"
              })
            }), (0, import_jsx_runtime.jsx)(_components.td, {
              children: "Optional URL that makes the entire card clickable"
            })]
          })]
        })]
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h3, {
        id: "basic",
        children: "Basic"
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CardGroup, {
          children: (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(Card, {
              title: "Python",
              icon: "brands python",
              href: "https://github.com/fern-api/fern/tree/main/generators/python",
              id: "python",
              children: (0, import_jsx_runtime.jsx)(_components.p, {
                children: "The icon field references a Font Awesome icon."
              })
            })
          })
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h3, {
        id: "custom-icon",
        children: "Custom icon"
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CardGroup, {
          children: (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(Card, {
              title: "Python",
              icon: (0, import_jsx_runtime.jsx)(_components.img, {
                src: "https://upload.wikimedia.org/wikipedia/commons/c/c3/Python-logo-notext.svg",
                alt: "Python logo"
              }),
              href: "https://github.com/fern-api/fern/tree/main/generators/python",
              id: "python-1",
              children: (0, import_jsx_runtime.jsx)(_components.p, {
                children: "Pass in an image tag to use a custom icon."
              })
            })
          })
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h3, {
        id: "icon-position",
        children: "Icon position"
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CardGroup, {
          children: (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(Card, {
              title: "Location",
              icon: "regular globe",
              iconPosition: "left",
              id: "location",
              children: (0, import_jsx_runtime.jsxs)(_components.p, {
                children: ["You can set the icon position as ", (0, import_jsx_runtime.jsx)(_components.code, {
                  children: "left"
                }), " or ", (0, import_jsx_runtime.jsx)(_components.code, {
                  children: "top"
                }), ". Default is ", (0, import_jsx_runtime.jsx)(_components.code, {
                  children: "top"
                }), "."]
              })
            })
          })
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {})]
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  function _missingMdxReference(id, component) {
    throw new Error("Expected " + (component ? "component" : "object") + " \`" + id + "\` to be defined: you likely forgot to import, pass, or provide it.");
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize hume-next-js.mdx 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = {
    "title": "EVI Next.js Quickstart",
    "excerpt": "A quickstart guide for implementing the Empathic Voice Interface (EVI) with Next.js."
  };
  function _createMdxContent(props) {
    const _components = {
      a: "a",
      code: "code",
      li: "li",
      ol: "ol",
      p: "p",
      strong: "strong",
      ...useMDXComponents(),
      ...props.components
    }, { Callout, CodeBlock, ErrorBoundary, Step, StepGroup, Tab, TabGroup } = _components;
    if (!Callout) _missingMdxReference("Callout", true);
    if (!CodeBlock) _missingMdxReference("CodeBlock", true);
    if (!ErrorBoundary) _missingMdxReference("ErrorBoundary", true);
    if (!Step) _missingMdxReference("Step", true);
    if (!StepGroup) _missingMdxReference("StepGroup", true);
    if (!Tab) _missingMdxReference("Tab", true);
    if (!TabGroup) _missingMdxReference("TabGroup", true);
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
        children: ["This guide provides instructions for integrating EVI into your Next.js projects with Hume\\u2019s ", (0, import_jsx_runtime.jsx)(_components.a, {
          href: "https://www.npmjs.com/package/@humeai/voice-react",
          children: "React SDK"
        }), "\\nand includes detailed steps for using EVI with Next.js App Router and Pages Router."]
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(Callout, {
          intent: "info",
          children: (0, import_jsx_runtime.jsxs)(_components.p, {
            children: ["Kickstart your project with our pre-configured ", (0, import_jsx_runtime.jsx)(_components.a, {
              href: "https://vercel.com/templates/next.js/empathic-voice-interface-starter",
              children: "Vercel template for the\\nEmpathic Voice\\nInterface"
            }), ".\\nInstall with one click to instantly set up a ready-to-use project and start\\nbuilding with TypeScript right away!"]
          })
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsxs)(TabGroup, {
          children: [(0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsxs)(Tab, {
              title: "Next.js (App Router)",
              id: "nextjs-app-router",
              children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                children: ["This tutorial utilizes Hume\\u2019s React SDK to interact with EVI. It includes detailed steps for both the\\n", (0, import_jsx_runtime.jsx)(_components.strong, {
                  children: "App Router"
                }), " in Next.js and is broken down into four key components:"]
              }), (0, import_jsx_runtime.jsxs)(_components.ol, {
                children: ["\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "Authentication"
                  }), ": Generate and use an access token to authenticate with EVI."]
                }), "\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "Setting up context provider"
                  }), ": Set up the ", (0, import_jsx_runtime.jsx)(_components.code, {
                    children: "<VoiceProvider/>"
                  }), "."]
                }), "\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "Starting a chat and display messages"
                  }), ": Implement the functionality to start a chat with EVI and display messages."]
                }), "\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "That\\u2019s it!"
                  }), ": Audio playback and interruptions are handled for you."]
                }), "\\n"]
              }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                children: (0, import_jsx_runtime.jsx)(Callout, {
                  intent: "info",
                  children: (0, import_jsx_runtime.jsxs)(_components.p, {
                    children: ["The Hume React SDK abstracts much of the logic for managing the WebSocket connection, as\\nwell as capturing and preparing audio for processing. For a closer look at how the React\\npackage manages these aspects of the integration, we invite you to explore the source code\\nhere: ", (0, import_jsx_runtime.jsx)(_components.a, {
                      href: "https://github.com/HumeAI/empathic-voice-api-js/tree/main/packages/react",
                      children: "@humeai/voice-react"
                    })]
                  })
                })
              }), (0, import_jsx_runtime.jsxs)(_components.p, {
                children: ["To see this code fully implemented within a frontend web application using the App Router from Next.js, visit this GitHub repository:\\n", (0, import_jsx_runtime.jsx)(_components.a, {
                  href: "https://github.com/HumeAI/hume-api-examples/tree/main/evi-next-js-app-router",
                  children: "evi-nextjs-app-router"
                }), "."]
              }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                children: (0, import_jsx_runtime.jsxs)(StepGroup, {
                  children: [(0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsx)(Step, {
                      title: "Prerequisites",
                      id: "prerequisites",
                      children: (0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["Before you begin, you will need to have ", (0, import_jsx_runtime.jsx)(_components.a, {
                          href: "https://nextjs.org/docs/getting-started/installation",
                          children: "an existing Next.js project set up using the App Router"
                        }), "."]
                      })
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Authenticate",
                      id: "authenticate",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["In order to make an authenticated connection we will first need to generate an access token. Doing so will\\nrequire your API key and Secret key. These keys can be obtained by logging into the portal and visiting the\\n", (0, import_jsx_runtime.jsx)(_components.a, {
                          href: "https://platform.hume.ai/settings/keys",
                          children: "API keys page"
                        }), "."]
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(Callout, {
                          intent: "info",
                          children: (0, import_jsx_runtime.jsx)(_components.p, {
                            children: "In the sample code below, the API key and Secret key have been saved to\\nenvironment variables. Avoid hardcoding these values in your project to\\nprevent them from being leaked."
                          })
                        })
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
                          title: "React",
                          code: '// ./app/page.tsx\\nimport ClientComponent from "@/components/ClientComponent";\\nimport { fetchAccessToken } from "hume";\\n\\nexport default async function Page() {\\n  const accessToken = await fetchAccessToken({\\n    apiKey: String(process.env.HUME_API_KEY),\\n    secretKey: String(process.env.HUME_SECRET_KEY),\\n  });\\n\\n  if (!accessToken) {\\n    throw new Error();\\n  }\\n\\n  return <ClientComponent accessToken={accessToken} />;\\n}\\n',
                          language: "tsx",
                          className: "language-tsx"
                        })
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Setup Context Provider",
                      id: "setup-context-provider",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["After fetching our access token we can pass it to our ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "ClientComponent"
                        }), ". First we set up the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "<VoiceProvider/>"
                        }), " so that our ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "Messages"
                        }), " and ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "Controls"
                        }), " components can access the context. We also pass the access token to the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "auth"
                        }), " prop of the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "<VoiceProvider/>"
                        }), " for setting up the WebSocket connection."]
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
                          title: "TypeScript",
                          code: '// ./components/ClientComponent.tsx\\n"use client";\\nimport { VoiceProvider } from "@humeai/voice-react";\\nimport Messages from "./Messages";\\nimport Controls from "./Controls";\\n\\nexport default function ClientComponent({\\n  accessToken,\\n}: {\\n  accessToken: string;\\n}) {\\n  return (\\n    <VoiceProvider auth={{ type: "accessToken", value: accessToken }}>\\n      <Messages />\\n      <Controls />\\n    </VoiceProvider>\\n  );\\n}\\n',
                          language: "tsx",
                          className: "language-tsx"
                        })
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsx)(Step, {
                      title: "Audio input",
                      id: "audio-input",
                      children: (0, import_jsx_runtime.jsxs)(_components.p, {
                        children: [(0, import_jsx_runtime.jsx)(_components.code, {
                          children: "<VoiceProvider/>"
                        }), " will handle the microphone and playback logic."]
                      })
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Starting session",
                      id: "starting-session",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["In order to start a session, you can use the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "connect"
                        }), " function. It is important that this event is attached to a user interaction event (like a click) so that the browser is capable of playing Audio."]
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
                          title: "TypeScript",
                          code: '// ./components/Controls.tsx\\n"use client";\\nimport { useVoice, VoiceReadyState } from "@humeai/voice-react";\\nexport default function Controls() {\\n  const { connect, disconnect, readyState } = useVoice();\\n\\n  if (readyState === VoiceReadyState.OPEN) {\\n    return (\\n      <button\\n        onClick={() => {\\n          disconnect();\\n        }}\\n      >\\n        End Session\\n      </button>\\n    );\\n  }\\n\\n  return (\\n    <button\\n      onClick={() => {\\n        connect()\\n          .then(() => {\\n            /* handle success */\\n          })\\n          .catch(() => {\\n            /* handle error */\\n          });\\n      }}\\n    >\\n      Start Session\\n    </button>\\n  );\\n}\\n',
                          language: "tsx",
                          className: "language-tsx"
                        })
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Displaying message history",
                      id: "displaying-message-history",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["To display the message history, we can use the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "useVoice"
                        }), " hook to access the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "messages"
                        }), " array. We can then map over the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "messages"
                        }), " array to display the role (", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "Assistant"
                        }), " or ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "User"
                        }), ") and content of each message."]
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
                          title: "TypeScript",
                          code: '// ./components/Messages.tsx\\n"use client";\\nimport { useVoice } from "@humeai/voice-react";\\n\\nexport default function Messages() {\\n  const { messages } = useVoice();\\n\\n  return (\\n    <div>\\n      {messages.map((msg, index) => {\\n        if (msg.type === "user_message" || msg.type === "assistant_message") {\\n          return (\\n            <div key={msg.type + index}>\\n              <div>{msg.message.role}</div>\\n              <div>{msg.message.content}</div>\\n            </div>\\n          );\\n        }\\n\\n        return null;\\n      })}\\n    </div>\\n  );\\n}\\n',
                          language: "tsx",
                          className: "language-tsx"
                        })
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsx)(Step, {
                      title: "Interrupt",
                      id: "interrupt",
                      children: (0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["This ", (0, import_jsx_runtime.jsx)(_components.a, {
                          href: "https://github.com/HumeAI/hume-api-examples/tree/main/evi-next-js-app-router",
                          children: "Next.js example"
                        }), " will handle interruption events automatically!"]
                      })
                    })
                  })]
                })
              })]
            })
          }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsxs)(Tab, {
              title: "Next.js (Pages Router)",
              id: "nextjs-pages-router",
              children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                children: ["This tutorial utilizes Hume\\u2019s React SDK to interact with EVI. It includes detailed steps for both the\\n", (0, import_jsx_runtime.jsx)(_components.strong, {
                  children: "Pages Router"
                }), " in Next.js and is broken down into four key components:"]
              }), (0, import_jsx_runtime.jsxs)(_components.ol, {
                children: ["\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "Authentication"
                  }), ": Generate and use an access token to authenticate with EVI."]
                }), "\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "Setting up context provider"
                  }), ": Set up the ", (0, import_jsx_runtime.jsx)(_components.code, {
                    children: "<VoiceProvider/>"
                  }), "."]
                }), "\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "Starting a chat and display messages"
                  }), ": Implement the functionality to start a chat with EVI and display messages."]
                }), "\\n", (0, import_jsx_runtime.jsxs)(_components.li, {
                  children: [(0, import_jsx_runtime.jsx)(_components.strong, {
                    children: "That\\u2019s it!"
                  }), ": Audio playback and interruptions are handled for you."]
                }), "\\n"]
              }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                children: (0, import_jsx_runtime.jsx)(Callout, {
                  intent: "info",
                  children: (0, import_jsx_runtime.jsxs)(_components.p, {
                    children: ["The Hume React SDK abstracts much of the logic for managing the WebSocket connection, as\\nwell as capturing and preparing audio for processing. For a closer look at how the React\\npackage manages these aspects of the integration, we invite you to explore the source code\\nhere: ", (0, import_jsx_runtime.jsx)(_components.a, {
                      href: "https://github.com/HumeAI/empathic-voice-api-js/tree/main/packages/react",
                      children: "@humeai/voice-react"
                    })]
                  })
                })
              }), (0, import_jsx_runtime.jsxs)(_components.p, {
                children: ["To see this code fully implemented within a frontend web application using the Pages Router from Next.js, visit this GitHub repository: ", (0, import_jsx_runtime.jsx)(_components.a, {
                  href: "https://github.com/HumeAI/hume-api-examples/tree/main/evi-next-js-pages-router",
                  children: "evi-nextjs-pages-router"
                }), "."]
              }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                children: (0, import_jsx_runtime.jsxs)(StepGroup, {
                  children: [(0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsx)(Step, {
                      title: "Prerequisites",
                      id: "prerequisites-1",
                      children: (0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["Before you begin, you will need to have ", (0, import_jsx_runtime.jsx)(_components.a, {
                          href: "https://nextjs.org/docs/getting-started/installation",
                          children: "an existing Next.js project set up using the Pages Router"
                        }), "."]
                      })
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Authenticate and Setup Context Provider",
                      id: "authenticate-and-setup-context-provider",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["In order to make an authenticated connection we will first need to generate an access token. Doing so will\\nrequire your API key and Secret key. These keys can be obtained by logging into the portal and visiting the\\n", (0, import_jsx_runtime.jsx)(_components.a, {
                          href: "https://platform.hume.ai/settings/keys",
                          children: "API keys page"
                        }), "."]
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(Callout, {
                          intent: "info",
                          children: (0, import_jsx_runtime.jsx)(_components.p, {
                            children: "In the sample code below, the API key and Secret key have been saved to\\nenvironment variables. Avoid hardcoding these values in your project to\\nprevent them from being leaked."
                          })
                        })
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
                          title: "React",
                          code: '// ./pages/index.tsx\\nimport Controls from "@/components/Controls";\\nimport Messages from "@/components/Messages";\\nimport { fetchAccessToken } from "hume";\\nimport { VoiceProvider } from "@humeai/voice-react";\\nimport { InferGetServerSidePropsType } from "next";\\n\\nexport const getServerSideProps = async () => {\\n  const accessToken = await fetchAccessToken({\\n    apiKey: String(process.env.HUME_API_KEY),\\n    secretKey: String(process.env.HUME_SECRET_KEY),\\n  });\\n\\n  if (!accessToken) {\\n    return {\\n      redirect: {\\n        destination: "/error",\\n        permanent: false,\\n      },\\n    };\\n  }\\n\\n  return {\\n    props: {\\n      accessToken,\\n    },\\n  };\\n};\\n\\ntype PageProps = InferGetServerSidePropsType<typeof getServerSideProps>;\\n\\nexport default function Page({ accessToken }: PageProps) {\\n  return (\\n    <VoiceProvider auth={{ type: "accessToken", value: accessToken }}>\\n      <Messages />\\n      <Controls />\\n    </VoiceProvider>\\n  );\\n}\\n',
                          language: "tsx",
                          className: "language-tsx"
                        })
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Audio input",
                      id: "audio-input-1",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: [(0, import_jsx_runtime.jsx)(_components.code, {
                          children: "<VoiceProvider/>"
                        }), " is designed to manage microphone inputs and audio playback. It abstracts the complexities of audio processing to allow developers to focus on developing interactive voice-driven functionalities."]
                      }), (0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["For a closer look at how ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "<VoiceProvider/>"
                        }), " processes audio inputs and controls playback, you can view the source code ", (0, import_jsx_runtime.jsx)(_components.a, {
                          href: "https://github.com/HumeAI/empathic-voice-api-js/blob/main/packages/react/src/lib/VoiceProvider.tsx",
                          children: "here"
                        }), "."]
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Starting session",
                      id: "starting-session-1",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["In order to start a session, you can use the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "connect"
                        }), " function. It is important that this event is attached to a user interaction event (like a click) so that the browser is capable of playing Audio."]
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
                          title: "TypeScript",
                          code: '// ./components/Controls.tsx\\nimport { useVoice, VoiceReadyState } from "@humeai/voice-react";\\nexport default function Controls() {\\n  const { connect, disconnect, readyState } = useVoice();\\n\\n  if (readyState === VoiceReadyState.OPEN) {\\n    return (\\n      <button\\n        onClick={() => {\\n          disconnect();\\n        }}\\n      >\\n        End Session\\n      </button>\\n    );\\n  }\\n\\n  return (\\n    <button\\n      onClick={() => {\\n        connect()\\n          .then(() => {\\n            /* handle success */\\n          })\\n          .catch(() => {\\n            /* handle error */\\n          });\\n      }}\\n    >\\n      Start Session\\n    </button>\\n  );\\n}\\n',
                          language: "tsx",
                          className: "language-tsx"
                        })
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsxs)(Step, {
                      title: "Displaying message history",
                      id: "displaying-message-history-1",
                      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["To display the message history, we can use the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "useVoice"
                        }), " hook to access the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "messages"
                        }), " array. We can then map over the ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "messages"
                        }), " array to display the role (", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "Assistant"
                        }), " or ", (0, import_jsx_runtime.jsx)(_components.code, {
                          children: "User"
                        }), ") and content of each message."]
                      }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
                          title: "TypeScript",
                          code: '// ./components/Messages.tsx\\nimport { useVoice } from "@humeai/voice-react";\\n\\nexport default function Messages() {\\n  const { messages } = useVoice();\\n\\n  return (\\n    <div>\\n      {messages.map((msg, index) => {\\n        if (msg.type === "user_message" || msg.type === "assistant_message") {\\n          return (\\n            <div key={msg.type + index}>\\n              <div>{msg.message.role}</div>\\n              <div>{msg.message.content}</div>\\n            </div>\\n          );\\n        }\\n\\n        return null;\\n      })}\\n    </div>\\n  );\\n}\\n',
                          language: "tsx",
                          className: "language-tsx"
                        })
                      })]
                    })
                  }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
                    children: (0, import_jsx_runtime.jsx)(Step, {
                      title: "Interrupt",
                      id: "interrupt-1",
                      children: (0, import_jsx_runtime.jsxs)(_components.p, {
                        children: ["This ", (0, import_jsx_runtime.jsx)(_components.a, {
                          href: "https://github.com/HumeAI/hume-api-examples/tree/main/evi-next-js-app-router",
                          children: "Next.js example"
                        }), " will handle interruption events automatically!"]
                      })
                    })
                  })]
                })
              })]
            })
          })]
        })
      })]
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  function _missingMdxReference(id, component) {
    throw new Error("Expected " + (component ? "component" : "object") + " \`" + id + "\` to be defined: you likely forgot to import, pass, or provide it.");
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize jsx 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = void 0;
  function _createMdxContent(props) {
    const { Button, ErrorBoundary } = {
      ...useMDXComponents(),
      ...props.components
    };
    if (!Button) _missingMdxReference("Button", true);
    if (!ErrorBoundary) _missingMdxReference("ErrorBoundary", true);
    return (0, import_jsx_runtime.jsx)(ErrorBoundary, {
      children: (0, import_jsx_runtime.jsx)(Button, {
        children: "Hello world!"
      })
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  function _missingMdxReference(id, component) {
    throw new Error("Expected " + (component ? "component" : "object") + " \`" + id + "\` to be defined: you likely forgot to import, pass, or provide it.");
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize markdown 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = void 0;
  function _createMdxContent(props) {
    const _components = {
      p: "p",
      ...useMDXComponents(),
      ...props.components
    };
    return (0, import_jsx_runtime.jsx)(_components.p, {
      children: "These are the costs of individual components of the call in USD."
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize mdx 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = void 0;
  function _createMdxContent(props) {
    const _components = {
      h3: "h3",
      ...useMDXComponents(),
      ...props.components
    };
    return (0, import_jsx_runtime.jsx)(_components.h3, {
      id: "hello-world",
      children: "Hello world!"
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize mdx with frontmatter 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = {
    "title": "Hello world!"
  };
  function _createMdxContent(props) {
    const _components = {
      h3: "h3",
      ...useMDXComponents(),
      ...props.components
    };
    return (0, import_jsx_runtime.jsx)(_components.h3, {
      id: "hello-world",
      children: "Hello world!"
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize mdx with toc 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter,
    toc: () => toc
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var toc = [{
    "simpleString": "Subheading",
    "anchorString": "subheading",
    "children": [{
      "simpleString": "Subsubheading",
      "anchorString": "subsubheading",
      "children": []
    }]
  }];
  var frontmatter = {
    "title": "Hello world!"
  };
  function _createMdxContent(props) {
    const _components = {
      h2: "h2",
      h3: "h3",
      ...useMDXComponents(),
      ...props.components
    };
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsx)(_components.h2, {
        id: "subheading",
        children: "Subheading"
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h3, {
        id: "subsubheading",
        children: "Subsubheading"
      })]
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize servers.mdx 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = {
    "title": "Servers",
    "description": "Configure server URLs and environments to help users connect to your API.",
    "subtitle": "Define server URLs and environments to help users connect to your API."
  };
  function _createMdxContent(props) {
    const _components = {
      a: "a",
      code: "code",
      h2: "h2",
      li: "li",
      p: "p",
      ul: "ul",
      ...useMDXComponents(),
      ...props.components
    }, { CodeBlock, ErrorBoundary, Info } = _components;
    if (!CodeBlock) _missingMdxReference("CodeBlock", true);
    if (!ErrorBoundary) _missingMdxReference("ErrorBoundary", true);
    if (!Info) _missingMdxReference("Info", true);
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsxs)(_components.p, {
        children: ["OpenAPI allows you to specify one or more base URLs under the ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "servers"
        }), " key."]
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
          code: "servers:\\n  - url: https://api.yourcompany.com/\\n  - url: https://api.eu.yourcompany.com/\\n",
          language: "yml",
          className: "language-yml",
          title: "openapi.yml"
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.p, {
        children: "Specifying servers is valuable for both SDKs and Docs:"
      }), "\\n", (0, import_jsx_runtime.jsxs)(_components.ul, {
        children: ["\\n", (0, import_jsx_runtime.jsx)(_components.li, {
          children: "For SDKs, your users won\\u2019t need to manually specify the baseURL at client instantiation"
        }), "\\n", (0, import_jsx_runtime.jsx)(_components.li, {
          children: "For Docs, your API playground will automatically hit the correct server"
        }), "\\n"]
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h2, {
        id: "naming-your-servers",
        children: "Naming your servers"
      }), "\\n", (0, import_jsx_runtime.jsxs)(_components.p, {
        children: ["If you have more than one server, we recommend specifying an ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "x-fern-server-name"
        }), " to name\\nthe server."]
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
          code: "servers:\\n  - x-fern-server-name: Production\\n    url: https://api.yourcompany.com/\\n  - x-fern-server-name: Production_EU\\n    url: https://api.eu.yourcompany.com/\\n",
          language: "yml",
          className: "language-yml",
          title: "openapi.yml",
          highlight: [3, 5]
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h2, {
        id: "multiple-base-urls-for-a-single-api",
        children: "Multiple Base URLs for a single API"
      }), "\\n", (0, import_jsx_runtime.jsxs)(_components.p, {
        children: ["If you have a microservice architecture, it is possible that you may have different endpoints hosted\\nat differnt URLs. For example, your AI endpoints might be hosted at ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "ai.yourcompany.com"
        }), " and the rest\\nof your endpoins might be hosted at ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "api.yourcompany.com"
        }), "."]
      }), "\\n", (0, import_jsx_runtime.jsxs)(_components.p, {
        children: ["To specify this, you will need to add configuration to both your ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "generators.yml"
        }), " and OpenAPI spec. The\\nsnippet directly below shows how to configure an environment with multiple urls in your ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "generators.yml"
        }), "."]
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
          code: "api:\\n  default-environment: Production\\n  default-url: api\\n  environments:\\n    Production:\\n      api: api.yourcompany.com\\n      ai: ai.yourcompany.com\\n  specs:\\n    - openapi: ./path/to/your/openapi\\n      overrides: ./path/to/your/overrides # optional\\n",
          language: "yml",
          className: "language-yml",
          title: "generators.yml",
          highlight: [3, 4, 5, 6, 7, 8]
        })
      }), "\\n", (0, import_jsx_runtime.jsxs)(_components.p, {
        children: ["Once you\\u2019ve specified the environments in your ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "generators.yml"
        }), ", you can use the ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "x-fern-server-name"
        }), "\\nextension to specify which server the operation belongs to."]
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
          code: "paths:\\n  /chat:\\n    post:\\n      x-fern-server-name: ai\\n",
          language: "yml",
          className: "language-yml",
          title: "openapi.yml",
          highlight: 4
        })
      }), "\\n", (0, import_jsx_runtime.jsxs)(_components.p, {
        children: ["If you have multiple environments like development or staging, you can model those in your ", (0, import_jsx_runtime.jsx)(_components.code, {
          children: "generators.yml"
        }), "\\nas well."]
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
          code: "api:\\n  default-environment: Production\\n  default-url: api\\n  environments:\\n    Production:\\n      api: api.yourcompany.com\\n      ai: ai.yourcompany.com\\n    Staging:\\n      api: api.staging.yourcompany.com\\n      ai: ai.staging.yourcompany.com\\n    Dev:\\n      api: api.dev.yourcompany.com\\n      ai: ai.dev.yourcompany.com\\n",
          language: "yml",
          className: "language-yml",
          title: "generators.yml",
          highlight: [7, 8, 9, 10, 11, 12]
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(Info, {
          children: (0, import_jsx_runtime.jsxs)(_components.p, {
            children: ["To see an example of this in production, check out the Chariot\\n", (0, import_jsx_runtime.jsx)(_components.a, {
              href: "https://github.com/chariot-giving/chariot-openapi/blob/main/fern/generators.yml",
              children: "generators.yml"
            })]
          })
        })
      })]
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  function _missingMdxReference(id, component) {
    throw new Error("Expected " + (component ? "component" : "object") + " \`" + id + "\` to be defined: you likely forgot to import, pass, or provide it.");
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;

exports[`should serialize tabs.mdx 1`] = `
"var Component = (() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // global-externals:react/jsx-runtime
  var require_jsx_runtime = __commonJS({
    "global-externals:react/jsx-runtime"(exports, module) {
      module.exports = _jsx_runtime;
    }
  });

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var mdx_bundler_entry_point__random_uuid__exports = {};
  __export(mdx_bundler_entry_point__random_uuid__exports, {
    Aside: () => Aside,
    default: () => MDXContent,
    frontmatter: () => frontmatter
  });
  var import_jsx_runtime = __toESM(require_jsx_runtime());

  // global-externals:@mdx-js/react
  var { useMDXComponents } = MdxJsReact;

  // _mdx_bundler_entry_point-_random_uuid_.mdx
  var frontmatter = {
    "title": "Tabs",
    "description": "The Tabs component allows you to display related content in a tabbed view."
  };
  function AsideComponent() {
    const { ErrorBoundary, CodeBlock } = MdxJsReact.useMDXComponents();
    return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, {
      children: (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(CodeBlock, {
          title: "Markdown",
          code: \`<Tabs>
  <Tab title="First Tab">
    \\u261D\\uFE0F Welcome to the content that you can only see inside the first Tab.
  </Tab>
  <Tab title="Second Tab">
    \\u270C\\uFE0F Here's content that's only inside the second Tab.
  </Tab>
  <Tab title="Third Tab">
    \\u{1F4AA} Here's content that's only inside the third Tab.
  </Tab>
</Tabs>
\`,
          language: "jsx",
          className: "language-jsx"
        })
      })
    });
  }
  var Aside = AsideComponent;
  function _createMdxContent(props) {
    const _components = {
      h2: "h2",
      p: "p",
      ...useMDXComponents(),
      ...props.components
    }, { ErrorBoundary, ParamField, Tab, TabGroup } = _components;
    if (!ErrorBoundary) _missingMdxReference("ErrorBoundary", true);
    if (!ParamField) _missingMdxReference("ParamField", true);
    if (!Tab) _missingMdxReference("Tab", true);
    if (!TabGroup) _missingMdxReference("TabGroup", true);
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
      children: [(0, import_jsx_runtime.jsx)(_components.p, {
        children: "The Tabs component organizes content into separate tabs that users can switch between. Each tab can contain different types of content like examples or code snippets."
      }), "\\n", (0, import_jsx_runtime.jsx)(_components.h2, {
        id: "properties",
        children: "Properties"
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(ParamField, {
          path: "title",
          type: "string",
          required: true,
          children: (0, import_jsx_runtime.jsx)(_components.p, {
            children: "The title displayed in the tab header"
          })
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(ParamField, {
          path: "language",
          type: "string",
          required: false,
          children: (0, import_jsx_runtime.jsx)(_components.p, {
            children: "The language associated with the code block. Any arbitrary string may be used.\\nWhen a user selects a tab with a specific language, all other tabs assigned to\\nthe same language will automatically sync and switch to match."
          })
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)(ParamField, {
          path: "children",
          type: "string | JSX",
          required: true,
          children: (0, import_jsx_runtime.jsx)(_components.p, {
            children: "The content to be displayed when the tab is selected. Can include text,\\nmarkdown, and components."
          })
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsx)("br", {})
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {
        children: (0, import_jsx_runtime.jsxs)(TabGroup, {
          children: [(0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(Tab, {
              title: "First Tab",
              id: "first-tab",
              children: (0, import_jsx_runtime.jsx)(_components.p, {
                children: "\\u261D\\uFE0F Welcome to the content that you can only see inside the first Tab."
              })
            })
          }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(Tab, {
              title: "Second Tab",
              id: "second-tab",
              children: (0, import_jsx_runtime.jsx)(_components.p, {
                children: "\\u270C\\uFE0F Here\\u2019s content that\\u2019s only inside the second Tab."
              })
            })
          }), (0, import_jsx_runtime.jsx)(ErrorBoundary, {
            children: (0, import_jsx_runtime.jsx)(Tab, {
              title: "Third Tab",
              id: "third-tab",
              children: (0, import_jsx_runtime.jsx)(_components.p, {
                children: "\\u{1F4AA} Here\\u2019s content that\\u2019s only inside the third Tab."
              })
            })
          })]
        })
      }), "\\n", (0, import_jsx_runtime.jsx)(ErrorBoundary, {})]
    });
  }
  function MDXContent(props = {}) {
    const { wrapper: MDXLayout } = {
      ...useMDXComponents(),
      ...props.components
    };
    return MDXLayout ? (0, import_jsx_runtime.jsx)(MDXLayout, {
      ...props,
      children: (0, import_jsx_runtime.jsx)(_createMdxContent, {
        ...props
      })
    }) : _createMdxContent(props);
  }
  function _missingMdxReference(id, component) {
    throw new Error("Expected " + (component ? "component" : "object") + " \`" + id + "\` to be defined: you likely forgot to import, pass, or provide it.");
  }
  return __toCommonJS(mdx_bundler_entry_point__random_uuid__exports);
})();
;return Component;"
`;
