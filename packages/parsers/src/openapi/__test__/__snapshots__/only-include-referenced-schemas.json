{
  "id": "test-uuid-replacement",
  "endpoints": {
    "endpoint_admins.identifyAdmin": {
      "id": "endpoint_admins.identifyAdmin",
      "description": "\nYou can view the currently authorised admin along with the embedded app object (a \"workspace\" in legacy terminology).\n\n> 🚧 Single Sign On\n>\n> If you are building a custom \"Log in with Intercom\" flow for your site, and you call the `/me` endpoint to identify the logged-in user, you should not accept any sign-ins from users with unverified email addresses as it poses a potential impersonation security risk.\n",
      "namespace": [
        "Admins"
      ],
      "displayName": "Identify an admin",
      "operationId": "identifyAdmin",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "me"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "admin_with_app"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/me",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin",
              "id": "991267390",
              "email": "admin1@email.com",
              "name": "Ciaran1 Lee",
              "email_verified": true,
              "app": {
                "type": "app",
                "id_code": "this_is_an_id1_that_should_be_at_least_40",
                "name": "MyApp 1",
                "created_at": 1719492696,
                "secure": false,
                "identity_verification": false,
                "timezone": "America/Los_Angeles",
                "region": "US"
              },
              "avatar": {
                "type": "avatar",
                "image_url": "https://static.intercomassets.com/assets/default-avatars/admins/128.png"
              },
              "has_inbox_seat": true
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_admins.setAwayAdmin": {
      "id": "endpoint_admins.setAwayAdmin",
      "description": "You can set an Admin as away for the Inbox.",
      "namespace": [
        "Admins"
      ],
      "displayName": "Set an admin to away",
      "operationId": "setAwayAdmin",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "admins"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "away"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier of a given admin"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "away_mode_enabled",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                },
                "description": "Set to \"true\" to change the status of the admin to away."
              },
              {
                "key": "away_mode_reassign",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "description": "Set to \"true\" to assign any new conversation replies to your default inbox."
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "admin"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Admin not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Admin Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "admin_not_found",
                      "message": "Admin for admin_id not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/admins/0/away",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "pathParameters": {
            "id": 0
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "away_mode_enabled": true,
              "away_mode_reassign": true
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin",
              "id": "991267391",
              "name": "Ciaran2 Lee",
              "email": "admin2@email.com",
              "away_mode_enabled": true,
              "away_mode_reassign": true,
              "has_inbox_seat": true,
              "team_ids": []
            }
          }
        },
        {
          "path": "/admins/0/away",
          "responseStatusCode": 200,
          "name": "Admin Not Found",
          "pathParameters": {
            "id": 0
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "away_mode_enabled": true,
              "away_mode_reassign": true
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin",
              "id": "991267391",
              "name": "Ciaran2 Lee",
              "email": "admin2@email.com",
              "away_mode_enabled": true,
              "away_mode_reassign": true,
              "has_inbox_seat": true,
              "team_ids": []
            }
          }
        },
        {
          "path": "/admins/0/away",
          "responseStatusCode": 200,
          "name": "Unauthorized",
          "pathParameters": {
            "id": 0
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "away_mode_enabled": true,
              "away_mode_reassign": true
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin",
              "id": "991267391",
              "name": "Ciaran2 Lee",
              "email": "admin2@email.com",
              "away_mode_enabled": true,
              "away_mode_reassign": true,
              "has_inbox_seat": true,
              "team_ids": []
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_admins.listActivityLogs": {
      "id": "endpoint_admins.listActivityLogs",
      "description": "You can get a log of activities by all admins in an app.",
      "namespace": [
        "Admins"
      ],
      "displayName": "List all activity logs",
      "operationId": "listActivityLogs",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "admins"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "activity_logs"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "created_at_after",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The start date that you request data for. It must be formatted as a UNIX timestamp."
        },
        {
          "key": "created_at_before",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The end date that you request data for. It must be formatted as a UNIX timestamp."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "activity_log_list"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/admins/activity_logs",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "queryParameters": {
            "created_at_after": "1677253093",
            "created_at_before": "1677861493"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "activity_log.list",
              "pages": {
                "type": "pages",
                "next": null,
                "page": 1,
                "per_page": 20,
                "total_pages": 1
              },
              "activity_logs": [
                {
                  "id": "test-uuid-replacement",
                  "performed_by": {
                    "type": "admin",
                    "id": "991267395",
                    "email": "admin5@email.com",
                    "ip": "127.0.0.1"
                  },
                  "metadata": {
                    "message": {
                      "id": 123,
                      "title": "Initial message title"
                    },
                    "before": "Initial message title",
                    "after": "Eventual message title"
                  },
                  "created_at": 1719492702,
                  "activity_type": "message_state_change",
                  "activity_description": "Ciaran5 Lee changed your Initial message title message from Initial message title to Eventual message title."
                },
                {
                  "id": "test-uuid-replacement",
                  "performed_by": {
                    "type": "admin",
                    "id": "991267395",
                    "email": "admin5@email.com",
                    "ip": "127.0.0.1"
                  },
                  "metadata": {
                    "before": "before",
                    "after": "after"
                  },
                  "created_at": 1719492702,
                  "activity_type": "app_name_change",
                  "activity_description": "Ciaran5 Lee changed your app name from before to after."
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_admins.listAdmins": {
      "id": "endpoint_admins.listAdmins",
      "description": "You can fetch a list of admins for a given workspace.",
      "namespace": [
        "Admins"
      ],
      "displayName": "List all admins",
      "operationId": "listAdmins",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "admins"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "admin_list"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/admins",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin.list",
              "admins": [
                {
                  "type": "admin",
                  "email": "admin7@email.com",
                  "id": "991267397",
                  "name": "Ciaran7 Lee",
                  "away_mode_enabled": false,
                  "away_mode_reassign": false,
                  "has_inbox_seat": true,
                  "team_ids": []
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_admins.retrieveAdmin": {
      "id": "endpoint_admins.retrieveAdmin",
      "description": "You can retrieve the details of a single admin.",
      "namespace": [
        "Admins"
      ],
      "displayName": "Retrieve an admin",
      "operationId": "retrieveAdmin",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "admins"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier of a given admin"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "admin"
            }
          },
          "description": "Admin found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Admin not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Admin Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "admin_not_found",
                      "message": "Admin not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/admins/123",
          "responseStatusCode": 200,
          "name": "Admin Found",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin",
              "id": "991267399",
              "name": "Ciaran9 Lee",
              "email": "admin9@email.com",
              "away_mode_enabled": false,
              "away_mode_reassign": false,
              "has_inbox_seat": true,
              "team_ids": []
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_articles.listArticles": {
      "id": "endpoint_articles.listArticles",
      "description": "You can fetch a list of all articles by making a GET request to `https://api.intercom.io/articles`.\n\n> 📘 How are the articles sorted and ordered?\n>\n> Articles will be returned in descending order on the `updated_at` attribute. This means if you need to iterate through results then we'll show the most recently updated articles first.\n",
      "namespace": [
        "Articles"
      ],
      "displayName": "List all articles",
      "operationId": "listArticles",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "articles"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "article_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/articles",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 25,
                "total_pages": 1
              },
              "total_count": 1,
              "data": [
                {
                  "id": "39",
                  "type": "article",
                  "workspace_id": "this_is_an_id33_that_should_be_at_least_4",
                  "parent_id": 143,
                  "parent_type": "collection",
                  "parent_ids": [],
                  "title": "This is the article title",
                  "description": "",
                  "body": "",
                  "author_id": 991267402,
                  "state": "published",
                  "created_at": 1719492707,
                  "updated_at": 1719492707,
                  "url": "http://help-center.test/myapp-33/en/articles/39-this-is-the-article-title"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_articles.createArticle": {
      "id": "endpoint_articles.createArticle",
      "description": "You can create a new article by making a POST request to `https://api.intercom.io/articles`.",
      "namespace": [
        "Articles"
      ],
      "displayName": "Create an article",
      "operationId": "createArticle",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "articles"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_article_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "article"
            }
          },
          "description": "article created"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Bad Request",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Bad Request",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "author_id must be in the main body or default locale translated_content object"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/articles",
          "responseStatusCode": 200,
          "name": "Article Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "42",
              "type": "article",
              "workspace_id": "this_is_an_id37_that_should_be_at_least_4",
              "parent_id": 145,
              "parent_type": "collection",
              "parent_ids": [],
              "statistics": {
                "type": "article_statistics",
                "views": 0,
                "conversations": 0,
                "reactions": 0,
                "happy_reaction_percentage": 0,
                "neutral_reaction_percentage": 0,
                "sad_reaction_percentage": 0
              },
              "title": "Thanks for everything",
              "description": "Description of the Article",
              "body": "<p class=\"no-margin\">Body of the Article</p>",
              "author_id": 991267407,
              "state": "published",
              "created_at": 1719492710,
              "updated_at": 1719492710,
              "url": "http://help-center.test/myapp-37/en/articles/42-thanks-for-everything"
            }
          }
        },
        {
          "path": "/articles",
          "responseStatusCode": 200,
          "name": "Bad Request",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "42",
              "type": "article",
              "workspace_id": "this_is_an_id37_that_should_be_at_least_4",
              "parent_id": 145,
              "parent_type": "collection",
              "parent_ids": [],
              "statistics": {
                "type": "article_statistics",
                "views": 0,
                "conversations": 0,
                "reactions": 0,
                "happy_reaction_percentage": 0,
                "neutral_reaction_percentage": 0,
                "sad_reaction_percentage": 0
              },
              "title": "Thanks for everything",
              "description": "Description of the Article",
              "body": "<p class=\"no-margin\">Body of the Article</p>",
              "author_id": 991267407,
              "state": "published",
              "created_at": 1719492710,
              "updated_at": 1719492710,
              "url": "http://help-center.test/myapp-37/en/articles/42-thanks-for-everything"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_articles.retrieveArticle": {
      "id": "endpoint_articles.retrieveArticle",
      "description": "You can fetch the details of a single article by making a GET request to `https://api.intercom.io/articles/<id>`.",
      "namespace": [
        "Articles"
      ],
      "displayName": "Retrieve an article",
      "operationId": "retrieveArticle",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "articles"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the article which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "article"
            }
          },
          "description": "Article found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Article not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Article Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/articles/123",
          "responseStatusCode": 200,
          "name": "Article Found",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "45",
              "type": "article",
              "workspace_id": "this_is_an_id43_that_should_be_at_least_4",
              "parent_id": 148,
              "parent_type": "collection",
              "parent_ids": [],
              "statistics": {
                "type": "article_statistics",
                "views": 0,
                "conversations": 0,
                "reactions": 0,
                "happy_reaction_percentage": 0,
                "neutral_reaction_percentage": 0,
                "sad_reaction_percentage": 0
              },
              "title": "This is the article title",
              "description": "",
              "body": "",
              "author_id": 991267412,
              "state": "published",
              "created_at": 1719492712,
              "updated_at": 1719492712,
              "url": "http://help-center.test/myapp-43/en/articles/45-this-is-the-article-title"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_articles.updateArticle": {
      "id": "endpoint_articles.updateArticle",
      "description": "You can update the details of a single article by making a PUT request to `https://api.intercom.io/articles/<id>`.",
      "namespace": [
        "Articles"
      ],
      "displayName": "Update an article",
      "operationId": "updateArticle",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "articles"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the article which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_article_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "article"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Article Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Article Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/articles/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "48",
              "type": "article",
              "workspace_id": "this_is_an_id49_that_should_be_at_least_4",
              "parent_id": 151,
              "parent_type": "collection",
              "parent_ids": [],
              "statistics": {
                "type": "article_statistics",
                "views": 0,
                "conversations": 0,
                "reactions": 0,
                "happy_reaction_percentage": 0,
                "neutral_reaction_percentage": 0,
                "sad_reaction_percentage": 0
              },
              "title": "Christmas is here!",
              "description": "",
              "body": "<p class=\"no-margin\">New gifts in store for the jolly season</p>",
              "author_id": 991267418,
              "state": "published",
              "created_at": 1719492714,
              "updated_at": 1719492714,
              "url": "http://help-center.test/myapp-49/en/articles/48-christmas-is-here"
            }
          }
        },
        {
          "path": "/articles/123",
          "responseStatusCode": 200,
          "name": "Article Not Found",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_articles.deleteArticle": {
      "id": "endpoint_articles.deleteArticle",
      "description": "You can delete a single article by making a DELETE request to `https://api.intercom.io/articles/<id>`.",
      "namespace": [
        "Articles"
      ],
      "displayName": "Delete an article",
      "operationId": "deleteArticle",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "articles"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the article which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "deleted_article_object"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Article Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Article Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/articles/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "51",
              "object": "article",
              "deleted": true
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_articles.searchArticles": {
      "id": "endpoint_articles.searchArticles",
      "description": "You can search for articles by making a GET request to `https://api.intercom.io/articles/search`.",
      "namespace": [
        "Articles"
      ],
      "displayName": "Search for articles",
      "operationId": "searchArticles",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "articles"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "search"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "phrase",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The phrase within your articles to search for."
        },
        {
          "key": "state",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The state of the Articles returned. One of `published`, `draft` or `all`."
        },
        {
          "key": "help_center_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "description": "The ID of the Help Center to search in."
        },
        {
          "key": "highlight",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "description": "Return a highlighted version of the matching content within your articles. Refer to the response schema for more details."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "article_search_response"
            }
          },
          "description": "Search successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/articles/search",
          "responseStatusCode": 200,
          "name": "Search Successful",
          "queryParameters": {
            "phrase": "Getting started",
            "state": "published",
            "help_center_id": 123,
            "highlight": false
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "total_count": 1,
              "data": {
                "articles": [
                  {
                    "id": "55",
                    "type": "article",
                    "workspace_id": "this_is_an_id61_that_should_be_at_least_4",
                    "parent_id": null,
                    "parent_type": null,
                    "parent_ids": [],
                    "title": "Title 1",
                    "description": "",
                    "body": "",
                    "author_id": 991267431,
                    "state": "draft",
                    "created_at": 1719492719,
                    "updated_at": 1719492719,
                    "url": null
                  }
                ],
                "highlights": []
              },
              "pages": {
                "type": "pages",
                "page": 1,
                "total_pages": 1,
                "per_page": 10
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_helpCenter.listAllCollections": {
      "id": "endpoint_helpCenter.listAllCollections",
      "description": "You can fetch a list of all collections by making a GET request to `https://api.intercom.io/help_center/collections`.\n\nCollections will be returned in descending order on the `updated_at` attribute. This means if you need to iterate through results then we'll show the most recently updated collections first.\n",
      "namespace": [
        "Help Center"
      ],
      "displayName": "List all collections",
      "operationId": "listAllCollections",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_center"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "collections"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "collection_list"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/help_center/collections",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "id": "159",
                  "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                  "name": "English collection title",
                  "url": "http://help-center.test/myapp-65/collection-17",
                  "order": 17,
                  "created_at": 1719492720,
                  "updated_at": 1719492720,
                  "description": "english collection description",
                  "icon": "bookmark",
                  "parent_id": null,
                  "help_center_id": 79
                },
                {
                  "id": "160",
                  "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                  "name": "English section title",
                  "url": "http://help-center.test/myapp-65/section-1",
                  "order": 1,
                  "created_at": 1719492720,
                  "updated_at": 1719492720,
                  "description": null,
                  "icon": "bookmark",
                  "parent_id": "159",
                  "help_center_id": null
                }
              ],
              "total_count": 2,
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 20,
                "total_pages": 1
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_helpCenter.createCollection": {
      "id": "endpoint_helpCenter.createCollection",
      "description": "You can create a new collection by making a POST request to `https://api.intercom.io/help_center/collections.`",
      "namespace": [
        "Help Center"
      ],
      "displayName": "Create a collection",
      "operationId": "createCollection",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_center"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "collections"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_collection_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "collection"
            }
          },
          "description": "collection created"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Bad Request",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Bad Request",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "Name is a required parameter."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/help_center/collections",
          "responseStatusCode": 200,
          "name": "Collection Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "165",
              "workspace_id": "this_is_an_id69_that_should_be_at_least_4",
              "name": "Thanks for everything",
              "url": "http://help-center.test/myapp-69/",
              "order": 1,
              "created_at": 1719492721,
              "updated_at": 1719492721,
              "description": "",
              "icon": "book-bookmark",
              "parent_id": null,
              "help_center_id": 81
            }
          }
        },
        {
          "path": "/help_center/collections",
          "responseStatusCode": 200,
          "name": "Bad Request",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "165",
              "workspace_id": "this_is_an_id69_that_should_be_at_least_4",
              "name": "Thanks for everything",
              "url": "http://help-center.test/myapp-69/",
              "order": 1,
              "created_at": 1719492721,
              "updated_at": 1719492721,
              "description": "",
              "icon": "book-bookmark",
              "parent_id": null,
              "help_center_id": 81
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_helpCenter.retrieveCollection": {
      "id": "endpoint_helpCenter.retrieveCollection",
      "description": "You can fetch the details of a single collection by making a GET request to `https://api.intercom.io/help_center/collections/<id>`.",
      "namespace": [
        "Help Center"
      ],
      "displayName": "Retrieve a collection",
      "operationId": "retrieveCollection",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_center"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "collections"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the collection which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "collection"
            }
          },
          "description": "Collection found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Collection not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Collection Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/help_center/collections/123",
          "responseStatusCode": 200,
          "name": "Collection Found",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "170",
              "workspace_id": "this_is_an_id75_that_should_be_at_least_4",
              "name": "English collection title",
              "url": "http://help-center.test/myapp-75/collection-22",
              "order": 22,
              "created_at": 1719492723,
              "updated_at": 1719492723,
              "description": "english collection description",
              "icon": "bookmark",
              "parent_id": null,
              "help_center_id": 84
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_helpCenter.updateCollection": {
      "id": "endpoint_helpCenter.updateCollection",
      "description": "You can update the details of a single collection by making a PUT request to `https://api.intercom.io/collections/<id>`.",
      "namespace": [
        "Help Center"
      ],
      "displayName": "Update a collection",
      "operationId": "updateCollection",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_center"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "collections"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the collection which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_collection_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "collection"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Collection Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Collection Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/help_center/collections/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "176",
              "workspace_id": "this_is_an_id81_that_should_be_at_least_4",
              "name": "Update collection name",
              "url": "http://help-center.test/myapp-81/collection-25",
              "order": 25,
              "created_at": 1719492724,
              "updated_at": 1719492724,
              "description": "english collection description",
              "icon": "folder",
              "parent_id": null,
              "help_center_id": 87
            }
          }
        },
        {
          "path": "/help_center/collections/123",
          "responseStatusCode": 200,
          "name": "Collection Not Found",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_helpCenter.deleteCollection": {
      "id": "endpoint_helpCenter.deleteCollection",
      "description": "You can delete a single collection by making a DELETE request to `https://api.intercom.io/collections/<id>`.",
      "namespace": [
        "Help Center"
      ],
      "displayName": "Delete a collection",
      "operationId": "deleteCollection",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_center"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "collections"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the collection which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "deleted_collection_object"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "collection Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Collection Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/help_center/collections/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "182",
              "object": "collection",
              "deleted": true
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_helpCenter.retrieveHelpCenter": {
      "id": "endpoint_helpCenter.retrieveHelpCenter",
      "description": "You can fetch the details of a single Help Center by making a GET request to `https://api.intercom.io/help_center/help_center/<id>`.",
      "namespace": [
        "Help Center"
      ],
      "displayName": "Retrieve a Help Center",
      "operationId": "retrieveHelpCenter",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_center"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_centers"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the collection which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "help_center"
            }
          },
          "description": "Collection found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Collection not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Collection Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/help_center/help_centers/123",
          "responseStatusCode": 200,
          "name": "Collection Found",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "93",
              "workspace_id": "this_is_an_id93_that_should_be_at_least_4",
              "created_at": 1719492727,
              "updated_at": 1719492727,
              "identifier": "help-center-1",
              "website_turned_on": false,
              "display_name": "Intercom Help Center"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_helpCenter.listHelpCenters": {
      "id": "endpoint_helpCenter.listHelpCenters",
      "description": "You can list all Help Centers by making a GET request to `https://api.intercom.io/help_center/help_centers`.",
      "namespace": [
        "Help Center"
      ],
      "displayName": "List all Help Centers",
      "operationId": "listHelpCenters",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_center"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "help_centers"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "help_center_list"
            }
          },
          "description": "Help Centers found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/help_center/help_centers",
          "responseStatusCode": 200,
          "name": "Help Centers Found",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": []
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.retrieveCompany": {
      "id": "endpoint_companies.retrieveCompany",
      "description": "You can fetch a single company by passing in `company_id` or `name`.\n\n  `https://api.intercom.io/companies?name={name}`\n\n  `https://api.intercom.io/companies?company_id={company_id}`\n\nYou can fetch all companies and filter by `segment_id` or `tag_id` as a query parameter.\n\n  `https://api.intercom.io/companies?tag_id={tag_id}`\n\n  `https://api.intercom.io/companies?segment_id={segment_id}`\n",
      "namespace": [
        "Companies"
      ],
      "displayName": "Retrieve companies",
      "operationId": "retrieveCompany",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "name",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The `name` of the company to filter by."
        },
        {
          "key": "company_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The `company_id` of the company to filter by."
        },
        {
          "key": "tag_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The `tag_id` of the company to filter by."
        },
        {
          "key": "segment_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "The `segment_id` of the company to filter by."
        },
        {
          "key": "page",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "description": "The page of results to fetch. Defaults to first page"
        },
        {
          "key": "per_page",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "description": "How many results to display per page. Defaults to 15"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company_list"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Company Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies",
          "responseStatusCode": 200,
          "name": "Successful",
          "queryParameters": {
            "name": "my company",
            "company_id": "12345",
            "tag_id": "678910",
            "segment_id": "98765",
            "page": 1,
            "per_page": 15
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "company",
                  "company_id": "remote_companies_scroll_2",
                  "id": "667d607e8a68186f43bafd26",
                  "app_id": "this_is_an_id122_that_should_be_at_least_",
                  "name": "IntercomQATest1",
                  "remote_created_at": 1719492734,
                  "created_at": 1719492734,
                  "updated_at": 1719492734,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 4,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "plan": {},
                  "custom_attributes": {}
                }
              ],
              "pages": {
                "type": "pages",
                "next": null,
                "page": 1,
                "per_page": 15,
                "total_pages": 1
              },
              "total_count": 1
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.createOrUpdateCompany": {
      "id": "endpoint_companies.createOrUpdateCompany",
      "description": "You can create or update a company.\n\nCompanies will be only visible in Intercom when there is at least one associated user.\n\nCompanies are looked up via `company_id` in a `POST` request, if not found via `company_id`, the new company will be created, if found, that company will be updated.\n\n{% admonition type=\"attention\" name=\"Using `company_id`\" %}\n  You can set a unique `company_id` value when creating a company. However, it is not possible to update `company_id`. Be sure to set a unique value once upon creation of the company.\n{% /admonition %}\n",
      "namespace": [
        "Companies"
      ],
      "displayName": "Create or Update a company",
      "operationId": "createOrUpdateCompany",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_or_update_company_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Bad Request",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Bad Request",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": null,
                  "errors": [
                    {
                      "code": "bad_request",
                      "message": "bad 'test' parameter"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "company_remote_id",
              "id": "667d607c8a68186f43bafd1e",
              "app_id": "this_is_an_id116_that_should_be_at_least_",
              "name": "my company",
              "remote_created_at": 1374138000,
              "created_at": 1719492732,
              "updated_at": 1719492732,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 0,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {
                "creation_source": "api"
              }
            }
          }
        },
        {
          "path": "/companies",
          "responseStatusCode": 200,
          "name": "Bad Request",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "company_remote_id",
              "id": "667d607c8a68186f43bafd1e",
              "app_id": "this_is_an_id116_that_should_be_at_least_",
              "name": "my company",
              "remote_created_at": 1374138000,
              "created_at": 1719492732,
              "updated_at": 1719492732,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 0,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {
                "creation_source": "api"
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.RetrieveACompanyById": {
      "id": "endpoint_companies.RetrieveACompanyById",
      "description": "You can fetch a single company.",
      "namespace": [
        "Companies"
      ],
      "displayName": "Retrieve a company by ID",
      "operationId": "RetrieveACompanyById",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the company which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Company Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies/5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "test-uuid-replacement"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "1",
              "id": "667d60808a68186f43bafd31",
              "app_id": "this_is_an_id128_that_should_be_at_least_",
              "name": "company1",
              "remote_created_at": 1719492736,
              "created_at": 1719492736,
              "updated_at": 1719492736,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 1,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {}
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.UpdateCompany": {
      "id": "endpoint_companies.UpdateCompany",
      "description": "You can update a single company using the Intercom provisioned `id`.\n\n{% admonition type=\"attention\" name=\"Using `company_id`\" %}\n  When updating a company it is not possible to update `company_id`. This can only be set once upon creation of the company.\n{% /admonition %}\n",
      "namespace": [
        "Companies"
      ],
      "displayName": "Update a company",
      "operationId": "UpdateCompany",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the company which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Company Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies/5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "test-uuid-replacement"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "1",
              "id": "667d60828a68186f43bafd3b",
              "app_id": "this_is_an_id134_that_should_be_at_least_",
              "name": "company2",
              "remote_created_at": 1719492738,
              "created_at": 1719492738,
              "updated_at": 1719492738,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 1,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {}
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.deleteCompany": {
      "id": "endpoint_companies.deleteCompany",
      "description": "You can delete a single company.",
      "namespace": [
        "Companies"
      ],
      "displayName": "Delete a company",
      "operationId": "deleteCompany",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the company which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "deleted_company_object"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Company Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies/5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "test-uuid-replacement"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "667d60848a68186f43bafd45",
              "object": "company",
              "deleted": true
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companiesContacts.ListAttachedContacts": {
      "id": "endpoint_companiesContacts.ListAttachedContacts",
      "description": "You can fetch a list of all contacts that belong to a company.",
      "namespace": [
        "Companies",
        "Contacts"
      ],
      "displayName": "List attached contacts",
      "operationId": "ListAttachedContacts",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the company which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company_attached_contacts"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Company Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies/5f4d3c1c-7b1b-4d7d-a97e-6095715c6632/contacts",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "test-uuid-replacement"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [],
              "total_count": 0,
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 50,
                "total_pages": 0
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.ListAttachedSegmentsForCompanies": {
      "id": "endpoint_companies.ListAttachedSegmentsForCompanies",
      "description": "You can fetch a list of all segments that belong to a company.",
      "namespace": [
        "Companies"
      ],
      "displayName": "List attached segments for companies",
      "operationId": "ListAttachedSegmentsForCompanies",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "segments"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the company which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company_attached_segments"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Company Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies/5f4d3c1c-7b1b-4d7d-a97e-6095715c6632/segments",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "test-uuid-replacement"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": []
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.listAllCompanies": {
      "id": "endpoint_companies.listAllCompanies",
      "description": "You can list companies. The company list is sorted by the `last_request_at` field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the [Scroll API](https://developers.intercom.com/reference#iterating-over-all-companies).\n{% admonition type=\"warning\" name=\"Pagination\" %}\n  You can use pagination to limit the number of results returned. The default is `20` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.\n{% /admonition %}\n",
      "namespace": [
        "Companies"
      ],
      "displayName": "List all companies",
      "operationId": "listAllCompanies",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "list"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "page",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "description": "The page of results to fetch. Defaults to first page"
        },
        {
          "key": "per_page",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "description": "How many results to return per page. Defaults to 15"
        },
        {
          "key": "order",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "`asc` or `desc`. Return the companies in ascending or descending order. Defaults to desc"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company_list"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies/list",
          "responseStatusCode": 200,
          "name": "Successful",
          "queryParameters": {
            "page": 1,
            "per_page": 15,
            "order": "desc"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "company",
                  "company_id": "remote_companies_scroll_2",
                  "id": "667d608a8a68186f43bafd61",
                  "app_id": "this_is_an_id158_that_should_be_at_least_",
                  "name": "IntercomQATest1",
                  "remote_created_at": 1719492746,
                  "created_at": 1719492746,
                  "updated_at": 1719492746,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 4,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "plan": {},
                  "custom_attributes": {}
                }
              ],
              "pages": {
                "type": "pages",
                "next": null,
                "page": 1,
                "per_page": 15,
                "total_pages": 1
              },
              "total_count": 1
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companies.scrollOverAllCompanies": {
      "id": "endpoint_companies.scrollOverAllCompanies",
      "description": "      The `list all companies` functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\n- Each app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\n- If the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\n- If the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n\n{% admonition type=\"info\" name=\"Scroll Parameter\" %}\n  You can get the first page of companies by simply sending a GET request to the scroll endpoint.\n  For subsequent requests you will need to use the scroll parameter from the response.\n{% /admonition %}\n{% admonition type=\"danger\" name=\"Scroll network timeouts\" %}\n  Since scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will see a HTTP 500 error with the following message:\n  \"Request failed due to an internal network error. Please restart the scroll operation.\"\n  If this happens, you will need to restart your scroll query: It is not possible to continue from a specific point when using scroll.\n{% /admonition %}\n",
      "namespace": [
        "Companies"
      ],
      "displayName": "Scroll over all companies",
      "operationId": "scrollOverAllCompanies",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "scroll"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "scroll_param",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": ""
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company_scroll"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/companies/scroll",
          "responseStatusCode": 200,
          "name": "Successful",
          "queryParameters": {
            "scroll_param": "scroll_param"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "company",
                  "company_id": "remote_companies_scroll_2",
                  "id": "667d608b8a68186f43bafd67",
                  "app_id": "this_is_an_id162_that_should_be_at_least_",
                  "name": "IntercomQATest1",
                  "remote_created_at": 1719492747,
                  "created_at": 1719492747,
                  "updated_at": 1719492747,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 4,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "plan": {},
                  "custom_attributes": {}
                }
              ],
              "pages": null,
              "total_count": null,
              "scroll_param": "test-uuid-replacement"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contactsCompanies.listCompaniesForAContact": {
      "id": "endpoint_contactsCompanies.listCompaniesForAContact",
      "description": "You can fetch a list of companies that are associated to a contact.",
      "namespace": [
        "Contacts",
        "Companies"
      ],
      "displayName": "List attached companies for contact",
      "operationId": "listCompaniesForAContact",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact_attached_companies"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/companies",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "company",
                  "company_id": "1",
                  "id": "667d60938a68186f43bafd91",
                  "app_id": "this_is_an_id182_that_should_be_at_least_",
                  "name": "company12",
                  "remote_created_at": 1719492755,
                  "created_at": 1719492755,
                  "updated_at": 1719492755,
                  "last_request_at": 1719319955,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 1,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "plan": {},
                  "custom_attributes": {}
                }
              ],
              "pages": {
                "type": "pages",
                "next": null,
                "page": 1,
                "per_page": 50,
                "total_pages": 1
              },
              "total_count": 1
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companiesContacts.attachContactToACompany": {
      "id": "endpoint_companiesContacts.attachContactToACompany",
      "description": "You can attach a company to a single contact.",
      "namespace": [
        "Companies",
        "Contacts"
      ],
      "displayName": "Attach a Contact to a Company",
      "operationId": "attachContactToACompany",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the company which is given by Intercom"
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Bad Request",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Bad Request",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "company not specified"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Company Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/id/companies",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": "667d608d8a68186f43bafd70"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "1",
              "id": "667d608d8a68186f43bafd70",
              "app_id": "this_is_an_id166_that_should_be_at_least_",
              "name": "company6",
              "remote_created_at": 1719492749,
              "created_at": 1719492749,
              "updated_at": 1719492749,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 1,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {}
            }
          }
        },
        {
          "path": "/contacts/id/companies",
          "responseStatusCode": 200,
          "name": "Bad Request",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": null
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "1",
              "id": "667d608d8a68186f43bafd70",
              "app_id": "this_is_an_id166_that_should_be_at_least_",
              "name": "company6",
              "remote_created_at": 1719492749,
              "created_at": 1719492749,
              "updated_at": 1719492749,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 1,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {}
            }
          }
        },
        {
          "path": "/contacts/id/companies",
          "responseStatusCode": 200,
          "name": "Company Not Found",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": "123"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "1",
              "id": "667d608d8a68186f43bafd70",
              "app_id": "this_is_an_id166_that_should_be_at_least_",
              "name": "company6",
              "remote_created_at": 1719492749,
              "created_at": 1719492749,
              "updated_at": 1719492749,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 1,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {}
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_companiesContacts.detachContactFromACompany": {
      "id": "endpoint_companiesContacts.detachContactFromACompany",
      "description": "You can detach a company from a single contact.",
      "namespace": [
        "Companies",
        "Contacts"
      ],
      "displayName": "Detach a contact from a company",
      "operationId": "detachContactFromACompany",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "companies"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        },
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the company which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "company"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/58a430d35458202d41b1e65b/companies/58a430d35458202d41b1e65b",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "58a430d35458202d41b1e65b",
            "id": "58a430d35458202d41b1e65b"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "company",
              "company_id": "1",
              "id": "667d60918a68186f43bafd80",
              "app_id": "this_is_an_id174_that_should_be_at_least_",
              "name": "company8",
              "remote_created_at": 1719492753,
              "created_at": 1719492753,
              "updated_at": 1719492753,
              "monthly_spend": 0,
              "session_count": 0,
              "user_count": 0,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "plan": {},
              "custom_attributes": {}
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_notesContacts.listNotes": {
      "id": "endpoint_notesContacts.listNotes",
      "description": "You can fetch a list of notes that are associated to a contact.",
      "namespace": [
        "Notes",
        "Contacts"
      ],
      "displayName": "List all notes",
      "operationId": "listNotes",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "notes"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier of a contact."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "note_list"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/0/notes",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "pathParameters": {
            "id": 0
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "note",
                  "id": "29",
                  "created_at": 1718887958,
                  "contact": {
                    "type": "contact",
                    "id": "667d60968a68186f43bafd9c"
                  },
                  "author": {
                    "type": "admin",
                    "id": "991267491",
                    "name": "Ciaran101 Lee",
                    "email": "admin101@email.com",
                    "away_mode_enabled": false,
                    "away_mode_reassign": false
                  },
                  "body": "<p>This is a note.</p>"
                },
                {
                  "type": "note",
                  "id": "28",
                  "created_at": 1718801558,
                  "contact": {
                    "type": "contact",
                    "id": "667d60968a68186f43bafd9c"
                  },
                  "author": {
                    "type": "admin",
                    "id": "991267491",
                    "name": "Ciaran101 Lee",
                    "email": "admin101@email.com",
                    "away_mode_enabled": false,
                    "away_mode_reassign": false
                  },
                  "body": "<p>This is a note.</p>"
                },
                {
                  "type": "note",
                  "id": "27",
                  "created_at": 1718801558,
                  "contact": {
                    "type": "contact",
                    "id": "667d60968a68186f43bafd9c"
                  },
                  "author": {
                    "type": "admin",
                    "id": "991267491",
                    "name": "Ciaran101 Lee",
                    "email": "admin101@email.com",
                    "away_mode_enabled": false,
                    "away_mode_reassign": false
                  },
                  "body": "<p>This is a note.</p>"
                }
              ],
              "total_count": 3,
              "pages": {
                "type": "pages",
                "next": null,
                "page": 1,
                "per_page": 50,
                "total_pages": 1
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_notesContacts.createNote": {
      "id": "endpoint_notesContacts.createNote",
      "description": "You can add a note to a single contact.",
      "namespace": [
        "Notes",
        "Contacts"
      ],
      "displayName": "Create a note",
      "operationId": "createNote",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "notes"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier of a given contact."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "body",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The text of the note."
              },
              {
                "key": "contact_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The unique identifier of a given contact."
              },
              {
                "key": "admin_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The unique identifier of a given admin."
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "note"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Admin Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/123/notes",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "contact_id": "667d60978a68186f43bafd9e",
              "admin_id": 991267493,
              "body": "Hello"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "note",
              "id": "34",
              "created_at": 1719492759,
              "contact": {
                "type": "contact",
                "id": "667d60978a68186f43bafd9e"
              },
              "author": {
                "type": "admin",
                "id": "991267493",
                "name": "Ciaran103 Lee",
                "email": "admin103@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              },
              "body": "<p>Hello</p>"
            }
          }
        },
        {
          "path": "/contacts/123/notes",
          "responseStatusCode": 200,
          "name": "Admin Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "contact_id": "667d60988a68186f43bafd9f",
              "admin_id": 123,
              "body": "Hello"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "note",
              "id": "34",
              "created_at": 1719492759,
              "contact": {
                "type": "contact",
                "id": "667d60978a68186f43bafd9e"
              },
              "author": {
                "type": "admin",
                "id": "991267493",
                "name": "Ciaran103 Lee",
                "email": "admin103@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              },
              "body": "<p>Hello</p>"
            }
          }
        },
        {
          "path": "/contacts/123/notes",
          "responseStatusCode": 200,
          "name": "Contact Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "contact_id": 123,
              "admin_id": 991267495,
              "body": "Hello"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "note",
              "id": "34",
              "created_at": 1719492759,
              "contact": {
                "type": "contact",
                "id": "667d60978a68186f43bafd9e"
              },
              "author": {
                "type": "admin",
                "id": "991267493",
                "name": "Ciaran103 Lee",
                "email": "admin103@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              },
              "body": "<p>Hello</p>"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contactsSegments.listSegmentsForAContact": {
      "id": "endpoint_contactsSegments.listSegmentsForAContact",
      "description": "You can fetch a list of segments that are associated to a contact.",
      "namespace": [
        "Contacts",
        "Segments"
      ],
      "displayName": "List attached segments for contact",
      "operationId": "listSegmentsForAContact",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "segments"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact_segments"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/segments",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "segment",
                  "id": "667d60998a68186f43bafda1",
                  "name": "segment",
                  "created_at": 1719492761,
                  "updated_at": 1719492761,
                  "person_type": "user"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contactsSubscriptionTypes.listSubscriptionsForAContact": {
      "id": "endpoint_contactsSubscriptionTypes.listSubscriptionsForAContact",
      "description": "You can fetch a list of subscription types that are attached to a contact. These can be subscriptions that a user has 'opted-in' to or has 'opted-out' from, depending on the subscription type.\nThis will return a list of Subscription Type objects that the contact is associated with.\n\nThe data property will show a combined list of:\n\n  1.Opt-out subscription types that the user has opted-out from.\n  2.Opt-in subscription types that the user has opted-in to receiving.\n",
      "namespace": [
        "Contacts",
        "Subscription Types"
      ],
      "displayName": "List subscriptions for a contact",
      "operationId": "listSubscriptionsForAContact",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "subscriptions"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "subscription_type_list"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/subscriptions",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "subscription",
                  "id": "93",
                  "state": "live",
                  "consent_type": "opt_out",
                  "default_translation": {
                    "name": "Newsletters",
                    "description": "Lorem ipsum dolor sit amet",
                    "locale": "en"
                  },
                  "translations": [
                    {
                      "name": "Newsletters",
                      "description": "Lorem ipsum dolor sit amet",
                      "locale": "en"
                    }
                  ],
                  "content_types": [
                    "email"
                  ]
                },
                {
                  "type": "subscription",
                  "id": "95",
                  "state": "live",
                  "consent_type": "opt_in",
                  "default_translation": {
                    "name": "Newsletters",
                    "description": "Lorem ipsum dolor sit amet",
                    "locale": "en"
                  },
                  "translations": [
                    {
                      "name": "Newsletters",
                      "description": "Lorem ipsum dolor sit amet",
                      "locale": "en"
                    }
                  ],
                  "content_types": [
                    "sms_message"
                  ]
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_subscriptionTypesContacts.attachSubscriptionTypeToContact": {
      "id": "endpoint_subscriptionTypesContacts.attachSubscriptionTypeToContact",
      "description": "You can add a specific subscription to a contact. In Intercom, we have two different subscription types based on user consent - opt-out and opt-in:\n\n  1.Attaching a contact to an opt-out subscription type will opt that user out from receiving messages related to that subscription type.\n\n  2.Attaching a contact to an opt-in subscription type will opt that user in to receiving messages related to that subscription type.\n\nThis will return a subscription type model for the subscription type that was added to the contact.\n",
      "namespace": [
        "Subscription Types",
        "Contacts"
      ],
      "displayName": "Add subscription to a contact",
      "operationId": "attachSubscriptionTypeToContact",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "subscriptions"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the subscription which is given by Intercom"
              },
              {
                "key": "consent_type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The consent_type of a subscription, opt_out or opt_in."
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "subscription_type"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Resource not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Resource Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/subscriptions",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 108,
              "consent_type": "opt_in"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "subscription",
              "id": "108",
              "state": "live",
              "consent_type": "opt_in",
              "default_translation": {
                "name": "Newsletters",
                "description": "Lorem ipsum dolor sit amet",
                "locale": "en"
              },
              "translations": [
                {
                  "name": "Newsletters",
                  "description": "Lorem ipsum dolor sit amet",
                  "locale": "en"
                }
              ],
              "content_types": [
                "sms_message"
              ]
            }
          }
        },
        {
          "path": "/contacts/63a07ddf05a32042dffac965/subscriptions",
          "responseStatusCode": 200,
          "name": "Contact Not Found",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 112,
              "consent_type": "opt_in"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "subscription",
              "id": "108",
              "state": "live",
              "consent_type": "opt_in",
              "default_translation": {
                "name": "Newsletters",
                "description": "Lorem ipsum dolor sit amet",
                "locale": "en"
              },
              "translations": [
                {
                  "name": "Newsletters",
                  "description": "Lorem ipsum dolor sit amet",
                  "locale": "en"
                }
              ],
              "content_types": [
                "sms_message"
              ]
            }
          }
        },
        {
          "path": "/contacts/63a07ddf05a32042dffac965/subscriptions",
          "responseStatusCode": 200,
          "name": "Resource Not Found",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": "invalid_id",
              "consent_type": "opt_in"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "subscription",
              "id": "108",
              "state": "live",
              "consent_type": "opt_in",
              "default_translation": {
                "name": "Newsletters",
                "description": "Lorem ipsum dolor sit amet",
                "locale": "en"
              },
              "translations": [
                {
                  "name": "Newsletters",
                  "description": "Lorem ipsum dolor sit amet",
                  "locale": "en"
                }
              ],
              "content_types": [
                "sms_message"
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_subscriptionTypesContacts.detachSubscriptionTypeToContact": {
      "id": "endpoint_subscriptionTypesContacts.detachSubscriptionTypeToContact",
      "description": "You can remove a specific subscription from a contact. This will return a subscription type model for the subscription type that was removed from the contact.",
      "namespace": [
        "Subscription Types",
        "Contacts"
      ],
      "displayName": "Remove subscription from a contact",
      "operationId": "detachSubscriptionTypeToContact",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "subscriptions"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        },
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the subscription type which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "subscription_type"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Resource not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Resource Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/subscriptions/37846",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965",
            "id": "37846"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "subscription",
              "id": "124",
              "state": "live",
              "consent_type": "opt_in",
              "default_translation": {
                "name": "Newsletters",
                "description": "Lorem ipsum dolor sit amet",
                "locale": "en"
              },
              "translations": [
                {
                  "name": "Newsletters",
                  "description": "Lorem ipsum dolor sit amet",
                  "locale": "en"
                }
              ],
              "content_types": [
                "sms_message"
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contactsTags.listTagsForAContact": {
      "id": "endpoint_contactsTags.listTagsForAContact",
      "description": "You can fetch a list of all tags that are attached to a specific contact.",
      "namespace": [
        "Contacts",
        "Tags"
      ],
      "displayName": "List tags attached to a contact",
      "operationId": "listTagsForAContact",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/tags",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "tag",
                  "id": "93",
                  "name": "Manual tag"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tagsContacts.attachTagToContact": {
      "id": "endpoint_tagsContacts.attachTagToContact",
      "description": "You can tag a specific contact. This will return a tag object for the tag that was added to the contact.",
      "namespace": [
        "Tags",
        "Contacts"
      ],
      "displayName": "Add tag to a contact",
      "operationId": "attachTagToContact",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the tag which is given by Intercom"
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Tag not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Tag Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/tags",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 94
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "94",
              "name": "Manual tag"
            }
          }
        },
        {
          "path": "/contacts/63a07ddf05a32042dffac965/tags",
          "responseStatusCode": 200,
          "name": "Contact Not Found",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 95
            }
          }
        },
        {
          "path": "/contacts/63a07ddf05a32042dffac965/tags",
          "responseStatusCode": 200,
          "name": "Tag Not Found",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": "123"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tagsContacts.detachTagFromContact": {
      "id": "endpoint_tagsContacts.detachTagFromContact",
      "description": "You can remove tag from a specific contact. This will return a tag object for the tag that was removed from the contact.",
      "namespace": [
        "Tags",
        "Contacts"
      ],
      "displayName": "Remove tag from a contact",
      "operationId": "detachTagFromContact",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the contact which is given by Intercom"
        },
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the tag which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Tag not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Tag Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/tags/7522907",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "contact_id": "63a07ddf05a32042dffac965",
            "id": "7522907"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "97",
              "name": "Manual tag"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.ShowContact": {
      "id": "endpoint_contacts.ShowContact",
      "description": "You can fetch the details of a single contact.",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Get a contact",
      "operationId": "ShowContact",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "contact",
              "id": "667d60a98a68186f43bafdb9",
              "workspace_id": "this_is_an_id252_that_should_be_at_least_",
              "external_id": "70",
              "role": "user",
              "email": "joe@bloggs.com",
              "phone": null,
              "name": "Joe Bloggs",
              "avatar": null,
              "owner_id": null,
              "social_profiles": {
                "type": "list",
                "data": []
              },
              "has_hard_bounced": false,
              "marked_email_as_spam": false,
              "unsubscribed_from_emails": false,
              "created_at": 1719492777,
              "updated_at": 1719492777,
              "signed_up_at": 1719492777,
              "last_seen_at": null,
              "last_replied_at": null,
              "last_contacted_at": null,
              "last_email_opened_at": null,
              "last_email_clicked_at": null,
              "language_override": null,
              "browser": null,
              "browser_version": null,
              "browser_language": null,
              "os": null,
              "location": {
                "type": "location",
                "country": null,
                "region": null,
                "city": null,
                "country_code": null,
                "continent_code": null
              },
              "android_app_name": null,
              "android_app_version": null,
              "android_device": null,
              "android_os_version": null,
              "android_sdk_version": null,
              "android_last_seen_at": null,
              "ios_app_name": null,
              "ios_app_version": null,
              "ios_device": null,
              "ios_os_version": null,
              "ios_sdk_version": null,
              "ios_last_seen_at": null,
              "custom_attributes": {},
              "tags": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a98a68186f43bafdb9/tags",
                "total_count": 0,
                "has_more": false
              },
              "notes": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a98a68186f43bafdb9/notes",
                "total_count": 0,
                "has_more": false
              },
              "companies": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a98a68186f43bafdb9/companies",
                "total_count": 0,
                "has_more": false
              },
              "opted_out_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a98a68186f43bafdb9/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "opted_in_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a98a68186f43bafdb9/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "utm_campaign": null,
              "utm_content": null,
              "utm_medium": null,
              "utm_source": null,
              "utm_term": null,
              "referrer": null
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.UpdateContact": {
      "id": "endpoint_contacts.UpdateContact",
      "description": "You can update an existing contact (ie. user or lead).",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Update a contact",
      "operationId": "UpdateContact",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_contact_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "email": "joebloggs@intercom.io",
              "name": "joe bloggs"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "contact",
              "id": "667d60a88a68186f43bafdb8",
              "workspace_id": "this_is_an_id248_that_should_be_at_least_",
              "external_id": "70",
              "role": "user",
              "email": "joebloggs@intercom.io",
              "phone": null,
              "name": "joe bloggs",
              "avatar": null,
              "owner_id": null,
              "social_profiles": {
                "type": "list",
                "data": []
              },
              "has_hard_bounced": false,
              "marked_email_as_spam": false,
              "unsubscribed_from_emails": false,
              "created_at": 1719492776,
              "updated_at": 1719492776,
              "signed_up_at": 1719492776,
              "last_seen_at": null,
              "last_replied_at": null,
              "last_contacted_at": null,
              "last_email_opened_at": null,
              "last_email_clicked_at": null,
              "language_override": null,
              "browser": null,
              "browser_version": null,
              "browser_language": null,
              "os": null,
              "location": {
                "type": "location",
                "country": null,
                "region": null,
                "city": null,
                "country_code": null,
                "continent_code": null
              },
              "android_app_name": null,
              "android_app_version": null,
              "android_device": null,
              "android_os_version": null,
              "android_sdk_version": null,
              "android_last_seen_at": null,
              "ios_app_name": null,
              "ios_app_version": null,
              "ios_device": null,
              "ios_os_version": null,
              "ios_sdk_version": null,
              "ios_last_seen_at": null,
              "custom_attributes": {},
              "tags": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a88a68186f43bafdb8/tags",
                "total_count": 0,
                "has_more": false
              },
              "notes": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a88a68186f43bafdb8/notes",
                "total_count": 0,
                "has_more": false
              },
              "companies": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a88a68186f43bafdb8/companies",
                "total_count": 0,
                "has_more": false
              },
              "opted_out_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a88a68186f43bafdb8/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "opted_in_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60a88a68186f43bafdb8/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "utm_campaign": null,
              "utm_content": null,
              "utm_medium": null,
              "utm_source": null,
              "utm_term": null,
              "referrer": null
            }
          }
        },
        {
          "path": "/contacts/63a07ddf05a32042dffac965",
          "responseStatusCode": 200,
          "pathParameters": {
            "id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.DeleteContact": {
      "id": "endpoint_contacts.DeleteContact",
      "description": "You can delete a single contact.",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Delete a contact",
      "operationId": "DeleteContact",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact_deleted"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/id",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "667d60aa8a68186f43bafdba",
              "external_id": "70",
              "type": "contact",
              "deleted": true
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.MergeContact": {
      "id": "endpoint_contacts.MergeContact",
      "description": "You can merge a contact with a `role` of `lead` into a contact with a `role` of `user`.",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Merge a lead and a user",
      "operationId": "MergeContact",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "merge"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "merge_contacts_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/merge",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "contact",
              "id": "667d60ac8a68186f43bafdbc",
              "workspace_id": "this_is_an_id260_that_should_be_at_least_",
              "external_id": "70",
              "role": "user",
              "email": "joe@bloggs.com",
              "phone": null,
              "name": "Joe Bloggs",
              "avatar": null,
              "owner_id": null,
              "social_profiles": {
                "type": "list",
                "data": []
              },
              "has_hard_bounced": false,
              "marked_email_as_spam": false,
              "unsubscribed_from_emails": false,
              "created_at": 1719492780,
              "updated_at": 1719492780,
              "signed_up_at": 1719492780,
              "last_seen_at": null,
              "last_replied_at": null,
              "last_contacted_at": null,
              "last_email_opened_at": null,
              "last_email_clicked_at": null,
              "language_override": null,
              "browser": null,
              "browser_version": null,
              "browser_language": null,
              "os": null,
              "location": {
                "type": "location",
                "country": null,
                "region": null,
                "city": null,
                "country_code": null,
                "continent_code": null
              },
              "android_app_name": null,
              "android_app_version": null,
              "android_device": null,
              "android_os_version": null,
              "android_sdk_version": null,
              "android_last_seen_at": null,
              "ios_app_name": null,
              "ios_app_version": null,
              "ios_device": null,
              "ios_os_version": null,
              "ios_sdk_version": null,
              "ios_last_seen_at": null,
              "custom_attributes": {},
              "tags": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60ac8a68186f43bafdbc/tags",
                "total_count": 0,
                "has_more": false
              },
              "notes": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60ac8a68186f43bafdbc/notes",
                "total_count": 0,
                "has_more": false
              },
              "companies": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60ac8a68186f43bafdbc/companies",
                "total_count": 0,
                "has_more": false
              },
              "opted_out_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60ac8a68186f43bafdbc/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "opted_in_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60ac8a68186f43bafdbc/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "utm_campaign": null,
              "utm_content": null,
              "utm_medium": null,
              "utm_source": null,
              "utm_term": null,
              "referrer": null
            }
          }
        },
        {
          "path": "/contacts/merge",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.SearchContacts": {
      "id": "endpoint_contacts.SearchContacts",
      "description": "You can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.\n\nTo search for contacts, you need to send a `POST` request to `https://api.intercom.io/contacts/search`.\n\nThis will accept a query object in the body which will define your filters in order to search for contacts.\n\n{% admonition type=\"warning\" name=\"Optimizing search queries\" %}\n  Search queries can be complex, so optimizing them can help the performance of your search.\n  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize\n  pagination to limit the number of results returned. The default is `50` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.\n{% /admonition %}\n### Contact Creation Delay\n\nIf a contact has recently been created, there is a possibility that it will not yet be available when searching. This means that it may not appear in the response. This delay can take a few minutes. If you need to be instantly notified it is recommended to use webhooks and iterate to see if they match your search filters.\n\n### Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\nThere are some limitations to the amount of multiple's there can be:\n* There's a limit of max 2 nested filters\n* There's a limit of max 15 filters for each AND or OR group\n\n### Searching for Timestamp Fields\n\nAll timestamp fields (created_at, updated_at etc.) are indexed as Dates for Contact Search queries; Datetime queries are not currently supported. This means you can only query for timestamp fields by day - not hour, minute or second.\nFor example, if you search for all Contacts with a created_at value greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020 12:00 AM). The search results will then include Contacts created from January 2nd, 2020 12:00 AM onwards.\nIf you'd like to get contacts created on January 1st, 2020 you should search with a created_at value equal (=) to 1577836800 (January 1st, 2020 12:00 AM).\nThis behaviour applies only to timestamps used in search queries. The search results will still contain the full UNIX timestamp and be sorted accordingly.\n\n### Accepted Fields\n\nMost key listed as part of the Contacts Model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `\"foorbar\"`).\n\n| Field                              | Type                           |\n| ---------------------------------- | ------------------------------ |\n| id                                 | String                         |\n| role                               | String<br>Accepts user or lead |\n| name                               | String                         |\n| avatar                             | String                         |\n| owner_id                           | Integer                        |\n| email                              | String                         |\n| email_domain                       | String                         |\n| phone                              | String                         |\n| formatted_phone                    | String                         |\n| external_id                        | String                         |\n| created_at                         | Date (UNIX Timestamp)          |\n| signed_up_at                       | Date (UNIX Timestamp)          |\n| updated_at                         | Date (UNIX Timestamp)          |\n| last_seen_at                       | Date (UNIX Timestamp)          |\n| last_contacted_at                  | Date (UNIX Timestamp)          |\n| last_replied_at                    | Date (UNIX Timestamp)          |\n| last_email_opened_at               | Date (UNIX Timestamp)          |\n| last_email_clicked_at              | Date (UNIX Timestamp)          |\n| language_override                  | String                         |\n| browser                            | String                         |\n| browser_language                   | String                         |\n| os                                 | String                         |\n| location.country                   | String                         |\n| location.region                    | String                         |\n| location.city                      | String                         |\n| unsubscribed_from_emails           | Boolean                        |\n| marked_email_as_spam               | Boolean                        |\n| has_hard_bounced                   | Boolean                        |\n| ios_last_seen_at                   | Date (UNIX Timestamp)          |\n| ios_app_version                    | String                         |\n| ios_device                         | String                         |\n| ios_app_device                     | String                         |\n| ios_os_version                     | String                         |\n| ios_app_name                       | String                         |\n| ios_sdk_version                    | String                         |\n| android_last_seen_at               | Date (UNIX Timestamp)          |\n| android_app_version                | String                         |\n| android_device                     | String                         |\n| android_app_name                   | String                         |\n| andoid_sdk_version                 | String                         |\n| segment_id                         | String                         |\n| tag_id                             | String                         |\n| custom_attributes.{attribute_name} | String                         |\n\n### Accepted Operators\n\n{% admonition type=\"attention\" name=\"Searching based on `created_at`\" %}\n  You cannot use the `<=` or `>=` operators to search by `created_at`.\n{% /admonition %}\n\nThe table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`\"=\"`). The operator has to be compatible with the field's type (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).\n\n| Operator | Valid Types                      | Description                                                      |\n| :------- | :------------------------------- | :--------------------------------------------------------------- |\n| =        | All                              | Equals                                                           |\n| !=       | All                              | Doesn't Equal                                                    |\n| IN       | All                              | In<br>Shortcut for `OR` queries<br>Values must be in Array       |\n| NIN      | All                              | Not In<br>Shortcut for `OR !` queries<br>Values must be in Array |\n| >        | Integer<br>Date (UNIX Timestamp) | Greater than                                                     |\n| <       | Integer<br>Date (UNIX Timestamp) | Lower than                                                       |\n| ~        | String                           | Contains                                                         |\n| !~       | String                           | Doesn't Contain                                                  |\n| ^        | String                           | Starts With                                                      |\n| $        | String                           | Ends With                                                        |\n",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Search contacts",
      "operationId": "SearchContacts",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "search"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "search_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts/search",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [],
              "total_count": 0,
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 5,
                "total_pages": 0
              }
            }
          }
        },
        {
          "path": "/contacts/search",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.ListContacts": {
      "id": "endpoint_contacts.ListContacts",
      "description": "You can fetch a list of all contacts (ie. users or leads) in your workspace.\n{% admonition type=\"warning\" name=\"Pagination\" %}\n  You can use pagination to limit the number of results returned. The default is `50` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.\n{% /admonition %}\n",
      "namespace": [
        "Contacts"
      ],
      "displayName": "List all contacts",
      "operationId": "ListContacts",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [],
              "total_count": 0,
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 10,
                "total_pages": 0
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.CreateContact": {
      "id": "endpoint_contacts.CreateContact",
      "description": "You can create a new contact (ie. user or lead).",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Create contact",
      "operationId": "CreateContact",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_contact_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/contacts",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "email": "joebloggs@intercom.io"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "contact",
              "id": "667d60b08a68186f43bafdbf",
              "workspace_id": "this_is_an_id272_that_should_be_at_least_",
              "external_id": null,
              "role": "user",
              "email": "joebloggs@intercom.io",
              "phone": null,
              "name": null,
              "avatar": null,
              "owner_id": null,
              "social_profiles": {
                "type": "list",
                "data": []
              },
              "has_hard_bounced": false,
              "marked_email_as_spam": false,
              "unsubscribed_from_emails": false,
              "created_at": 1719492784,
              "updated_at": 1719492784,
              "signed_up_at": null,
              "last_seen_at": null,
              "last_replied_at": null,
              "last_contacted_at": null,
              "last_email_opened_at": null,
              "last_email_clicked_at": null,
              "language_override": null,
              "browser": null,
              "browser_version": null,
              "browser_language": null,
              "os": null,
              "location": {
                "type": "location",
                "country": null,
                "region": null,
                "city": null,
                "country_code": null,
                "continent_code": null
              },
              "android_app_name": null,
              "android_app_version": null,
              "android_device": null,
              "android_os_version": null,
              "android_sdk_version": null,
              "android_last_seen_at": null,
              "ios_app_name": null,
              "ios_app_version": null,
              "ios_device": null,
              "ios_os_version": null,
              "ios_sdk_version": null,
              "ios_last_seen_at": null,
              "custom_attributes": {},
              "tags": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60b08a68186f43bafdbf/tags",
                "total_count": 0,
                "has_more": false
              },
              "notes": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60b08a68186f43bafdbf/notes",
                "total_count": 0,
                "has_more": false
              },
              "companies": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60b08a68186f43bafdbf/companies",
                "total_count": 0,
                "has_more": false
              },
              "opted_out_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60b08a68186f43bafdbf/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "opted_in_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d60b08a68186f43bafdbf/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "utm_campaign": null,
              "utm_content": null,
              "utm_medium": null,
              "utm_source": null,
              "utm_term": null,
              "referrer": null
            }
          }
        },
        {
          "path": "/contacts",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.ArchiveContact": {
      "id": "endpoint_contacts.ArchiveContact",
      "description": "You can archive a single contact.",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Archive contact",
      "operationId": "ArchiveContact",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "archive"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact_archived"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/archive",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "667d60b18a68186f43bafdc0",
              "external_id": "70",
              "type": "contact",
              "archived": true
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_contacts.UnarchiveContact": {
      "id": "endpoint_contacts.UnarchiveContact",
      "description": "You can unarchive a single contact.",
      "namespace": [
        "Contacts"
      ],
      "displayName": "Unarchive contact",
      "operationId": "UnarchiveContact",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "contacts"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "unarchive"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact_unarchived"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/contacts/63a07ddf05a32042dffac965/unarchive",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "63a07ddf05a32042dffac965"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "667d60b28a68186f43bafdc1",
              "external_id": "70",
              "type": "contact",
              "archived": false
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tagsConversations.attachTagToConversation": {
      "id": "endpoint_tagsConversations.attachTagToConversation",
      "description": "You can tag a specific conversation. This will return a tag object for the tag that was added to the conversation.",
      "namespace": [
        "Tags",
        "Conversations"
      ],
      "displayName": "Add tag to a conversation",
      "operationId": "attachTagToConversation",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "conversation_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "conversation_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "conversation_id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the tag which is given by Intercom"
              },
              {
                "key": "admin_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the admin which is given by Intercom."
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Conversation not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Conversation Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Conversation not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/64619700005694/tags",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "conversation_id": "64619700005694"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 99,
              "admin_id": 991267526
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "99",
              "name": "Manual tag"
            }
          }
        },
        {
          "path": "/conversations/64619700005694/tags",
          "responseStatusCode": 200,
          "name": "Conversation Not Found",
          "pathParameters": {
            "conversation_id": "64619700005694"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 100,
              "admin_id": 991267528
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tagsConversations.detachTagFromConversation": {
      "id": "endpoint_tagsConversations.detachTagFromConversation",
      "description": "You can remove tag from a specific conversation. This will return a tag object for the tag that was removed from the conversation.",
      "namespace": [
        "Tags",
        "Conversations"
      ],
      "displayName": "Remove tag from a conversation",
      "operationId": "detachTagFromConversation",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "conversation_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "conversation_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "conversation_id"
        },
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "admin_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the admin which is given by Intercom."
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Tag not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Conversation Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Conversation not found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Tag Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "tag_not_found",
                      "message": "Tag not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/64619700005694/tags/7522907",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "conversation_id": "64619700005694",
            "id": "7522907"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "admin_id": 991267530
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "102",
              "name": "Manual tag"
            }
          }
        },
        {
          "path": "/conversations/64619700005694/tags/7522907",
          "responseStatusCode": 200,
          "name": "Conversation Not Found",
          "pathParameters": {
            "conversation_id": "64619700005694",
            "id": "7522907"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "admin_id": 991267532
            }
          }
        },
        {
          "path": "/conversations/64619700005694/tags/7522907",
          "responseStatusCode": 200,
          "name": "Tag Not Found",
          "pathParameters": {
            "conversation_id": "64619700005694",
            "id": "7522907"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "admin_id": 991267533
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.listConversations": {
      "id": "endpoint_conversations.listConversations",
      "description": "You can fetch a list of all conversations.\n\nYou can optionally request the result page size and the cursor to start after to fetch the result.\n{% admonition type=\"warning\" name=\"Pagination\" %}\n  You can use pagination to limit the number of results returned. The default is `20` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.\n{% /admonition %}\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "List all conversations",
      "operationId": "listConversations",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "per_page",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "maximum": 150,
                    "default": 20
                  }
                }
              }
            }
          },
          "description": "How many results per page"
        },
        {
          "key": "starting_after",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "String used to get the next page of conversations."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "paginated_response"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations",
          "responseStatusCode": 200,
          "name": "Successful",
          "queryParameters": {
            "per_page": 20,
            "starting_after": "starting_after"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation.list",
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 20,
                "total_pages": 1
              },
              "total_count": 1,
              "conversations": [
                {
                  "type": "conversation",
                  "id": "335",
                  "created_at": 1719492795,
                  "updated_at": 1719492795,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "source": {
                    "type": "conversation",
                    "id": "403918241",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267536",
                      "name": "Ciaran143 Lee",
                      "email": "admin143@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60bb8a68186f43bafdc5",
                        "external_id": "70"
                      }
                    ]
                  },
                  "first_contact_reply": null,
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "priority": "not_priority",
                  "sla_applied": null,
                  "statistics": null,
                  "conversation_rating": null,
                  "teammates": null,
                  "title": null,
                  "custom_attributes": {},
                  "topics": {},
                  "ticket": null,
                  "linked_objects": {
                    "type": "list",
                    "data": [],
                    "total_count": 0,
                    "has_more": false
                  },
                  "ai_agent": null,
                  "ai_agent_participated": false
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.createConversation": {
      "id": "endpoint_conversations.createConversation",
      "description": "You can create a conversation that has been initiated by a contact (ie. user or lead).\nThe conversation can be an in-app message only.\n\n{% admonition type=\"info\" name=\"Sending for visitors\" %}\nYou can also send a message from a visitor by specifying their `user_id` or `id` value in the `from` field, along with a `type` field value of `contact`.\nThis visitor will be automatically converted to a contact with a lead role once the conversation is created.\n{% /admonition %}\n\nThis will return the Message model that has been created.\n\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Creates a conversation",
      "operationId": "createConversation",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_conversation_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "message"
            }
          },
          "description": "conversation created"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations",
          "responseStatusCode": 200,
          "name": "Conversation Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918251",
              "created_at": 1719492819,
              "body": "Hello there",
              "message_type": "inapp",
              "conversation_id": "363"
            }
          }
        },
        {
          "path": "/conversations",
          "responseStatusCode": 200,
          "name": "Contact Not Found",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918251",
              "created_at": 1719492819,
              "body": "Hello there",
              "message_type": "inapp",
              "conversation_id": "363"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.retrieveConversation": {
      "id": "endpoint_conversations.retrieveConversation",
      "description": "\nYou can fetch the details of a single conversation.\n\nThis will return a single Conversation model with all its conversation parts.\n\n{% admonition type=\"warning\" name=\"Hard limit of 500 parts\" %}\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts.\n{% /admonition %}\n\nFor AI agent conversation metadata, please note that you need to have the agent enabled in your workspace, which is a [paid feature](https://www.intercom.com/help/en/articles/8205718-fin-resolutions#h_97f8c2e671).\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Retrieve a conversation",
      "operationId": "retrieveConversation",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The id of the conversation to target"
        }
      ],
      "queryParameters": [
        {
          "key": "display_as",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Set to plaintext to retrieve conversation messages in plain text."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "conversation found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123",
          "responseStatusCode": 200,
          "name": "Conversation Found",
          "pathParameters": {
            "id": 123
          },
          "queryParameters": {
            "display_as": "plaintext"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "367",
              "created_at": 1719492825,
              "updated_at": 1719492825,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918255",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267553",
                  "name": "Ciaran153 Lee",
                  "email": "admin153@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60d88a68186f43bafde1",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [],
                "total_count": 0
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.updateConversation": {
      "id": "endpoint_conversations.updateConversation",
      "description": "\nYou can update an existing conversation.\n\n{% admonition type=\"info\" name=\"Replying and other actions\" %}\nIf you want to reply to a coveration or take an action such as assign, unassign, open, close or snooze, take a look at the reply and manage endpoints.\n{% /admonition %}\n\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Update a conversation",
      "operationId": "updateConversation",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The id of the conversation to target"
        }
      ],
      "queryParameters": [
        {
          "key": "display_as",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Set to plaintext to retrieve conversation messages in plain text."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_conversation_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "conversation found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123",
          "responseStatusCode": 200,
          "name": "Conversation Found",
          "pathParameters": {
            "id": 123
          },
          "queryParameters": {
            "display_as": "plaintext"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "371",
              "created_at": 1719492832,
              "updated_at": 1719492834,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918259",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267561",
                  "name": "Ciaran157 Lee",
                  "email": "admin157@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60e08a68186f43bafde5",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {
                "issue_type": "Billing",
                "priority": "High"
              },
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "96",
                    "part_type": "conversation_attribute_updated_by_admin",
                    "body": null,
                    "created_at": 1719492834,
                    "updated_at": 1719492834,
                    "notified_at": 1719492834,
                    "assigned_to": null,
                    "author": {
                      "id": "991267562",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  },
                  {
                    "type": "conversation_part",
                    "id": "97",
                    "part_type": "conversation_attribute_updated_by_admin",
                    "body": null,
                    "created_at": 1719492834,
                    "updated_at": 1719492834,
                    "notified_at": 1719492834,
                    "assigned_to": null,
                    "author": {
                      "id": "991267562",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 2
              }
            }
          }
        },
        {
          "path": "/conversations/123",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": 123
          },
          "queryParameters": {
            "display_as": "plaintext"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "371",
              "created_at": 1719492832,
              "updated_at": 1719492834,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918259",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267561",
                  "name": "Ciaran157 Lee",
                  "email": "admin157@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60e08a68186f43bafde5",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {
                "issue_type": "Billing",
                "priority": "High"
              },
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "96",
                    "part_type": "conversation_attribute_updated_by_admin",
                    "body": null,
                    "created_at": 1719492834,
                    "updated_at": 1719492834,
                    "notified_at": 1719492834,
                    "assigned_to": null,
                    "author": {
                      "id": "991267562",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  },
                  {
                    "type": "conversation_part",
                    "id": "97",
                    "part_type": "conversation_attribute_updated_by_admin",
                    "body": null,
                    "created_at": 1719492834,
                    "updated_at": 1719492834,
                    "notified_at": 1719492834,
                    "assigned_to": null,
                    "author": {
                      "id": "991267562",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 2
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.searchConversations": {
      "id": "endpoint_conversations.searchConversations",
      "description": "You can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for conversations, you need to send a `POST` request to `https://api.intercom.io/conversations/search`.\n\nThis will accept a query object in the body which will define your filters in order to search for conversations.\n{% admonition type=\"warning\" name=\"Optimizing search queries\" %}\n  Search queries can be complex, so optimizing them can help the performance of your search.\n  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize\n  pagination to limit the number of results returned. The default is `20` results per page and maximum is `150`.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.\n{% /admonition %}\n\n### Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\nThere are some limitations to the amount of multiple's there can be:\n- There's a limit of max 2 nested filters\n- There's a limit of max 15 filters for each AND or OR group\n\n### Accepted Fields\n\nMost keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `\"foorbar\"`).\n\n| Field                                     | Type                                                                                                                                                   |\n| :---------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id                                        | String                                                                                                                                                 |\n| created_at                                | Date (UNIX timestamp)                                                                                                                                  |\n| updated_at                                | Date (UNIX timestamp)                                                                                                                                  |\n| source.type                               | String<br>Accepted fields are `conversation`, `email`, `facebook`, `instagram`, `phone_call`, `phone_switch`, `push`, `sms`, `twitter` and `whatsapp`. |\n| source.id                                 | String                                                                                                                                                 |\n| source.delivered_as                       | String                                                                                                                                                 |\n| source.subject                            | String                                                                                                                                                 |\n| source.body                               | String                                                                                                                                                 |\n| source.author.id                          | String                                                                                                                                                 |\n| source.author.type                        | String                                                                                                                                                 |\n| source.author.name                        | String                                                                                                                                                 |\n| source.author.email                       | String                                                                                                                                                 |\n| source.url                                | String                                                                                                                                                 |\n| contact_ids                               | String                                                                                                                                                 |\n| teammate_ids                              | String                                                                                                                                                 |\n| admin_assignee_id                         | String                                                                                                                                                 |\n| team_assignee_id                          | String                                                                                                                                                 |\n| channel_initiated                         | String                                                                                                                                                 |\n| open                                      | Boolean                                                                                                                                                |\n| read                                      | Boolean                                                                                                                                                |\n| state                                     | String                                                                                                                                                 |\n| waiting_since                             | Date (UNIX timestamp)                                                                                                                                  |\n| snoozed_until                             | Date (UNIX timestamp)                                                                                                                                  |\n| tag_ids                                   | String                                                                                                                                                 |\n| priority                                  | String                                                                                                                                                 |\n| statistics.time_to_assignment             | Integer                                                                                                                                                |\n| statistics.time_to_admin_reply            | Integer                                                                                                                                                |\n| statistics.time_to_first_close            | Integer                                                                                                                                                |\n| statistics.time_to_last_close             | Integer                                                                                                                                                |\n| statistics.median_time_to_reply           | Integer                                                                                                                                                |\n| statistics.first_contact_reply_at         | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.first_assignment_at            | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.first_admin_reply_at           | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.first_close_at                 | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_assignment_at             | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_assignment_admin_reply_at | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_contact_reply_at          | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_admin_reply_at            | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_close_at                  | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_closed_by_id              | String                                                                                                                                                 |\n| statistics.count_reopens                  | Integer                                                                                                                                                |\n| statistics.count_assignments              | Integer                                                                                                                                                |\n| statistics.count_conversation_parts       | Integer                                                                                                                                                |\n| conversation_rating.requested_at          | Date (UNIX timestamp)                                                                                                                                  |\n| conversation_rating.replied_at            | Date (UNIX timestamp)                                                                                                                                  |\n| conversation_rating.score                 | Integer                                                                                                                                                |\n| conversation_rating.remark                | String                                                                                                                                                 |\n| conversation_rating.contact_id            | String                                                                                                                                                 |\n| conversation_rating.admin_d               | String                                                                                                                                                 |\n| ai_agent_participated                     | Boolean                                                                                                                                                |\n| ai_agent.resolution_state                 | String                                                                                                                                                 |\n| ai_agent.last_answer_type                 | String                                                                                                                                                 |\n| ai_agent.rating                           | Integer                                                                                                                                                |\n| ai_agent.rating_remark                    | String                                                                                                                                                 |\n| ai_agent.source_type                      | String                                                                                                                                                 |\n| ai_agent.source_title                     | String                                                                                                                                                 |\n\n### Accepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`\"=\"`). The operator has to be compatible with the field's type  (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).\n\n| Operator | Valid Types                    | Description                                                  |\n| :------- | :----------------------------- | :----------------------------------------------------------- |\n| =        | All                            | Equals                                                       |\n| !=       | All                            | Doesn't Equal                                                |\n| IN       | All                            | In  Shortcut for `OR` queries  Values most be in Array       |\n| NIN      | All                            | Not In  Shortcut for `OR !` queries  Values must be in Array |\n| >        | Integer  Date (UNIX Timestamp) | Greater (or equal) than                                      |\n| <       | Integer  Date (UNIX Timestamp) | Lower (or equal) than                                        |\n| ~        | String                         | Contains                                                     |\n| !~       | String                         | Doesn't Contain                                              |\n| ^        | String                         | Starts With                                                  |\n| $        | String                         | Ends With                                                    |\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Search conversations",
      "operationId": "searchConversations",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "search"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "search_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/conversations/search",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation.list",
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 5,
                "total_pages": 1
              },
              "total_count": 1,
              "conversations": [
                {
                  "type": "conversation",
                  "id": "378",
                  "created_at": 1719492843,
                  "updated_at": 1719492843,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "source": {
                    "type": "conversation",
                    "id": "403918266",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267591",
                      "name": "Ciaran180 Lee",
                      "email": "admin180@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60ea8a68186f43bafdec",
                        "external_id": "70"
                      }
                    ]
                  },
                  "first_contact_reply": null,
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "priority": "not_priority",
                  "sla_applied": null,
                  "statistics": null,
                  "conversation_rating": null,
                  "teammates": null,
                  "title": null,
                  "custom_attributes": {},
                  "topics": {},
                  "ticket": null,
                  "linked_objects": {
                    "type": "list",
                    "data": [],
                    "total_count": 0,
                    "has_more": false
                  },
                  "ai_agent": null,
                  "ai_agent_participated": false
                }
              ]
            }
          }
        },
        {
          "path": "/conversations/search",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.replyConversation": {
      "id": "endpoint_conversations.replyConversation",
      "description": "You can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins.",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Reply to a conversation",
      "operationId": "replyConversation",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "reply"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The Intercom provisioned identifier for the conversation or the string \"last\" to reply to the last part of the conversation"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "reply_conversation_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "User last conversation reply"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "User Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "387",
              "created_at": 1719492849,
              "updated_at": 1719492850,
              "waiting_since": 1719492850,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918269",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267594",
                  "name": "Ciaran182 Lee",
                  "email": "admin182@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f18a68186f43bafdf4",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492850,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "99",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492850,
                    "updated_at": 1719492850,
                    "notified_at": 1719492850,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f18a68186f43bafdf4",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "User Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "388",
              "created_at": 1719492852,
              "updated_at": 1719492853,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918270",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267596",
                  "name": "Ciaran183 Lee",
                  "email": "admin183@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f38a68186f43bafdf5",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "100",
                    "part_type": "note",
                    "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
                    "created_at": 1719492853,
                    "updated_at": 1719492853,
                    "notified_at": 1719492853,
                    "assigned_to": null,
                    "author": {
                      "id": "991267596",
                      "type": "admin",
                      "name": "Ciaran183 Lee",
                      "email": "admin183@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "User Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "390",
              "created_at": 1719492855,
              "updated_at": 1719492856,
              "waiting_since": 1719492856,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918272",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267600",
                  "name": "Ciaran185 Lee",
                  "email": "admin185@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f78a68186f43bafdf7",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492856,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "101",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492856,
                    "updated_at": 1719492856,
                    "notified_at": 1719492856,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f78a68186f43bafdf7",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "Admin Note Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "387",
              "created_at": 1719492849,
              "updated_at": 1719492850,
              "waiting_since": 1719492850,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918269",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267594",
                  "name": "Ciaran182 Lee",
                  "email": "admin182@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f18a68186f43bafdf4",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492850,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "99",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492850,
                    "updated_at": 1719492850,
                    "notified_at": 1719492850,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f18a68186f43bafdf4",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "Admin Note Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "388",
              "created_at": 1719492852,
              "updated_at": 1719492853,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918270",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267596",
                  "name": "Ciaran183 Lee",
                  "email": "admin183@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f38a68186f43bafdf5",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "100",
                    "part_type": "note",
                    "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
                    "created_at": 1719492853,
                    "updated_at": 1719492853,
                    "notified_at": 1719492853,
                    "assigned_to": null,
                    "author": {
                      "id": "991267596",
                      "type": "admin",
                      "name": "Ciaran183 Lee",
                      "email": "admin183@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "Admin Note Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "390",
              "created_at": 1719492855,
              "updated_at": 1719492856,
              "waiting_since": 1719492856,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918272",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267600",
                  "name": "Ciaran185 Lee",
                  "email": "admin185@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f78a68186f43bafdf7",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492856,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "101",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492856,
                    "updated_at": 1719492856,
                    "notified_at": 1719492856,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f78a68186f43bafdf7",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "User Last Conversation Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "387",
              "created_at": 1719492849,
              "updated_at": 1719492850,
              "waiting_since": 1719492850,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918269",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267594",
                  "name": "Ciaran182 Lee",
                  "email": "admin182@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f18a68186f43bafdf4",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492850,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "99",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492850,
                    "updated_at": 1719492850,
                    "notified_at": 1719492850,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f18a68186f43bafdf4",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "User Last Conversation Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "388",
              "created_at": 1719492852,
              "updated_at": 1719492853,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918270",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267596",
                  "name": "Ciaran183 Lee",
                  "email": "admin183@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f38a68186f43bafdf5",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "100",
                    "part_type": "note",
                    "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
                    "created_at": 1719492853,
                    "updated_at": 1719492853,
                    "notified_at": 1719492853,
                    "assigned_to": null,
                    "author": {
                      "id": "991267596",
                      "type": "admin",
                      "name": "Ciaran183 Lee",
                      "email": "admin183@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "User Last Conversation Reply",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "390",
              "created_at": 1719492855,
              "updated_at": 1719492856,
              "waiting_since": 1719492856,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918272",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267600",
                  "name": "Ciaran185 Lee",
                  "email": "admin185@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f78a68186f43bafdf7",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492856,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "101",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492856,
                    "updated_at": 1719492856,
                    "notified_at": 1719492856,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f78a68186f43bafdf7",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "387",
              "created_at": 1719492849,
              "updated_at": 1719492850,
              "waiting_since": 1719492850,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918269",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267594",
                  "name": "Ciaran182 Lee",
                  "email": "admin182@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f18a68186f43bafdf4",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492850,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "99",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492850,
                    "updated_at": 1719492850,
                    "notified_at": 1719492850,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f18a68186f43bafdf4",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "388",
              "created_at": 1719492852,
              "updated_at": 1719492853,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918270",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267596",
                  "name": "Ciaran183 Lee",
                  "email": "admin183@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f38a68186f43bafdf5",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "100",
                    "part_type": "note",
                    "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
                    "created_at": 1719492853,
                    "updated_at": 1719492853,
                    "notified_at": 1719492853,
                    "assigned_to": null,
                    "author": {
                      "id": "991267596",
                      "type": "admin",
                      "name": "Ciaran183 Lee",
                      "email": "admin183@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123 or \"last\"/reply",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123 or \"last\""
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "390",
              "created_at": 1719492855,
              "updated_at": 1719492856,
              "waiting_since": 1719492856,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918272",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267600",
                  "name": "Ciaran185 Lee",
                  "email": "admin185@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60f78a68186f43bafdf7",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492856,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "101",
                    "part_type": "open",
                    "body": "<p>Thanks again :)</p>",
                    "created_at": 1719492856,
                    "updated_at": 1719492856,
                    "notified_at": 1719492856,
                    "assigned_to": null,
                    "author": {
                      "id": "667d60f78a68186f43bafdf7",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.manageConversation": {
      "id": "endpoint_conversations.manageConversation",
      "description": "For managing conversations you can:\n- Close a conversation\n- Snooze a conversation to reopen on a future date\n- Open a conversation which is `snoozed` or `closed`\n- Assign a conversation to an admin and/or team.\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Manage a conversation",
      "operationId": "manageConversation",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "parts"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The identifier for the conversation as given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "postConversationsIdPartsJsonRequest"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "Assign a conversation"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Close a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267608,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "394",
              "created_at": 1719492862,
              "updated_at": 1719492862,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918276",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267608",
                  "name": "Ciaran189 Lee",
                  "email": "admin189@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60fd8a68186f43bafdfb",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "102",
                    "part_type": "close",
                    "body": "<p>Goodbye :)</p>",
                    "created_at": 1719492862,
                    "updated_at": 1719492862,
                    "notified_at": 1719492862,
                    "assigned_to": null,
                    "author": {
                      "id": "991267608",
                      "type": "admin",
                      "name": "Ciaran189 Lee",
                      "email": "admin189@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Close a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267608,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "395",
              "created_at": 1719492864,
              "updated_at": 1719492864,
              "waiting_since": null,
              "snoozed_until": 1719496464,
              "source": {
                "type": "conversation",
                "id": "403918277",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267610",
                  "name": "Ciaran190 Lee",
                  "email": "admin190@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60ff8a68186f43bafdfc",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "snoozed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "103",
                    "part_type": "snoozed",
                    "body": null,
                    "created_at": 1719492864,
                    "updated_at": 1719492864,
                    "notified_at": 1719492864,
                    "assigned_to": null,
                    "author": {
                      "id": "991267610",
                      "type": "admin",
                      "name": "Ciaran190 Lee",
                      "email": "admin190@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Close a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267608,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "400",
              "created_at": 1719492863,
              "updated_at": 1719492873,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918278",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267612",
                  "name": "Ciaran191 Lee",
                  "email": "admin191@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61038a68186f43bafe01",
                    "external_id": "74"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": "",
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "105",
                    "part_type": "open",
                    "body": null,
                    "created_at": 1719492873,
                    "updated_at": 1719492873,
                    "notified_at": 1719492873,
                    "assigned_to": null,
                    "author": {
                      "id": "991267612",
                      "type": "admin",
                      "name": "Ciaran191 Lee",
                      "email": "admin191@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Close a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267608,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "405",
              "created_at": 1719492874,
              "updated_at": 1719492875,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918281",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267615",
                  "name": "Ciaran193 Lee",
                  "email": "admin193@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d610a8a68186f43bafe05",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": 991267615,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "106",
                    "part_type": "assign_and_reopen",
                    "body": null,
                    "created_at": 1719492875,
                    "updated_at": 1719492875,
                    "notified_at": 1719492875,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267615"
                    },
                    "author": {
                      "id": "991267615",
                      "type": "admin",
                      "name": "Ciaran193 Lee",
                      "email": "admin193@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Snooze a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "snoozed",
              "admin_id": 991267610,
              "snoozed_until": 1719496464
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "394",
              "created_at": 1719492862,
              "updated_at": 1719492862,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918276",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267608",
                  "name": "Ciaran189 Lee",
                  "email": "admin189@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60fd8a68186f43bafdfb",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "102",
                    "part_type": "close",
                    "body": "<p>Goodbye :)</p>",
                    "created_at": 1719492862,
                    "updated_at": 1719492862,
                    "notified_at": 1719492862,
                    "assigned_to": null,
                    "author": {
                      "id": "991267608",
                      "type": "admin",
                      "name": "Ciaran189 Lee",
                      "email": "admin189@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Snooze a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "snoozed",
              "admin_id": 991267610,
              "snoozed_until": 1719496464
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "395",
              "created_at": 1719492864,
              "updated_at": 1719492864,
              "waiting_since": null,
              "snoozed_until": 1719496464,
              "source": {
                "type": "conversation",
                "id": "403918277",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267610",
                  "name": "Ciaran190 Lee",
                  "email": "admin190@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60ff8a68186f43bafdfc",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "snoozed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "103",
                    "part_type": "snoozed",
                    "body": null,
                    "created_at": 1719492864,
                    "updated_at": 1719492864,
                    "notified_at": 1719492864,
                    "assigned_to": null,
                    "author": {
                      "id": "991267610",
                      "type": "admin",
                      "name": "Ciaran190 Lee",
                      "email": "admin190@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Snooze a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "snoozed",
              "admin_id": 991267610,
              "snoozed_until": 1719496464
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "400",
              "created_at": 1719492863,
              "updated_at": 1719492873,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918278",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267612",
                  "name": "Ciaran191 Lee",
                  "email": "admin191@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61038a68186f43bafe01",
                    "external_id": "74"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": "",
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "105",
                    "part_type": "open",
                    "body": null,
                    "created_at": 1719492873,
                    "updated_at": 1719492873,
                    "notified_at": 1719492873,
                    "assigned_to": null,
                    "author": {
                      "id": "991267612",
                      "type": "admin",
                      "name": "Ciaran191 Lee",
                      "email": "admin191@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Snooze a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "snoozed",
              "admin_id": 991267610,
              "snoozed_until": 1719496464
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "405",
              "created_at": 1719492874,
              "updated_at": 1719492875,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918281",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267615",
                  "name": "Ciaran193 Lee",
                  "email": "admin193@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d610a8a68186f43bafe05",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": 991267615,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "106",
                    "part_type": "assign_and_reopen",
                    "body": null,
                    "created_at": 1719492875,
                    "updated_at": 1719492875,
                    "notified_at": 1719492875,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267615"
                    },
                    "author": {
                      "id": "991267615",
                      "type": "admin",
                      "name": "Ciaran193 Lee",
                      "email": "admin193@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Open a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "open",
              "admin_id": 991267612
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "394",
              "created_at": 1719492862,
              "updated_at": 1719492862,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918276",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267608",
                  "name": "Ciaran189 Lee",
                  "email": "admin189@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60fd8a68186f43bafdfb",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "102",
                    "part_type": "close",
                    "body": "<p>Goodbye :)</p>",
                    "created_at": 1719492862,
                    "updated_at": 1719492862,
                    "notified_at": 1719492862,
                    "assigned_to": null,
                    "author": {
                      "id": "991267608",
                      "type": "admin",
                      "name": "Ciaran189 Lee",
                      "email": "admin189@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Open a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "open",
              "admin_id": 991267612
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "395",
              "created_at": 1719492864,
              "updated_at": 1719492864,
              "waiting_since": null,
              "snoozed_until": 1719496464,
              "source": {
                "type": "conversation",
                "id": "403918277",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267610",
                  "name": "Ciaran190 Lee",
                  "email": "admin190@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60ff8a68186f43bafdfc",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "snoozed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "103",
                    "part_type": "snoozed",
                    "body": null,
                    "created_at": 1719492864,
                    "updated_at": 1719492864,
                    "notified_at": 1719492864,
                    "assigned_to": null,
                    "author": {
                      "id": "991267610",
                      "type": "admin",
                      "name": "Ciaran190 Lee",
                      "email": "admin190@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Open a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "open",
              "admin_id": 991267612
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "400",
              "created_at": 1719492863,
              "updated_at": 1719492873,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918278",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267612",
                  "name": "Ciaran191 Lee",
                  "email": "admin191@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61038a68186f43bafe01",
                    "external_id": "74"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": "",
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "105",
                    "part_type": "open",
                    "body": null,
                    "created_at": 1719492873,
                    "updated_at": 1719492873,
                    "notified_at": 1719492873,
                    "assigned_to": null,
                    "author": {
                      "id": "991267612",
                      "type": "admin",
                      "name": "Ciaran191 Lee",
                      "email": "admin191@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Open a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "open",
              "admin_id": 991267612
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "405",
              "created_at": 1719492874,
              "updated_at": 1719492875,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918281",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267615",
                  "name": "Ciaran193 Lee",
                  "email": "admin193@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d610a8a68186f43bafe05",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": 991267615,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "106",
                    "part_type": "assign_and_reopen",
                    "body": null,
                    "created_at": 1719492875,
                    "updated_at": 1719492875,
                    "notified_at": 1719492875,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267615"
                    },
                    "author": {
                      "id": "991267615",
                      "type": "admin",
                      "name": "Ciaran193 Lee",
                      "email": "admin193@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Assign a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "assignment",
              "type": "admin",
              "admin_id": 991267615,
              "assignee_id": 991267615
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "394",
              "created_at": 1719492862,
              "updated_at": 1719492862,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918276",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267608",
                  "name": "Ciaran189 Lee",
                  "email": "admin189@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60fd8a68186f43bafdfb",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "102",
                    "part_type": "close",
                    "body": "<p>Goodbye :)</p>",
                    "created_at": 1719492862,
                    "updated_at": 1719492862,
                    "notified_at": 1719492862,
                    "assigned_to": null,
                    "author": {
                      "id": "991267608",
                      "type": "admin",
                      "name": "Ciaran189 Lee",
                      "email": "admin189@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Assign a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "assignment",
              "type": "admin",
              "admin_id": 991267615,
              "assignee_id": 991267615
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "395",
              "created_at": 1719492864,
              "updated_at": 1719492864,
              "waiting_since": null,
              "snoozed_until": 1719496464,
              "source": {
                "type": "conversation",
                "id": "403918277",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267610",
                  "name": "Ciaran190 Lee",
                  "email": "admin190@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60ff8a68186f43bafdfc",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "snoozed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "103",
                    "part_type": "snoozed",
                    "body": null,
                    "created_at": 1719492864,
                    "updated_at": 1719492864,
                    "notified_at": 1719492864,
                    "assigned_to": null,
                    "author": {
                      "id": "991267610",
                      "type": "admin",
                      "name": "Ciaran190 Lee",
                      "email": "admin190@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Assign a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "assignment",
              "type": "admin",
              "admin_id": 991267615,
              "assignee_id": 991267615
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "400",
              "created_at": 1719492863,
              "updated_at": 1719492873,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918278",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267612",
                  "name": "Ciaran191 Lee",
                  "email": "admin191@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61038a68186f43bafe01",
                    "external_id": "74"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": "",
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "105",
                    "part_type": "open",
                    "body": null,
                    "created_at": 1719492873,
                    "updated_at": 1719492873,
                    "notified_at": 1719492873,
                    "assigned_to": null,
                    "author": {
                      "id": "991267612",
                      "type": "admin",
                      "name": "Ciaran191 Lee",
                      "email": "admin191@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Assign a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "assignment",
              "type": "admin",
              "admin_id": 991267615,
              "assignee_id": 991267615
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "405",
              "created_at": 1719492874,
              "updated_at": 1719492875,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918281",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267615",
                  "name": "Ciaran193 Lee",
                  "email": "admin193@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d610a8a68186f43bafe05",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": 991267615,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "106",
                    "part_type": "assign_and_reopen",
                    "body": null,
                    "created_at": 1719492875,
                    "updated_at": 1719492875,
                    "notified_at": 1719492875,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267615"
                    },
                    "author": {
                      "id": "991267615",
                      "type": "admin",
                      "name": "Ciaran193 Lee",
                      "email": "admin193@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267617,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "394",
              "created_at": 1719492862,
              "updated_at": 1719492862,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918276",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267608",
                  "name": "Ciaran189 Lee",
                  "email": "admin189@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60fd8a68186f43bafdfb",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "102",
                    "part_type": "close",
                    "body": "<p>Goodbye :)</p>",
                    "created_at": 1719492862,
                    "updated_at": 1719492862,
                    "notified_at": 1719492862,
                    "assigned_to": null,
                    "author": {
                      "id": "991267608",
                      "type": "admin",
                      "name": "Ciaran189 Lee",
                      "email": "admin189@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267617,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "395",
              "created_at": 1719492864,
              "updated_at": 1719492864,
              "waiting_since": null,
              "snoozed_until": 1719496464,
              "source": {
                "type": "conversation",
                "id": "403918277",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267610",
                  "name": "Ciaran190 Lee",
                  "email": "admin190@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d60ff8a68186f43bafdfc",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "snoozed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "103",
                    "part_type": "snoozed",
                    "body": null,
                    "created_at": 1719492864,
                    "updated_at": 1719492864,
                    "notified_at": 1719492864,
                    "assigned_to": null,
                    "author": {
                      "id": "991267610",
                      "type": "admin",
                      "name": "Ciaran190 Lee",
                      "email": "admin190@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267617,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "400",
              "created_at": 1719492863,
              "updated_at": 1719492873,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918278",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267612",
                  "name": "Ciaran191 Lee",
                  "email": "admin191@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61038a68186f43bafe01",
                    "external_id": "74"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": "",
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "105",
                    "part_type": "open",
                    "body": null,
                    "created_at": 1719492873,
                    "updated_at": 1719492873,
                    "notified_at": 1719492873,
                    "assigned_to": null,
                    "author": {
                      "id": "991267612",
                      "type": "admin",
                      "name": "Ciaran191 Lee",
                      "email": "admin191@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/123/parts",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "close",
              "type": "admin",
              "admin_id": 991267617,
              "body": "Goodbye :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "405",
              "created_at": 1719492874,
              "updated_at": 1719492875,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918281",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267615",
                  "name": "Ciaran193 Lee",
                  "email": "admin193@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d610a8a68186f43bafe05",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": 991267615,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "106",
                    "part_type": "assign_and_reopen",
                    "body": null,
                    "created_at": 1719492875,
                    "updated_at": 1719492875,
                    "notified_at": 1719492875,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267615"
                    },
                    "author": {
                      "id": "991267615",
                      "type": "admin",
                      "name": "Ciaran193 Lee",
                      "email": "admin193@email.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.autoAssignConversation": {
      "id": "endpoint_conversations.autoAssignConversation",
      "description": "You can let a conversation be automatically assigned following assignment rules.\n{% admonition type=\"attention\" name=\"When using workflows\" %}\nIt is not possible to use this endpoint with Workflows.\n{% /admonition %}\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Run Assignment Rules on a conversation",
      "operationId": "autoAssignConversation",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "run_assignment_rules"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The identifier for the conversation as given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "Assign a conversation using assignment rules"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123/run_assignment_rules",
          "responseStatusCode": 200,
          "name": "Assign a Conversation Using Assignment Rules",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "409",
              "created_at": 1719492880,
              "updated_at": 1719492881,
              "waiting_since": null,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918285",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267623",
                  "name": "Ciaran197 Lee",
                  "email": "admin197@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61108a68186f43bafe09",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": null,
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": false,
              "state": "closed",
              "read": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "107",
                    "part_type": "default_assignment",
                    "body": null,
                    "created_at": 1719492881,
                    "updated_at": 1719492881,
                    "notified_at": 1719492881,
                    "assigned_to": {
                      "type": "nobody_admin",
                      "id": null
                    },
                    "author": {
                      "id": "991267624",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id364_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": false
                  }
                ],
                "total_count": 1
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.attachContactToConversation": {
      "id": "endpoint_conversations.attachContactToConversation",
      "description": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\n{% admonition type=\"attention\" name=\"Contacts without an email\" %}\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with `role` set to `lead`.\n{% /admonition %}\n\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Attach a contact to a conversation",
      "operationId": "attachContactToConversation",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "customers"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The identifier for the conversation as given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "attach_contact_to_conversation_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "Attach a contact to a conversation"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123/customers",
          "responseStatusCode": 200,
          "name": "Attach a Contact to a Conversation",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "customers": [
                {
                  "type": "user",
                  "id": "667d61168a68186f43bafe0d"
                }
              ]
            }
          }
        },
        {
          "path": "/conversations/123/customers",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "customers": [
                {
                  "type": "user",
                  "id": "667d61168a68186f43bafe0d"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.detachContactFromConversation": {
      "id": "endpoint_conversations.detachContactFromConversation",
      "description": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\n{% admonition type=\"attention\" name=\"Contacts without an email\" %}\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with `role` set to `lead`.\n{% /admonition %}\n\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Detach a contact from a group conversation",
      "operationId": "detachContactFromConversation",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "conversation_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "customers"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "contact_id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "conversation_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The identifier for the conversation as given by Intercom."
        },
        {
          "key": "contact_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The identifier for the contact as given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "detach_contact_from_conversation_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "Detach a contact from a group conversation"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Contact not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Conversation Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Contact Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 422,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Last customer",
          "name": "Unprocessable Entity",
          "examples": [
            {
              "name": "Last Customer",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Removing the last customer is not allowed"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123/customers/123",
          "responseStatusCode": 200,
          "name": "Detach a Contact from a Group Conversation",
          "pathParameters": {
            "conversation_id": "123",
            "contact_id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "customers": [
                {
                  "type": "user",
                  "id": "667d61228a68186f43bafe19"
                }
              ]
            }
          }
        },
        {
          "path": "/conversations/123/customers/123",
          "responseStatusCode": 200,
          "name": "Conversation Not Found",
          "pathParameters": {
            "conversation_id": "123",
            "contact_id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "customers": [
                {
                  "type": "user",
                  "id": "667d61228a68186f43bafe19"
                }
              ]
            }
          }
        },
        {
          "path": "/conversations/123/customers/123",
          "responseStatusCode": 200,
          "name": "Contact Not Found",
          "pathParameters": {
            "conversation_id": "123",
            "contact_id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "customers": [
                {
                  "type": "user",
                  "id": "667d61228a68186f43bafe19"
                }
              ]
            }
          }
        },
        {
          "path": "/conversations/123/customers/123",
          "responseStatusCode": 200,
          "name": "Last Customer",
          "pathParameters": {
            "conversation_id": "123",
            "contact_id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "customers": [
                {
                  "type": "user",
                  "id": "667d61228a68186f43bafe19"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.redactConversation": {
      "id": "endpoint_conversations.redactConversation",
      "description": "You can redact a conversation part or the source message of a conversation (as seen in the source object).\n\n{% admonition type=\"info\" name=\"Redacting parts and messages\" %}\nIf you are redacting a conversation part, it must have a `body`. If you are redacting a source message, it must have been created by a contact. We will return a `conversation_part_not_redactable` error if these criteria are not met.\n{% /admonition %}\n\n",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Redact a conversation part",
      "operationId": "redactConversation",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "redact"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "redact_conversation_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "conversation"
            }
          },
          "description": "Redact a conversation part"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "conversation_part_or_message_not_found",
                      "message": "Conversation part or message not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/redact",
          "responseStatusCode": 200,
          "name": "Redact a Conversation Part",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "471",
              "created_at": 1719492938,
              "updated_at": 1719492940,
              "waiting_since": 1719492939,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918311",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267657",
                  "name": "Ciaran217 Lee",
                  "email": "admin217@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d614a8a68186f43bafe42",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492939,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "115",
                    "part_type": "open",
                    "body": "<p><i>This message was deleted</i></p>",
                    "created_at": 1719492939,
                    "updated_at": 1719492940,
                    "notified_at": 1719492939,
                    "assigned_to": null,
                    "author": {
                      "id": "667d614a8a68186f43bafe42",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": true
                  }
                ],
                "total_count": 1
              }
            }
          }
        },
        {
          "path": "/conversations/redact",
          "responseStatusCode": 200,
          "name": "Not Found",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "conversation",
              "id": "471",
              "created_at": 1719492938,
              "updated_at": 1719492940,
              "waiting_since": 1719492939,
              "snoozed_until": null,
              "source": {
                "type": "conversation",
                "id": "403918311",
                "delivered_as": "admin_initiated",
                "subject": "",
                "body": "<p>this is the message body</p>",
                "author": {
                  "type": "admin",
                  "id": "991267657",
                  "name": "Ciaran217 Lee",
                  "email": "admin217@email.com"
                },
                "attachments": [],
                "url": null,
                "redacted": false
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d614a8a68186f43bafe42",
                    "external_id": "70"
                  }
                ]
              },
              "first_contact_reply": {
                "created_at": 1719492939,
                "type": "conversation",
                "url": null
              },
              "admin_assignee_id": null,
              "team_assignee_id": null,
              "open": true,
              "state": "open",
              "read": true,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "priority": "not_priority",
              "sla_applied": null,
              "statistics": null,
              "conversation_rating": null,
              "teammates": null,
              "title": null,
              "custom_attributes": {},
              "topics": {},
              "ticket": null,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "ai_agent": null,
              "ai_agent_participated": false,
              "conversation_parts": {
                "type": "conversation_part.list",
                "conversation_parts": [
                  {
                    "type": "conversation_part",
                    "id": "115",
                    "part_type": "open",
                    "body": "<p><i>This message was deleted</i></p>",
                    "created_at": 1719492939,
                    "updated_at": 1719492940,
                    "notified_at": 1719492939,
                    "assigned_to": null,
                    "author": {
                      "id": "667d614a8a68186f43bafe42",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "external_id": null,
                    "redacted": true
                  }
                ],
                "total_count": 1
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_conversations.convertConversationToTicket": {
      "id": "endpoint_conversations.convertConversationToTicket",
      "description": "You can convert a conversation to a ticket.",
      "namespace": [
        "Conversations"
      ],
      "displayName": "Convert a conversation to a ticket",
      "operationId": "convertConversationToTicket",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "conversations"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "convert"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The id of the conversation to target"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "convert_conversation_to_ticket_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Bad request",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Bad Request",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Ticket type is not a customer ticket type"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/conversations/123/convert",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket",
              "id": "474",
              "ticket_id": "37",
              "ticket_attributes": {},
              "ticket_state": "submitted",
              "ticket_type": {
                "type": "ticket_type",
                "id": "79",
                "name": "my-ticket-type-1",
                "description": "my ticket type description is awesome.",
                "icon": "🦁",
                "workspace_id": "this_is_an_id404_that_should_be_at_least_",
                "archived": false,
                "created_at": 1719492947,
                "updated_at": 1719492947,
                "is_internal": false,
                "ticket_type_attributes": {
                  "type": "list",
                  "data": []
                },
                "category": "Customer"
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61518a68186f43bafe45",
                    "external_id": "70"
                  }
                ]
              },
              "admin_assignee_id": "0",
              "team_assignee_id": "0",
              "created_at": 1719492945,
              "updated_at": 1719492947,
              "ticket_parts": {
                "type": "ticket_part.list",
                "ticket_parts": [
                  {
                    "type": "ticket_part",
                    "id": "117",
                    "part_type": "comment",
                    "body": "<p>Comment for message</p>",
                    "created_at": 1719492945,
                    "updated_at": 1719492945,
                    "author": {
                      "id": "667d61518a68186f43bafe45",
                      "type": "user",
                      "name": "Joe Bloggs",
                      "email": "joe@bloggs.com"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "118",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "submitted",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719492947,
                    "updated_at": 1719492947,
                    "author": {
                      "id": "991267667",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id404_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  }
                ],
                "total_count": 2
              },
              "open": true,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "category": "Customer",
              "is_shared": true,
              "ticket_state_internal_label": "Submitted",
              "ticket_state_external_label": "Submitted"
            }
          }
        },
        {
          "path": "/conversations/123/convert",
          "responseStatusCode": 200,
          "name": "Bad Request",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataAttributes.lisDataAttributes": {
      "id": "endpoint_dataAttributes.lisDataAttributes",
      "description": "You can fetch a list of all data attributes belonging to a workspace for contacts, companies or conversations.",
      "namespace": [
        "Data Attributes"
      ],
      "displayName": "List all data attributes",
      "operationId": "lisDataAttributes",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "data_attributes"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "model",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "enum",
                "values": [
                  {
                    "value": "contact"
                  },
                  {
                    "value": "company"
                  },
                  {
                    "value": "conversation"
                  }
                ]
              }
            }
          },
          "description": "Specify the data attribute model to return."
        },
        {
          "key": "include_archived",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "description": "Include archived attributes in the list. By default we return only non archived data attributes."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "data_attribute_list"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/data_attributes",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "queryParameters": {
            "model": "company",
            "include_archived": false
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "data_attribute",
                  "name": "name",
                  "full_name": "name",
                  "label": "Company name",
                  "description": "The name of a company",
                  "data_type": "string",
                  "api_writable": true,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "company_id",
                  "full_name": "company_id",
                  "label": "Company ID",
                  "description": "A number identifying a company",
                  "data_type": "string",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "last_request_at",
                  "full_name": "last_request_at",
                  "label": "Company last seen",
                  "description": "The last day anyone from a company visited your site or app",
                  "data_type": "date",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "remote_created_at",
                  "full_name": "remote_created_at",
                  "label": "Company created at",
                  "description": "The day a company was added to Intercom",
                  "data_type": "date",
                  "api_writable": true,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "user_count",
                  "full_name": "user_count",
                  "label": "People",
                  "description": "The number of people in a company",
                  "data_type": "integer",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "session_count",
                  "full_name": "session_count",
                  "label": "Company web sessions",
                  "description": "All visits from anyone in a company to your product's site or app",
                  "data_type": "integer",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "name",
                  "full_name": "plan.name",
                  "label": "Plan",
                  "description": "A specific plan or level within your product that companies have signed up to",
                  "data_type": "string",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "monthly_spend",
                  "full_name": "monthly_spend",
                  "label": "Monthly Spend",
                  "description": "The monthly revenue you receive from a company",
                  "data_type": "float",
                  "api_writable": true,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "size",
                  "full_name": "size",
                  "label": "Company size",
                  "description": "The number of people employed in this company, expressed as a single number",
                  "data_type": "integer",
                  "api_writable": true,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "industry",
                  "full_name": "industry",
                  "label": "Company industry",
                  "description": "The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'",
                  "data_type": "string",
                  "api_writable": true,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "website",
                  "full_name": "website",
                  "label": "Company website",
                  "description": "The web address for the company's primary marketing site",
                  "data_type": "string",
                  "api_writable": true,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "id": 34,
                  "type": "data_attribute",
                  "name": "The One Ring",
                  "full_name": "custom_attributes.The One Ring",
                  "label": "The One Ring",
                  "description": "One ring to rule them all, one ring to find them, One ring to bring them all and in the darkness bind them.",
                  "data_type": "string",
                  "api_writable": true,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": true,
                  "archived": false,
                  "admin_id": "991267684",
                  "created_at": 1719492954,
                  "updated_at": 1719492954,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "id",
                  "full_name": "id",
                  "label": "ID",
                  "description": "The Intercom defined id representing the company",
                  "data_type": "string",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "created_at",
                  "full_name": "created_at",
                  "label": "Created at",
                  "description": "The time the company was added to Intercom",
                  "data_type": "date",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "updated_at",
                  "full_name": "updated_at",
                  "label": "Updated at",
                  "description": "The last time the company was updated",
                  "data_type": "date",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "id",
                  "full_name": "plan.id",
                  "label": "Plan ID",
                  "description": "The Intercom defined id representing the plan",
                  "data_type": "string",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                },
                {
                  "type": "data_attribute",
                  "name": "app_id",
                  "full_name": "app_id",
                  "label": "App ID",
                  "description": "The Intercom defined id representing the app",
                  "data_type": "string",
                  "api_writable": false,
                  "ui_writable": false,
                  "messenger_writable": true,
                  "custom": false,
                  "archived": false,
                  "model": "company"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataAttributes.createDataAttribute": {
      "id": "endpoint_dataAttributes.createDataAttribute",
      "description": "You can create a data attributes for a `contact` or a `company`.",
      "namespace": [
        "Data Attributes"
      ],
      "displayName": "Create a data attribute",
      "operationId": "createDataAttribute",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "data_attributes"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_data_attribute_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "data_attribute"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Too few options for list",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Same Name Already Exists",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "You already have 'The One Ring' in your company data. To save this as new people data, use a different name."
                    }
                  ]
                }
              }
            },
            {
              "name": "Invalid Name",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Your name for this attribute must only contain alphanumeric characters, currency symbols, and hyphens"
                    }
                  ]
                }
              }
            },
            {
              "name": "Attribute Already Exists",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "You already have 'The One Ring' in your company data. To save this as new company data, use a different name."
                    }
                  ]
                }
              }
            },
            {
              "name": "Invalid Data Type",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Data Type isn't an option"
                    }
                  ]
                }
              }
            },
            {
              "name": "Too Few Options for List",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "The Data Attribute model field must be either contact or company"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/data_attributes",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 37,
              "type": "data_attribute",
              "name": "Mithril Shirt",
              "full_name": "custom_attributes.Mithril Shirt",
              "label": "Mithril Shirt",
              "data_type": "string",
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": false,
              "custom": true,
              "archived": false,
              "admin_id": "991267686",
              "created_at": 1719492955,
              "updated_at": 1719492955,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes",
          "responseStatusCode": 200,
          "name": "Same Name Already Exists",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 37,
              "type": "data_attribute",
              "name": "Mithril Shirt",
              "full_name": "custom_attributes.Mithril Shirt",
              "label": "Mithril Shirt",
              "data_type": "string",
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": false,
              "custom": true,
              "archived": false,
              "admin_id": "991267686",
              "created_at": 1719492955,
              "updated_at": 1719492955,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes",
          "responseStatusCode": 200,
          "name": "Invalid Name",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 37,
              "type": "data_attribute",
              "name": "Mithril Shirt",
              "full_name": "custom_attributes.Mithril Shirt",
              "label": "Mithril Shirt",
              "data_type": "string",
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": false,
              "custom": true,
              "archived": false,
              "admin_id": "991267686",
              "created_at": 1719492955,
              "updated_at": 1719492955,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes",
          "responseStatusCode": 200,
          "name": "Attribute Already Exists",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 37,
              "type": "data_attribute",
              "name": "Mithril Shirt",
              "full_name": "custom_attributes.Mithril Shirt",
              "label": "Mithril Shirt",
              "data_type": "string",
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": false,
              "custom": true,
              "archived": false,
              "admin_id": "991267686",
              "created_at": 1719492955,
              "updated_at": 1719492955,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes",
          "responseStatusCode": 200,
          "name": "Invalid Data Type",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 37,
              "type": "data_attribute",
              "name": "Mithril Shirt",
              "full_name": "custom_attributes.Mithril Shirt",
              "label": "Mithril Shirt",
              "data_type": "string",
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": false,
              "custom": true,
              "archived": false,
              "admin_id": "991267686",
              "created_at": 1719492955,
              "updated_at": 1719492955,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes",
          "responseStatusCode": 200,
          "name": "Too Few Options for List",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 37,
              "type": "data_attribute",
              "name": "Mithril Shirt",
              "full_name": "custom_attributes.Mithril Shirt",
              "label": "Mithril Shirt",
              "data_type": "string",
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": false,
              "custom": true,
              "archived": false,
              "admin_id": "991267686",
              "created_at": 1719492955,
              "updated_at": 1719492955,
              "model": "company"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataAttributes.updateDataAttribute": {
      "id": "endpoint_dataAttributes.updateDataAttribute",
      "description": "\nYou can update a data attribute.\n\n> 🚧 Updating the data type is not possible\n>\n> It is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.\n",
      "namespace": [
        "Data Attributes"
      ],
      "displayName": "Update a data attribute",
      "operationId": "updateDataAttribute",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "data_attributes"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The data attribute id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_data_attribute_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "data_attribute"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Too few options in list",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Too Few Options IN List",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Options isn't an array"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Attribute Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Attribute Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "field_not_found",
                      "message": "We couldn't find that data attribute to update"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 422,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Has Dependant Object",
          "name": "Unprocessable Entity",
          "examples": [
            {
              "name": "Has Dependant Object",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "data_invalid",
                      "message": "The Data Attribute you are trying to archive has a dependant object"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/data_attributes/1",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 1
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 44,
              "type": "data_attribute",
              "name": "The One Ring",
              "full_name": "custom_attributes.The One Ring",
              "label": "The One Ring",
              "description": "Just a plain old ring",
              "data_type": "string",
              "options": [
                "1-10",
                "11-20"
              ],
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": true,
              "custom": true,
              "archived": false,
              "admin_id": "991267693",
              "created_at": 1719492958,
              "updated_at": 1719492959,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes/1",
          "responseStatusCode": 200,
          "name": "Too Few Options IN List",
          "pathParameters": {
            "id": 1
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 44,
              "type": "data_attribute",
              "name": "The One Ring",
              "full_name": "custom_attributes.The One Ring",
              "label": "The One Ring",
              "description": "Just a plain old ring",
              "data_type": "string",
              "options": [
                "1-10",
                "11-20"
              ],
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": true,
              "custom": true,
              "archived": false,
              "admin_id": "991267693",
              "created_at": 1719492958,
              "updated_at": 1719492959,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes/1",
          "responseStatusCode": 200,
          "name": "Attribute Not Found",
          "pathParameters": {
            "id": 1
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 44,
              "type": "data_attribute",
              "name": "The One Ring",
              "full_name": "custom_attributes.The One Ring",
              "label": "The One Ring",
              "description": "Just a plain old ring",
              "data_type": "string",
              "options": [
                "1-10",
                "11-20"
              ],
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": true,
              "custom": true,
              "archived": false,
              "admin_id": "991267693",
              "created_at": 1719492958,
              "updated_at": 1719492959,
              "model": "company"
            }
          }
        },
        {
          "path": "/data_attributes/1",
          "responseStatusCode": 200,
          "name": "Has Dependant Object",
          "pathParameters": {
            "id": 1
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": 44,
              "type": "data_attribute",
              "name": "The One Ring",
              "full_name": "custom_attributes.The One Ring",
              "label": "The One Ring",
              "description": "Just a plain old ring",
              "data_type": "string",
              "options": [
                "1-10",
                "11-20"
              ],
              "api_writable": true,
              "ui_writable": false,
              "messenger_writable": true,
              "custom": true,
              "archived": false,
              "admin_id": "991267693",
              "created_at": 1719492958,
              "updated_at": 1719492959,
              "model": "company"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataEvents.lisDataEvents": {
      "id": "endpoint_dataEvents.lisDataEvents",
      "description": "\n> 🚧\n>\n> Please note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nThe events belonging to a customer can be listed by sending a GET request to `https://api.intercom.io/events` with a user or lead identifier along with a `type` parameter. The identifier parameter can be one of `user_id`, `email` or `intercom_user_id`. The `type` parameter value must be `user`.\n\n- `https://api.intercom.io/events?type=user&user_id={user_id}`\n- `https://api.intercom.io/events?type=user&email={email}`\n- `https://api.intercom.io/events?type=user&intercom_user_id={id}` (this call can be used to list leads)\n\nThe `email` parameter value should be [url encoded](http://en.wikipedia.org/wiki/Percent-encoding) when sending.\n\nYou can optionally define the result page size as well with the `per_page` parameter.\n",
      "namespace": [
        "Data Events"
      ],
      "displayName": "List all data events",
      "operationId": "lisDataEvents",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "events"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "filter",
          "valueShape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "displayName": "user_id query parameter",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "user_id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "displayName": "intercom_user_id query parameter",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "intercom_user_id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "displayName": "email query parameter",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "email",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "key": "type",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The value must be user"
        },
        {
          "key": "summary",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "description": "summary flag"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "data_event_summary"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/events",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "queryParameters": {
            "filter": {
              "user_id": "user_id"
            },
            "type": "type",
            "summary": false
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "event.summary",
              "events": [],
              "pages": {
                "next": "http://api.intercom.test/events?next page"
              },
              "email": "user26@email.com",
              "intercom_user_id": "667d61648a68186f43bafe4b",
              "user_id": "test-uuid-replacement"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataEvents.createDataEvent": {
      "id": "endpoint_dataEvents.createDataEvent",
      "description": "\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a `Content-Type` of `application/json`.\n\nWhen using the JavaScript API, [adding the code to your app](http://docs.intercom.io/configuring-Intercom/tracking-user-events-in-your-app) makes the Events API available. Once added, you can submit an event using the `trackEvent` method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to `Intercom::Event.create`, or call the `track_user` method directly on the current user object (e.g. `user.track_event`).\n\n**NB: For the JSON object types, please note that we do not currently support nested JSON structure.**\n\n| Type            | Description                                                                                                                                                                                                     | Example                                                                           |\n| :-------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------- |\n| String          | The value is a JSON String                                                                                                                                                                                      | `\"source\":\"desktop\"`                                                              |\n| Number          | The value is a JSON Number                                                                                                                                                                                      | `\"load\": 3.67`                                                                    |\n| Date            | The key ends with the String `_date` and the value is a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time), assumed to be in the [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time) timezone. | `\"contact_date\": 1392036272`                                                      |\n| Link            | The value is a HTTP or HTTPS URI.                                                                                                                                                                               | `\"article\": \"https://example.org/ab1de.html\"`                                     |\n| Rich Link       | The value is a JSON object that contains `url` and `value` keys.                                                                                                                                                | `\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}` |\n| Monetary Amount | The value is a JSON object that contains `amount` and `currency` keys. The `amount` key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.          | `\"price\": {\"amount\": 34999, \"currency\": \"eur\"}`                                   |\n\n**Lead Events**\n\nWhen submitting events for Leads, you will need to specify the Lead's `id`.\n\n**Metadata behaviour**\n\n- We currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\n- It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\n- There might be up to 24 hrs delay when you send a new metadata for an existing event.\n\n**Event de-duplication**\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is **strongly recommended** to send a second granularity Unix timestamp in the `created_at` field.\n\nDuplicated events are responded to using the normal `202 Accepted` code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\n### HTTP API Responses\n\n- Successful responses to submitted events return `202 Accepted` with an empty body.\n- Unauthorised access will be rejected with a `401 Unauthorized` or `403 Forbidden` response code.\n- Events sent about users that cannot be found will return a `404 Not Found`.\n- Event lists containing duplicate events will have those duplicates ignored.\n- Server errors will return a `500` response code and may contain an error message in the body.\n\n",
      "namespace": [
        "Data Events"
      ],
      "displayName": "Submit a data event",
      "operationId": "createDataEvent",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "events"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_data_event_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 202,
          "body": {
            "type": "empty"
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/events",
          "responseStatusCode": 202,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataEvents.dataEventSummaries": {
      "id": "endpoint_dataEvents.dataEventSummaries",
      "description": "Create event summaries for a user. Event summaries are used to track the number of times an event has occurred, the first time it occurred and the last time it occurred.\n\n",
      "namespace": [
        "Data Events"
      ],
      "displayName": "Create event summaries",
      "operationId": "dataEventSummaries",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "events"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "summaries"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_data_event_summaries_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "empty"
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/events/summaries",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataExport.createDataExport": {
      "id": "endpoint_dataExport.createDataExport",
      "description": "To create your export job, you need to send a `POST` request to the export endpoint `https://api.intercom.io/export/content/data`.\n\nThe only parameters you need to provide are the range of dates that you want exported.\n\n>🚧 Limit of one active job\n>\n> You can only have one active job per workspace. You will receive a HTTP status code of 429 with the message Exceeded rate limit of 1 pending message data export jobs if you attempt to create a second concurrent job.\n\n>❗️ Updated_at not included\n>\n> It should be noted that the timeframe only includes messages sent during the time period and not messages that were only updated during this period. For example, if a message was updated yesterday but sent two days ago, you would need to set the created_at_after date before the message was sent to include that in your retrieval job.\n\n>📘 Date ranges are inclusive\n>\n> Requesting data for 2018-06-01 until 2018-06-30 will get all data for those days including those specified - e.g. 2018-06-01 00:00:00 until 2018-06-30 23:59:99.\n",
      "namespace": [
        "Data Export"
      ],
      "displayName": "Create content data export",
      "operationId": "createDataExport",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "export"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "content"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "data"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_data_exports_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "data_export"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/export/content/data",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "job_identifier": "bxe9awlish03jkq8",
              "status": "pending",
              "download_url": "",
              "download_expires_at": ""
            }
          }
        },
        {
          "path": "/export/content/data",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataExport.getDataExport": {
      "id": "endpoint_dataExport.getDataExport",
      "description": "You can view the status of your job by sending a `GET` request to the URL\n`https://api.intercom.io/export/content/data/{job_identifier}` - the `{job_identifier}` is the value returned in the response when you first created the export job. More on it can be seen in the Export Job Model.\n\n> 🚧 Jobs expire after two days\n> All jobs that have completed processing (and are thus available to download from the provided URL) will have an expiry limit of two days from when the export ob completed. After this, the data will no longer be available.\n",
      "namespace": [
        "Data Export"
      ],
      "displayName": "Show content data export",
      "operationId": "getDataExport",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "export"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "content"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "data"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "job_identifier"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "job_identifier",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "job_identifier"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "data_export"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/export/content/data/job_identifier",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "job_identifier": "job_identifier"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "job_identifier": "b1ppo8h93fj386fk",
              "status": "pending",
              "download_url": "",
              "download_expires_at": ""
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataExport.cancelDataExport": {
      "id": "endpoint_dataExport.cancelDataExport",
      "description": "You can cancel your job",
      "namespace": [
        "Data Export"
      ],
      "displayName": "Cancel content data export",
      "operationId": "cancelDataExport",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "export"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "cancel"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "job_identifier"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "job_identifier",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "job_identifier"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "data_export"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/export/cancel/job_identifier",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "job_identifier": "job_identifier"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "job_identifier": "pwrbmmimhakvlfsh",
              "status": "canceled",
              "download_url": "",
              "download_expires_at": ""
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_dataExport.downloadDataExport": {
      "id": "endpoint_dataExport.downloadDataExport",
      "description": "When a job has a status of complete, and thus a filled download_url, you can download your data by hitting that provided URL, formatted like so: https://api.intercom.io/download/content/data/xyz1234.\n\nYour exported message data will be streamed continuously back down to you in a gzipped CSV format.\n\n> 📘 Octet header required\n>\n> You will have to specify the header Accept: `application/octet-stream` when hitting this endpoint.\n",
      "namespace": [
        "Data Export"
      ],
      "displayName": "Download content data export",
      "operationId": "downloadDataExport",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "download"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "content"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "data"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "job_identifier"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "job_identifier",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "job_identifier"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "empty"
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/download/content/data/job_identifier",
          "responseStatusCode": 200,
          "pathParameters": {
            "job_identifier": "job_identifier"
          },
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_messages.createMessage": {
      "id": "endpoint_messages.createMessage",
      "description": "You can create a message that has been initiated by an admin. The conversation can be either an in-app message or an email.\n\n> 🚧 Sending for visitors\n>\n> There can be a short delay between when a contact is created and when a contact becomes available to be messaged through the API. A 404 Not Found error will be returned in this case.\n\nThis will return the Message model that has been created.\n\n> 🚧 Retrieving Associated Conversations\n>\n> As this is a message, there will be no conversation present until the contact responds. Once they do, you will have to search for a contact's conversations with the id of the message.\n",
      "namespace": [
        "Messages"
      ],
      "displayName": "Create a message",
      "operationId": "createMessage",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "messages"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_message_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "message"
            }
          },
          "description": "admin message created"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "No body supplied for email message",
          "name": "Bad Request",
          "examples": [
            {
              "name": "No Body Supplied for Message",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Body is required"
                    }
                  ]
                }
              }
            },
            {
              "name": "No Body Supplied for Email Message",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Body is required"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 403,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "API plan restricted",
          "name": "Forbidden",
          "examples": [
            {
              "name": "API Plan Restricted",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 422,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "No subject supplied for email message",
          "name": "Unprocessable Entity",
          "examples": [
            {
              "name": "No Subject Supplied for Email Message",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "No subject supplied for email message"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "User Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918316",
              "created_at": 1719492969,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "476"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "User Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918317",
              "created_at": 1719492971,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "477"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "User Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin_message",
              "id": "15",
              "created_at": 1719492972,
              "subject": "heyy",
              "body": "heyy",
              "message_type": "inapp",
              "owner": {
                "type": "admin",
                "id": "991267716",
                "name": "Ciaran269 Lee",
                "email": "admin269@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              }
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "Lead Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918316",
              "created_at": 1719492969,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "476"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "Lead Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918317",
              "created_at": 1719492971,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "477"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "Lead Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin_message",
              "id": "15",
              "created_at": 1719492972,
              "subject": "heyy",
              "body": "heyy",
              "message_type": "inapp",
              "owner": {
                "type": "admin",
                "id": "991267716",
                "name": "Ciaran269 Lee",
                "email": "admin269@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              }
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "Admin Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918316",
              "created_at": 1719492969,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "476"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "Admin Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918317",
              "created_at": 1719492971,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "477"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "Admin Message Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin_message",
              "id": "15",
              "created_at": 1719492972,
              "subject": "heyy",
              "body": "heyy",
              "message_type": "inapp",
              "owner": {
                "type": "admin",
                "id": "991267716",
                "name": "Ciaran269 Lee",
                "email": "admin269@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              }
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Body Supplied for Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918316",
              "created_at": 1719492969,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "476"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Body Supplied for Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918317",
              "created_at": 1719492971,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "477"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Body Supplied for Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin_message",
              "id": "15",
              "created_at": 1719492972,
              "subject": "heyy",
              "body": "heyy",
              "message_type": "inapp",
              "owner": {
                "type": "admin",
                "id": "991267716",
                "name": "Ciaran269 Lee",
                "email": "admin269@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              }
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Subject Supplied for Email Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918316",
              "created_at": 1719492969,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "476"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Subject Supplied for Email Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918317",
              "created_at": 1719492971,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "477"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Subject Supplied for Email Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin_message",
              "id": "15",
              "created_at": 1719492972,
              "subject": "heyy",
              "body": "heyy",
              "message_type": "inapp",
              "owner": {
                "type": "admin",
                "id": "991267716",
                "name": "Ciaran269 Lee",
                "email": "admin269@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              }
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Body Supplied for Email Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918316",
              "created_at": 1719492969,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "476"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Body Supplied for Email Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "user_message",
              "id": "403918317",
              "created_at": 1719492971,
              "body": "heyy",
              "message_type": "inapp",
              "conversation_id": "477"
            }
          }
        },
        {
          "path": "/messages",
          "responseStatusCode": 200,
          "name": "No Body Supplied for Email Message",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "admin_message",
              "id": "15",
              "created_at": 1719492972,
              "subject": "heyy",
              "body": "heyy",
              "message_type": "inapp",
              "owner": {
                "type": "admin",
                "id": "991267716",
                "name": "Ciaran269 Lee",
                "email": "admin269@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              }
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.listNewsItems": {
      "id": "endpoint_news.listNewsItems",
      "description": "You can fetch a list of all news items",
      "namespace": [
        "News"
      ],
      "displayName": "List all news items",
      "operationId": "listNewsItems",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news_items"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "paginated_response"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/news_items",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "pages": {
                "page": 1,
                "per_page": 10,
                "total_pages": 1,
                "type": "pages"
              },
              "data": [
                {
                  "id": "29",
                  "type": "news-item",
                  "workspace_id": "this_is_an_id494_that_should_be_at_least_",
                  "title": "We have news",
                  "body": "<p>Hello there,</p>",
                  "sender_id": 991267725,
                  "state": "draft",
                  "labels": [],
                  "cover_image_url": null,
                  "reactions": [
                    null,
                    null,
                    null,
                    null
                  ],
                  "deliver_silently": false,
                  "created_at": 1719492976,
                  "updated_at": 1719492976,
                  "newsfeed_assignments": []
                },
                {
                  "id": "30",
                  "type": "news-item",
                  "workspace_id": "this_is_an_id494_that_should_be_at_least_",
                  "title": "We have news",
                  "body": "<p>Hello there,</p>",
                  "sender_id": 991267727,
                  "state": "draft",
                  "labels": [],
                  "cover_image_url": null,
                  "reactions": [
                    null,
                    null,
                    null,
                    null
                  ],
                  "deliver_silently": false,
                  "created_at": 1719492976,
                  "updated_at": 1719492976,
                  "newsfeed_assignments": []
                }
              ],
              "total_count": 2
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.createNewsItem": {
      "id": "endpoint_news.createNewsItem",
      "description": "You can create a news item",
      "namespace": [
        "News"
      ],
      "displayName": "Create a news item",
      "operationId": "createNewsItem",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news_items"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "news_item_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "news_item"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/news_items",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "33",
              "type": "news-item",
              "workspace_id": "this_is_an_id498_that_should_be_at_least_",
              "title": "Halloween is here!",
              "body": "<p>New costumes in store for this spooky season</p>",
              "sender_id": 991267734,
              "state": "live",
              "labels": [
                "New",
                "Product",
                "Update"
              ],
              "cover_image_url": null,
              "reactions": [
                "😆",
                "😅"
              ],
              "deliver_silently": true,
              "created_at": 1719492978,
              "updated_at": 1719492978,
              "newsfeed_assignments": [
                {
                  "newsfeed_id": 53,
                  "published_at": 1664638214
                }
              ]
            }
          }
        },
        {
          "path": "/news/news_items",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.retrieveNewsItem": {
      "id": "endpoint_news.retrieveNewsItem",
      "description": "You can fetch the details of a single news item.",
      "namespace": [
        "News"
      ],
      "displayName": "Retrieve a news item",
      "operationId": "retrieveNewsItem",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news_items"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the news item which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "news_item"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "News Item Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "News Item Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/news_items/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "34",
              "type": "news-item",
              "workspace_id": "this_is_an_id502_that_should_be_at_least_",
              "title": "We have news",
              "body": "<p>Hello there,</p>",
              "sender_id": 991267737,
              "state": "live",
              "labels": [],
              "cover_image_url": null,
              "reactions": [
                null,
                null,
                null,
                null
              ],
              "deliver_silently": false,
              "created_at": 1719492979,
              "updated_at": 1719492979,
              "newsfeed_assignments": [
                {
                  "newsfeed_id": 55,
                  "published_at": 1719492980
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.updateNewsItem": {
      "id": "endpoint_news.updateNewsItem",
      "namespace": [
        "News"
      ],
      "displayName": "Update a news item",
      "operationId": "updateNewsItem",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news_items"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the news item which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "news_item_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "news_item"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "News Item Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "News Item Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/news_items/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "37",
              "type": "news-item",
              "workspace_id": "this_is_an_id508_that_should_be_at_least_",
              "title": "Christmas is here!",
              "body": "<p>New gifts in store for the jolly season</p>",
              "sender_id": 991267745,
              "state": "live",
              "labels": [],
              "cover_image_url": null,
              "reactions": [
                "😝",
                "😂"
              ],
              "deliver_silently": false,
              "created_at": 1719492982,
              "updated_at": 1719492982,
              "newsfeed_assignments": []
            }
          }
        },
        {
          "path": "/news/news_items/123",
          "responseStatusCode": 200,
          "name": "News Item Not Found",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.deleteNewsItem": {
      "id": "endpoint_news.deleteNewsItem",
      "description": "You can delete a single news item.",
      "namespace": [
        "News"
      ],
      "displayName": "Delete a news item",
      "operationId": "deleteNewsItem",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news_items"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier for the news item which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "deleted_object"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "News Item Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "News Item Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/news_items/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": 123
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "40",
              "object": "news-item",
              "deleted": true
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.listLiveNewsfeedItems": {
      "id": "endpoint_news.listLiveNewsfeedItems",
      "description": "You can fetch a list of all news items that are live on a given newsfeed",
      "namespace": [
        "News"
      ],
      "displayName": "List all live newsfeed items",
      "operationId": "listLiveNewsfeedItems",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "newsfeeds"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "items"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the news feed item which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "paginated_response"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/newsfeeds/123/items",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "pages": {
                "page": 1,
                "per_page": 20,
                "total_pages": 0,
                "type": "pages"
              },
              "data": [],
              "total_count": 0
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.listNewsfeeds": {
      "id": "endpoint_news.listNewsfeeds",
      "description": "You can fetch a list of all newsfeeds",
      "namespace": [
        "News"
      ],
      "displayName": "List all newsfeeds",
      "operationId": "listNewsfeeds",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "newsfeeds"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "paginated_response"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/newsfeeds",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "pages": {
                "page": 1,
                "per_page": 10,
                "total_pages": 1,
                "type": "pages"
              },
              "data": [
                {
                  "id": "68",
                  "type": "newsfeed",
                  "name": "Visitor Feed",
                  "created_at": 1719492987,
                  "updated_at": 1719492987
                },
                {
                  "id": "69",
                  "type": "newsfeed",
                  "name": "Visitor Feed",
                  "created_at": 1719492987,
                  "updated_at": 1719492987
                }
              ],
              "total_count": 2
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_news.retrieveNewsfeed": {
      "id": "endpoint_news.retrieveNewsfeed",
      "description": "You can fetch the details of a single newsfeed",
      "namespace": [
        "News"
      ],
      "displayName": "Retrieve a newsfeed",
      "operationId": "retrieveNewsfeed",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "news"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "newsfeeds"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the news feed item which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "newsfeed"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/news/newsfeeds/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "id": "72",
              "type": "newsfeed",
              "name": "Visitor Feed",
              "created_at": 1719492988,
              "updated_at": 1719492988
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_notes.retrieveNote": {
      "id": "endpoint_notes.retrieveNote",
      "description": "You can fetch the details of a single note.",
      "namespace": [
        "Notes"
      ],
      "displayName": "Retrieve a note",
      "operationId": "retrieveNote",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "notes"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The unique identifier of a given note"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "note"
            }
          },
          "description": "Note found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Note not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Note Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/notes/1",
          "responseStatusCode": 200,
          "name": "Note Found",
          "pathParameters": {
            "id": 1
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "note",
              "id": "37",
              "created_at": 1718801789,
              "contact": {
                "type": "contact",
                "id": "667d617d8a68186f43bafe58"
              },
              "author": {
                "type": "admin",
                "id": "991267764",
                "name": "Ciaran316 Lee",
                "email": "admin316@email.com",
                "away_mode_enabled": false,
                "away_mode_reassign": false
              },
              "body": "<p>This is a note.</p>"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_segments.listSegments": {
      "id": "endpoint_segments.listSegments",
      "description": "You can fetch a list of all segments.",
      "namespace": [
        "Segments"
      ],
      "displayName": "List all segments",
      "operationId": "listSegments",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "segments"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "include_count",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "description": "It includes the count of contacts that belong to each segment."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "segment_list"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/segments",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "queryParameters": {
            "include_count": true
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "segment.list",
              "segments": [
                {
                  "type": "segment",
                  "id": "667d617f8a68186f43bafe5b",
                  "name": "John segment",
                  "created_at": 1719492991,
                  "updated_at": 1719492991,
                  "person_type": "user"
                },
                {
                  "type": "segment",
                  "id": "667d617f8a68186f43bafe5c",
                  "name": "Jane segment",
                  "created_at": 1719492991,
                  "updated_at": 1719492991,
                  "person_type": "user"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_segments.retrieveSegment": {
      "id": "endpoint_segments.retrieveSegment",
      "description": "You can fetch the details of a single segment.",
      "namespace": [
        "Segments"
      ],
      "displayName": "Retrieve a segment",
      "operationId": "retrieveSegment",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "segments"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identified of a given segment."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "segment"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Segment not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Segment Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/segments/123",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "segment",
              "id": "667d61808a68186f43bafe5f",
              "name": "John segment",
              "created_at": 1719492992,
              "updated_at": 1719492992,
              "person_type": "user"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_subscriptionTypes.listSubscriptionTypes": {
      "id": "endpoint_subscriptionTypes.listSubscriptionTypes",
      "description": "You can list all subscription types. A list of subscription type objects will be returned.",
      "namespace": [
        "Subscription Types"
      ],
      "displayName": "List subscription types",
      "operationId": "listSubscriptionTypes",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "subscription_types"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "subscription_type_list"
            }
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/subscription_types",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "subscription",
                  "id": "137",
                  "state": "live",
                  "consent_type": "opt_out",
                  "default_translation": {
                    "name": "Newsletters",
                    "description": "Lorem ipsum dolor sit amet",
                    "locale": "en"
                  },
                  "translations": [
                    {
                      "name": "Newsletters",
                      "description": "Lorem ipsum dolor sit amet",
                      "locale": "en"
                    }
                  ],
                  "content_types": [
                    "email"
                  ]
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_switch.createPhoneSwitch": {
      "id": "endpoint_switch.createPhoneSwitch",
      "description": "You can use the API to deflect phone calls to the Intercom Messenger.\nCalling this endpoint will send an SMS with a link to the Messenger to the phone number specified.\n\nIf custom attributes are specified, they will be added to the user or lead's custom data attributes.\n",
      "namespace": [
        "Switch"
      ],
      "displayName": "Create a phone Switch",
      "operationId": "createPhoneSwitch",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "phone_call_redirects"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_phone_switch_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "phone_switch"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/phone_call_redirects",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "url": "http://via.intercom.io/msgr/6eb60123-dadb-4881-80fd-4fc2cf272b12",
              "type": "phone_call_redirect"
            }
          }
        },
        {
          "path": "/phone_call_redirects",
          "responseStatusCode": 200,
          "name": "Bad Request   Exception Sending Sms",
          "headers": {
            "Intercom-Version": "2.11"
          }
        },
        {
          "path": "/phone_call_redirects",
          "responseStatusCode": 200,
          "name": "Bad Request   Invalid Number",
          "headers": {
            "Intercom-Version": "2.11"
          }
        },
        {
          "path": "/phone_call_redirects",
          "responseStatusCode": 200,
          "name": "Unprocessable Entity",
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tags.listTags": {
      "id": "endpoint_tags.listTags",
      "description": "You can fetch a list of all tags for a given workspace.\n\n",
      "namespace": [
        "Tags"
      ],
      "displayName": "List all tags",
      "operationId": "listTags",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tags",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "tag",
                  "id": "115",
                  "name": "Manual tag 1"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tags.createTag": {
      "id": "endpoint_tags.createTag",
      "description": "You can use this endpoint to perform the following operations:\n\n  **1. Create a new tag:** You can create a new tag by passing in the tag name as specified in \"Create or Update Tag Request Payload\" described below.\n\n  **2. Update an existing tag:** You can update an existing tag by passing the id of the tag as specified in \"Create or Update Tag Request Payload\" described below.\n\n  **3. Tag Companies:** You can tag single company or a list of companies. You can tag a company by passing in the tag name and the company details as specified in \"Tag Company Request Payload\" described below. Also, if the tag doesn't exist then a new one will be created automatically.\n\n  **4. Untag Companies:** You can untag a single company or a list of companies. You can untag a company by passing in the tag id and the company details as specified in \"Untag Company Request Payload\" described below.\n\n  **5. Tag Multiple Users:** You can tag a list of users. You can tag the users by passing in the tag name and the user details as specified in \"Tag Users Request Payload\" described below.\n\nEach operation will return a tag object.\n",
      "namespace": [
        "Tags"
      ],
      "displayName": "Create or update a tag, Tag or untag companies, Tag contacts",
      "operationId": "createTag",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "postTagsJsonRequest"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "Action successful"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Invalid parameters",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Invalid Parameters",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "invalid tag parameters"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "User  not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Company Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found"
                    }
                  ]
                }
              }
            },
            {
              "name": "User  Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tags",
          "responseStatusCode": 200,
          "name": "Action Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "name": "test"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "118",
              "name": "test"
            }
          }
        },
        {
          "path": "/tags",
          "responseStatusCode": 200,
          "name": "Invalid Parameters",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "test": "invalid"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "118",
              "name": "test"
            }
          }
        },
        {
          "path": "/tags",
          "responseStatusCode": 200,
          "name": "Company Not Found",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "name": "test",
              "companies": [
                {
                  "company_id": "123"
                }
              ]
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "118",
              "name": "test"
            }
          }
        },
        {
          "path": "/tags",
          "responseStatusCode": 200,
          "name": "User Not Found",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "name": "test",
              "users": [
                {
                  "id": "123"
                }
              ]
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "118",
              "name": "test"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tags.findTag": {
      "id": "endpoint_tags.findTag",
      "description": "You can fetch the details of tags that are on the workspace by their id.\nThis will return a tag object.\n",
      "namespace": [
        "Tags"
      ],
      "displayName": "Find a specific tag",
      "operationId": "findTag",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier of a given tag"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "Tag found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Tag not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Tag Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tags/123",
          "responseStatusCode": 200,
          "name": "Tag Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "126",
              "name": "Manual tag"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tags.deleteTag": {
      "id": "endpoint_tags.deleteTag",
      "description": "You can delete the details of tags that are on the workspace by passing in the id.",
      "namespace": [
        "Tags"
      ],
      "displayName": "Delete tag",
      "operationId": "deleteTag",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier of a given tag"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "empty"
          },
          "description": "Successful"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Tag has dependent objects",
          "name": "Bad Request",
          "examples": [
            {
              "name": "Tag Has Dependent Objects",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "tag_has_dependent_objects",
                      "message": "Unable to delete Tag with dependent objects. Segments: Seg 1."
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Resource not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Resource Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tags/123",
          "responseStatusCode": 200,
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_teams.listTeams": {
      "id": "endpoint_teams.listTeams",
      "description": "This will return a list of team objects for the App.",
      "namespace": [
        "Teams"
      ],
      "displayName": "List all teams",
      "operationId": "listTeams",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "teams"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "team_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/teams",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "team.list",
              "teams": []
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_teams.retrieveTeam": {
      "id": "endpoint_teams.retrieveTeam",
      "description": "You can fetch the details of a single team, containing an array of admins that belong to this team.",
      "namespace": [
        "Teams"
      ],
      "displayName": "Retrieve a team",
      "operationId": "retrieveTeam",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "teams"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier of a given team."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "team"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Team not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Team Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "team_not_found",
                      "message": "Team not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/teams/123",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "team",
              "id": "991267802",
              "name": "team 1",
              "admin_ids": []
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_ticketTypeAttributes.createTicketTypeAttribute": {
      "id": "endpoint_ticketTypeAttributes.createTicketTypeAttribute",
      "description": "You can create a new attribute for a ticket type.",
      "namespace": [
        "Ticket Type Attributes"
      ],
      "displayName": "Create a new attribute for a ticket type",
      "operationId": "createTicketTypeAttribute",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "ticket_types"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "ticket_type_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "attributes"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "ticket_type_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the ticket type which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_ticket_type_attribute_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_type_attribute"
            }
          },
          "description": "Ticket Type Attribute created"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/ticket_types/ticket_type_id/attributes",
          "responseStatusCode": 200,
          "name": "Ticket Type Attribute Created",
          "pathParameters": {
            "ticket_type_id": "ticket_type_id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_type_attribute",
              "id": "210",
              "workspace_id": "this_is_an_id600_that_should_be_at_least_",
              "name": "Attribute Title",
              "description": "Attribute Description",
              "data_type": "string",
              "input_options": {
                "multiline": false
              },
              "order": 2,
              "required_to_create": false,
              "required_to_create_for_contacts": false,
              "visible_on_create": true,
              "visible_to_contacts": true,
              "default": false,
              "ticket_type_id": 81,
              "archived": false,
              "created_at": 1719493013,
              "updated_at": 1719493013
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_ticketTypeAttributes.updateTicketTypeAttribute": {
      "id": "endpoint_ticketTypeAttributes.updateTicketTypeAttribute",
      "description": "You can update an existing attribute for a ticket type.",
      "namespace": [
        "Ticket Type Attributes"
      ],
      "displayName": "Update an existing attribute for a ticket type",
      "operationId": "updateTicketTypeAttribute",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "ticket_types"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "ticket_type_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "attributes"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "ticket_type_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the ticket type which is given by Intercom."
        },
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the ticket type attribute which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_ticket_type_attribute_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_type_attribute"
            }
          },
          "description": "Ticket Type Attribute updated"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/ticket_types/ticket_type_id/attributes/id",
          "responseStatusCode": 200,
          "name": "Ticket Type Attribute Updated",
          "pathParameters": {
            "ticket_type_id": "ticket_type_id",
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_type_attribute",
              "id": "215",
              "workspace_id": "this_is_an_id604_that_should_be_at_least_",
              "name": "name",
              "description": "New Attribute Description",
              "data_type": "string",
              "order": 0,
              "required_to_create": false,
              "required_to_create_for_contacts": false,
              "visible_on_create": false,
              "visible_to_contacts": false,
              "default": false,
              "ticket_type_id": 83,
              "archived": false,
              "created_at": 1719493013,
              "updated_at": 1719493014
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_ticketTypes.listTicketTypes": {
      "id": "endpoint_ticketTypes.listTicketTypes",
      "description": "You can get a list of all ticket types for a workspace.",
      "namespace": [
        "Ticket Types"
      ],
      "displayName": "List all ticket types",
      "operationId": "listTicketTypes",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "ticket_types"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_type_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/ticket_types",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "list",
              "data": [
                {
                  "type": "ticket_type",
                  "id": "85",
                  "name": "Bug Report",
                  "description": "Bug Report Template",
                  "icon": "🎟️",
                  "workspace_id": "this_is_an_id608_that_should_be_at_least_",
                  "archived": false,
                  "created_at": 1719493014,
                  "updated_at": 1719493014,
                  "is_internal": false,
                  "ticket_type_attributes": {
                    "type": "list",
                    "data": [
                      {
                        "type": "ticket_type_attribute",
                        "id": "218",
                        "workspace_id": "this_is_an_id608_that_should_be_at_least_",
                        "name": "_default_title_",
                        "description": "",
                        "data_type": "string",
                        "input_options": {
                          "multiline": false
                        },
                        "order": 0,
                        "required_to_create": false,
                        "required_to_create_for_contacts": false,
                        "visible_on_create": true,
                        "visible_to_contacts": true,
                        "default": true,
                        "ticket_type_id": 85,
                        "archived": false,
                        "created_at": 1719493014,
                        "updated_at": 1719493014
                      },
                      {
                        "type": "ticket_type_attribute",
                        "id": "220",
                        "workspace_id": "this_is_an_id608_that_should_be_at_least_",
                        "name": "name",
                        "description": "description",
                        "data_type": "string",
                        "input_options": null,
                        "order": 0,
                        "required_to_create": false,
                        "required_to_create_for_contacts": false,
                        "visible_on_create": false,
                        "visible_to_contacts": false,
                        "default": false,
                        "ticket_type_id": 85,
                        "archived": false,
                        "created_at": 1719493014,
                        "updated_at": 1719493014
                      },
                      {
                        "type": "ticket_type_attribute",
                        "id": "219",
                        "workspace_id": "this_is_an_id608_that_should_be_at_least_",
                        "name": "_default_description_",
                        "description": "",
                        "data_type": "string",
                        "input_options": {
                          "multiline": true
                        },
                        "order": 1,
                        "required_to_create": false,
                        "required_to_create_for_contacts": false,
                        "visible_on_create": true,
                        "visible_to_contacts": true,
                        "default": true,
                        "ticket_type_id": 85,
                        "archived": false,
                        "created_at": 1719493014,
                        "updated_at": 1719493014
                      }
                    ]
                  },
                  "category": "Customer"
                }
              ]
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_ticketTypes.createTicketType": {
      "id": "endpoint_ticketTypes.createTicketType",
      "description": "You can create a new ticket type.\n> 📘 Creating ticket types.\n>\n> Every ticket type will be created with two default attributes: _default_title_ and _default_description_.\n> For the `icon` propery, use an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
      "namespace": [
        "Ticket Types"
      ],
      "displayName": "Create a ticket type",
      "operationId": "createTicketType",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "ticket_types"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_ticket_type_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_type"
            }
          },
          "description": "Ticket type created"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/ticket_types",
          "responseStatusCode": 200,
          "name": "Ticket Type Created",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_type",
              "id": "88",
              "name": "Customer Issue",
              "description": "Customer Report Template",
              "icon": "🎟️",
              "workspace_id": "this_is_an_id612_that_should_be_at_least_",
              "archived": false,
              "created_at": 1719493016,
              "updated_at": 1719493016,
              "is_internal": false,
              "ticket_type_attributes": {
                "type": "list",
                "data": [
                  {
                    "type": "ticket_type_attribute",
                    "id": "227",
                    "workspace_id": "this_is_an_id612_that_should_be_at_least_",
                    "name": "_default_title_",
                    "description": "",
                    "data_type": "string",
                    "input_options": {
                      "multiline": false
                    },
                    "order": 0,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": true,
                    "visible_to_contacts": true,
                    "default": true,
                    "ticket_type_id": 88,
                    "archived": false,
                    "created_at": 1719493016,
                    "updated_at": 1719493016
                  },
                  {
                    "type": "ticket_type_attribute",
                    "id": "228",
                    "workspace_id": "this_is_an_id612_that_should_be_at_least_",
                    "name": "_default_description_",
                    "description": "",
                    "data_type": "string",
                    "input_options": {
                      "multiline": true
                    },
                    "order": 1,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": true,
                    "visible_to_contacts": true,
                    "default": true,
                    "ticket_type_id": 88,
                    "archived": false,
                    "created_at": 1719493016,
                    "updated_at": 1719493016
                  }
                ]
              },
              "category": "Customer"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_ticketTypes.getTicketType": {
      "id": "endpoint_ticketTypes.getTicketType",
      "description": "You can fetch the details of a single ticket type.",
      "namespace": [
        "Ticket Types"
      ],
      "displayName": "Retrieve a ticket type",
      "operationId": "getTicketType",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "ticket_types"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the ticket type which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_type"
            }
          },
          "description": "Ticket type found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/ticket_types/id",
          "responseStatusCode": 200,
          "name": "Ticket Type Found",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_type",
              "id": "90",
              "name": "Bug Report",
              "description": "Bug Report Template",
              "icon": "🎟️",
              "workspace_id": "this_is_an_id616_that_should_be_at_least_",
              "archived": false,
              "created_at": 1719493017,
              "updated_at": 1719493017,
              "is_internal": false,
              "ticket_type_attributes": {
                "type": "list",
                "data": [
                  {
                    "type": "ticket_type_attribute",
                    "id": "232",
                    "workspace_id": "this_is_an_id616_that_should_be_at_least_",
                    "name": "_default_title_",
                    "description": "",
                    "data_type": "string",
                    "input_options": {
                      "multiline": false
                    },
                    "order": 0,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": true,
                    "visible_to_contacts": true,
                    "default": true,
                    "ticket_type_id": 90,
                    "archived": false,
                    "created_at": 1719493017,
                    "updated_at": 1719493017
                  },
                  {
                    "type": "ticket_type_attribute",
                    "id": "234",
                    "workspace_id": "this_is_an_id616_that_should_be_at_least_",
                    "name": "name",
                    "description": "description",
                    "data_type": "string",
                    "input_options": null,
                    "order": 0,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": false,
                    "visible_to_contacts": false,
                    "default": false,
                    "ticket_type_id": 90,
                    "archived": false,
                    "created_at": 1719493017,
                    "updated_at": 1719493017
                  },
                  {
                    "type": "ticket_type_attribute",
                    "id": "233",
                    "workspace_id": "this_is_an_id616_that_should_be_at_least_",
                    "name": "_default_description_",
                    "description": "",
                    "data_type": "string",
                    "input_options": {
                      "multiline": true
                    },
                    "order": 1,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": true,
                    "visible_to_contacts": true,
                    "default": true,
                    "ticket_type_id": 90,
                    "archived": false,
                    "created_at": 1719493017,
                    "updated_at": 1719493017
                  }
                ]
              },
              "category": "Customer"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_ticketTypes.updateTicketType": {
      "id": "endpoint_ticketTypes.updateTicketType",
      "description": "\nYou can update a ticket type.\n\n> 📘 Updating a ticket type.\n>\n> For the `icon` propery, use an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
      "namespace": [
        "Ticket Types"
      ],
      "displayName": "Update a ticket type",
      "operationId": "updateTicketType",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "ticket_types"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the ticket type which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_ticket_type_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_type"
            }
          },
          "description": "Ticket type updated"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/ticket_types/id",
          "responseStatusCode": 200,
          "name": "Ticket Type Updated",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_type",
              "id": "92",
              "name": "Bug Report 2",
              "description": "Bug Report Template",
              "icon": "🎟️",
              "workspace_id": "this_is_an_id620_that_should_be_at_least_",
              "archived": false,
              "created_at": 1719493018,
              "updated_at": 1719493018,
              "is_internal": false,
              "ticket_type_attributes": {
                "type": "list",
                "data": [
                  {
                    "type": "ticket_type_attribute",
                    "id": "238",
                    "workspace_id": "this_is_an_id620_that_should_be_at_least_",
                    "name": "_default_title_",
                    "description": "",
                    "data_type": "string",
                    "input_options": {
                      "multiline": false
                    },
                    "order": 0,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": true,
                    "visible_to_contacts": true,
                    "default": true,
                    "ticket_type_id": 92,
                    "archived": false,
                    "created_at": 1719493018,
                    "updated_at": 1719493018
                  },
                  {
                    "type": "ticket_type_attribute",
                    "id": "240",
                    "workspace_id": "this_is_an_id620_that_should_be_at_least_",
                    "name": "name",
                    "description": "description",
                    "data_type": "string",
                    "input_options": null,
                    "order": 0,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": false,
                    "visible_to_contacts": false,
                    "default": false,
                    "ticket_type_id": 92,
                    "archived": false,
                    "created_at": 1719493018,
                    "updated_at": 1719493018
                  },
                  {
                    "type": "ticket_type_attribute",
                    "id": "239",
                    "workspace_id": "this_is_an_id620_that_should_be_at_least_",
                    "name": "_default_description_",
                    "description": "",
                    "data_type": "string",
                    "input_options": {
                      "multiline": true
                    },
                    "order": 1,
                    "required_to_create": false,
                    "required_to_create_for_contacts": false,
                    "visible_on_create": true,
                    "visible_to_contacts": true,
                    "default": true,
                    "ticket_type_id": 92,
                    "archived": false,
                    "created_at": 1719493018,
                    "updated_at": 1719493018
                  }
                ]
              },
              "category": "Customer"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tickets.replyTicket": {
      "id": "endpoint_tickets.replyTicket",
      "description": "You can reply to a ticket with a message from an admin or on behalf of a contact, or with a note for admins.",
      "namespace": [
        "Tickets"
      ],
      "displayName": "Reply to a ticket",
      "operationId": "replyTicket",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tickets"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "reply"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "postTicketsIdReplyJsonRequest"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_reply"
            }
          },
          "description": "Admin quick_reply reply"
        }
      ],
      "errors": [
        {
          "statusCode": 400,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "User reply",
          "name": "Bad Request",
          "examples": [
            {
              "name": "User Reply",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "parameter_mismatch",
                      "message": "User replies are not allowed on Backoffice tickets"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "User Reply",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "comment",
              "type": "user",
              "intercom_user_id": "667d619d8a68186f43bafe82",
              "body": "Thanks again :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "122",
              "part_type": "note",
              "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
              "created_at": 1719493024,
              "updated_at": 1719493024,
              "author": {
                "id": "991267829",
                "type": "admin",
                "name": "Ciaran375 Lee",
                "email": "admin375@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        },
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "User Reply",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "comment",
              "type": "user",
              "intercom_user_id": "667d619d8a68186f43bafe82",
              "body": "Thanks again :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "124",
              "part_type": "quick_reply",
              "created_at": 1719493029,
              "updated_at": 1719493029,
              "author": {
                "id": "991267834",
                "type": "admin",
                "name": "Ciaran379 Lee",
                "email": "admin379@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        },
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "Admin Note Reply",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "note",
              "type": "admin",
              "admin_id": 991267829,
              "body": "<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "122",
              "part_type": "note",
              "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
              "created_at": 1719493024,
              "updated_at": 1719493024,
              "author": {
                "id": "991267829",
                "type": "admin",
                "name": "Ciaran375 Lee",
                "email": "admin375@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        },
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "Admin Note Reply",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "note",
              "type": "admin",
              "admin_id": 991267829,
              "body": "<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "124",
              "part_type": "quick_reply",
              "created_at": 1719493029,
              "updated_at": 1719493029,
              "author": {
                "id": "991267834",
                "type": "admin",
                "name": "Ciaran379 Lee",
                "email": "admin379@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        },
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "Admin Quick Reply Reply",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "quick_reply",
              "type": "admin",
              "admin_id": 991267834,
              "reply_options": [
                {
                  "text": "Yes",
                  "uuid": "test-uuid-replacement"
                },
                {
                  "text": "No",
                  "uuid": "test-uuid-replacement"
                }
              ]
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "122",
              "part_type": "note",
              "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
              "created_at": 1719493024,
              "updated_at": 1719493024,
              "author": {
                "id": "991267829",
                "type": "admin",
                "name": "Ciaran375 Lee",
                "email": "admin375@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        },
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "Admin Quick Reply Reply",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "quick_reply",
              "type": "admin",
              "admin_id": 991267834,
              "reply_options": [
                {
                  "text": "Yes",
                  "uuid": "test-uuid-replacement"
                },
                {
                  "text": "No",
                  "uuid": "test-uuid-replacement"
                }
              ]
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "124",
              "part_type": "quick_reply",
              "created_at": 1719493029,
              "updated_at": 1719493029,
              "author": {
                "id": "991267834",
                "type": "admin",
                "name": "Ciaran379 Lee",
                "email": "admin379@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        },
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "comment",
              "type": "user",
              "intercom_user_id": "667d61a68a68186f43bafe85",
              "body": "Thanks again :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "122",
              "part_type": "note",
              "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
              "created_at": 1719493024,
              "updated_at": 1719493024,
              "author": {
                "id": "991267829",
                "type": "admin",
                "name": "Ciaran375 Lee",
                "email": "admin375@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        },
        {
          "path": "/tickets/123/reply",
          "responseStatusCode": 200,
          "name": "Not Found",
          "pathParameters": {
            "id": "123"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "message_type": "comment",
              "type": "user",
              "intercom_user_id": "667d61a68a68186f43bafe85",
              "body": "Thanks again :)"
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket_part",
              "id": "124",
              "part_type": "quick_reply",
              "created_at": 1719493029,
              "updated_at": 1719493029,
              "author": {
                "id": "991267834",
                "type": "admin",
                "name": "Ciaran379 Lee",
                "email": "admin379@email.com"
              },
              "attachments": [],
              "redacted": false
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tagsTickets.attachTagToTicket": {
      "id": "endpoint_tagsTickets.attachTagToTicket",
      "description": "You can tag a specific ticket. This will return a tag object for the tag that was added to the ticket.",
      "namespace": [
        "Tags",
        "Tickets"
      ],
      "displayName": "Add tag to a ticket",
      "operationId": "attachTagToTicket",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tickets"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "ticket_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "ticket_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "ticket_id"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the tag which is given by Intercom"
              },
              {
                "key": "admin_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the admin which is given by Intercom."
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Ticket not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Ticket Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "ticket_not_found",
                      "message": "Ticket not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tickets/64619700005694/tags",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "ticket_id": "64619700005694"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 134,
              "admin_id": 991267844
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "134",
              "name": "Manual tag"
            }
          }
        },
        {
          "path": "/tickets/64619700005694/tags",
          "responseStatusCode": 200,
          "name": "Ticket Not Found",
          "pathParameters": {
            "ticket_id": "64619700005694"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "id": 135,
              "admin_id": 991267847
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tagsTickets.detachTagFromTicket": {
      "id": "endpoint_tagsTickets.detachTagFromTicket",
      "description": "You can remove tag from a specific ticket. This will return a tag object for the tag that was removed from the ticket.",
      "namespace": [
        "Tags",
        "Tickets"
      ],
      "displayName": "Remove tag from a ticket",
      "operationId": "detachTagFromTicket",
      "method": "DELETE",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tickets"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "ticket_id"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tags"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "ticket_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "ticket_id"
        },
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the tag which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "admin_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the admin which is given by Intercom."
              }
            ]
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "tag"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Tag not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Ticket Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "ticket_not_found",
                      "message": "Ticket not found"
                    }
                  ]
                }
              }
            },
            {
              "name": "Tag Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "tag_not_found",
                      "message": "Tag not found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tickets/64619700005694/tags/7522907",
          "responseStatusCode": 200,
          "name": "Successful",
          "pathParameters": {
            "ticket_id": "64619700005694",
            "id": "7522907"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "admin_id": 991267853
            }
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "tag",
              "id": "137",
              "name": "Manual tag"
            }
          }
        },
        {
          "path": "/tickets/64619700005694/tags/7522907",
          "responseStatusCode": 200,
          "name": "Ticket Not Found",
          "pathParameters": {
            "ticket_id": "64619700005694",
            "id": "7522907"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "admin_id": 991267856
            }
          }
        },
        {
          "path": "/tickets/64619700005694/tags/7522907",
          "responseStatusCode": 200,
          "name": "Tag Not Found",
          "pathParameters": {
            "ticket_id": "64619700005694",
            "id": "7522907"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "requestBody": {
            "type": "json",
            "value": {
              "admin_id": 991267859
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tickets.createTicket": {
      "id": "endpoint_tickets.createTicket",
      "description": "You can create a new ticket.",
      "namespace": [
        "Tickets"
      ],
      "displayName": "Create a ticket",
      "operationId": "createTicket",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tickets"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "create_ticket_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tickets",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket",
              "id": "489",
              "ticket_id": "48",
              "ticket_attributes": {
                "_default_title_": "example",
                "_default_description_": "there is a problem"
              },
              "ticket_state": "submitted",
              "ticket_type": {
                "type": "ticket_type",
                "id": "106",
                "name": "my-ticket-type-15",
                "description": "my ticket type description is awesome.",
                "icon": "🦁",
                "workspace_id": "this_is_an_id648_that_should_be_at_least_",
                "archived": false,
                "created_at": 1719493047,
                "updated_at": 1719493047,
                "is_internal": false,
                "ticket_type_attributes": {
                  "type": "list",
                  "data": [
                    {
                      "type": "ticket_type_attribute",
                      "id": "252",
                      "workspace_id": "this_is_an_id648_that_should_be_at_least_",
                      "name": "_default_title_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 106,
                      "archived": false,
                      "created_at": 1719493047,
                      "updated_at": 1719493047
                    },
                    {
                      "type": "ticket_type_attribute",
                      "id": "253",
                      "workspace_id": "this_is_an_id648_that_should_be_at_least_",
                      "name": "_default_description_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 106,
                      "archived": false,
                      "created_at": 1719493047,
                      "updated_at": 1719493047
                    }
                  ]
                },
                "category": "Back-office"
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61b78a68186f43bafe8d",
                    "external_id": "70"
                  }
                ]
              },
              "admin_assignee_id": "0",
              "team_assignee_id": "0",
              "created_at": 1719493048,
              "updated_at": 1719493048,
              "ticket_parts": {
                "type": "ticket_part.list",
                "ticket_parts": [
                  {
                    "type": "ticket_part",
                    "id": "125",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "submitted",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493048,
                    "updated_at": 1719493048,
                    "author": {
                      "id": "991267871",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id648_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  }
                ],
                "total_count": 1
              },
              "open": true,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "category": "Back-office",
              "is_shared": false,
              "ticket_state_internal_label": "Submitted",
              "ticket_state_external_label": "Submitted"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tickets.getTicket": {
      "id": "endpoint_tickets.getTicket",
      "description": "You can fetch the details of a single ticket.",
      "namespace": [
        "Tickets"
      ],
      "displayName": "Retrieve a ticket",
      "operationId": "getTicket",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tickets"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the ticket which is given by Intercom."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket"
            }
          },
          "description": "Ticket found"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tickets/id",
          "responseStatusCode": 200,
          "name": "Ticket Found",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket",
              "id": "493",
              "ticket_id": "52",
              "ticket_attributes": {
                "_default_title_": "attribute_value",
                "_default_description_": null
              },
              "ticket_state": "submitted",
              "ticket_type": {
                "type": "ticket_type",
                "id": "112",
                "name": "my-ticket-type-21",
                "description": "my ticket type description is awesome.",
                "icon": "🦁",
                "workspace_id": "this_is_an_id660_that_should_be_at_least_",
                "archived": false,
                "created_at": 1719493060,
                "updated_at": 1719493060,
                "is_internal": false,
                "ticket_type_attributes": {
                  "type": "list",
                  "data": [
                    {
                      "type": "ticket_type_attribute",
                      "id": "268",
                      "workspace_id": "this_is_an_id660_that_should_be_at_least_",
                      "name": "_default_title_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 112,
                      "archived": false,
                      "created_at": 1719493060,
                      "updated_at": 1719493060
                    },
                    {
                      "type": "ticket_type_attribute",
                      "id": "269",
                      "workspace_id": "this_is_an_id660_that_should_be_at_least_",
                      "name": "_default_description_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 112,
                      "archived": false,
                      "created_at": 1719493060,
                      "updated_at": 1719493060
                    }
                  ]
                },
                "category": "Back-office"
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61c48a68186f43bafe91",
                    "external_id": "test-uuid-replacement"
                  }
                ]
              },
              "admin_assignee_id": "0",
              "team_assignee_id": "0",
              "created_at": 1719493061,
              "updated_at": 1719493061,
              "ticket_parts": {
                "type": "ticket_part.list",
                "ticket_parts": [
                  {
                    "type": "ticket_part",
                    "id": "134",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "submitted",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493061,
                    "updated_at": 1719493061,
                    "author": {
                      "id": "991267912",
                      "type": "admin",
                      "name": "Ciaran445 Lee",
                      "email": "admin445@email.com"
                    },
                    "attachments": [],
                    "redacted": false
                  }
                ],
                "total_count": 1
              },
              "open": true,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "category": "Back-office",
              "is_shared": false,
              "ticket_state_internal_label": "Submitted",
              "ticket_state_external_label": "Submitted"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tickets.updateTicket": {
      "id": "endpoint_tickets.updateTicket",
      "description": "You can update a ticket.",
      "namespace": [
        "Tickets"
      ],
      "displayName": "Update a ticket",
      "operationId": "updateTicket",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tickets"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "pathParameter",
          "value": "id"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "pathParameters": [
        {
          "key": "id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The unique identifier for the ticket which is given by Intercom"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_ticket_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket"
            }
          },
          "description": "Successful response"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/tickets/id",
          "responseStatusCode": 200,
          "name": "Successful Response",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket",
              "id": "490",
              "ticket_id": "49",
              "ticket_attributes": {
                "_default_title_": "example",
                "_default_description_": "there is a problem"
              },
              "ticket_state": "in_progress",
              "ticket_type": {
                "type": "ticket_type",
                "id": "108",
                "name": "my-ticket-type-17",
                "description": "my ticket type description is awesome.",
                "icon": "🦁",
                "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                "archived": false,
                "created_at": 1719493050,
                "updated_at": 1719493050,
                "is_internal": false,
                "ticket_type_attributes": {
                  "type": "list",
                  "data": [
                    {
                      "type": "ticket_type_attribute",
                      "id": "257",
                      "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      "name": "_default_title_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 108,
                      "archived": false,
                      "created_at": 1719493050,
                      "updated_at": 1719493050
                    },
                    {
                      "type": "ticket_type_attribute",
                      "id": "258",
                      "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      "name": "_default_description_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 108,
                      "archived": false,
                      "created_at": 1719493050,
                      "updated_at": 1719493050
                    }
                  ]
                },
                "category": "Back-office"
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61bb8a68186f43bafe8e",
                    "external_id": "test-uuid-replacement"
                  }
                ]
              },
              "admin_assignee_id": "991267885",
              "team_assignee_id": "0",
              "created_at": 1719493051,
              "updated_at": 1719493054,
              "ticket_parts": {
                "type": "ticket_part.list",
                "ticket_parts": [
                  {
                    "type": "ticket_part",
                    "id": "126",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "submitted",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493051,
                    "updated_at": 1719493051,
                    "author": {
                      "id": "991267883",
                      "type": "admin",
                      "name": "Ciaran419 Lee",
                      "email": "admin419@email.com"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "127",
                    "part_type": "ticket_attribute_updated_by_admin",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "128",
                    "part_type": "ticket_attribute_updated_by_admin",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "129",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "in_progress",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "130",
                    "part_type": "assignment",
                    "created_at": 1719493054,
                    "updated_at": 1719493054,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267885"
                    },
                    "author": {
                      "id": "991267883",
                      "type": "admin",
                      "name": "Ciaran419 Lee",
                      "email": "admin419@email.com"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "131",
                    "part_type": "snoozed",
                    "created_at": 1719493054,
                    "updated_at": 1719493054,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  }
                ],
                "total_count": 6
              },
              "open": true,
              "snoozed_until": 1719590400,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "category": "Back-office",
              "is_shared": false,
              "ticket_state_internal_label": "In progress",
              "ticket_state_external_label": "In progress"
            }
          }
        },
        {
          "path": "/tickets/id",
          "responseStatusCode": 200,
          "name": "Admin Not Found",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket",
              "id": "490",
              "ticket_id": "49",
              "ticket_attributes": {
                "_default_title_": "example",
                "_default_description_": "there is a problem"
              },
              "ticket_state": "in_progress",
              "ticket_type": {
                "type": "ticket_type",
                "id": "108",
                "name": "my-ticket-type-17",
                "description": "my ticket type description is awesome.",
                "icon": "🦁",
                "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                "archived": false,
                "created_at": 1719493050,
                "updated_at": 1719493050,
                "is_internal": false,
                "ticket_type_attributes": {
                  "type": "list",
                  "data": [
                    {
                      "type": "ticket_type_attribute",
                      "id": "257",
                      "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      "name": "_default_title_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 108,
                      "archived": false,
                      "created_at": 1719493050,
                      "updated_at": 1719493050
                    },
                    {
                      "type": "ticket_type_attribute",
                      "id": "258",
                      "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      "name": "_default_description_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 108,
                      "archived": false,
                      "created_at": 1719493050,
                      "updated_at": 1719493050
                    }
                  ]
                },
                "category": "Back-office"
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61bb8a68186f43bafe8e",
                    "external_id": "test-uuid-replacement"
                  }
                ]
              },
              "admin_assignee_id": "991267885",
              "team_assignee_id": "0",
              "created_at": 1719493051,
              "updated_at": 1719493054,
              "ticket_parts": {
                "type": "ticket_part.list",
                "ticket_parts": [
                  {
                    "type": "ticket_part",
                    "id": "126",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "submitted",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493051,
                    "updated_at": 1719493051,
                    "author": {
                      "id": "991267883",
                      "type": "admin",
                      "name": "Ciaran419 Lee",
                      "email": "admin419@email.com"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "127",
                    "part_type": "ticket_attribute_updated_by_admin",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "128",
                    "part_type": "ticket_attribute_updated_by_admin",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "129",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "in_progress",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "130",
                    "part_type": "assignment",
                    "created_at": 1719493054,
                    "updated_at": 1719493054,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267885"
                    },
                    "author": {
                      "id": "991267883",
                      "type": "admin",
                      "name": "Ciaran419 Lee",
                      "email": "admin419@email.com"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "131",
                    "part_type": "snoozed",
                    "created_at": 1719493054,
                    "updated_at": 1719493054,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  }
                ],
                "total_count": 6
              },
              "open": true,
              "snoozed_until": 1719590400,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "category": "Back-office",
              "is_shared": false,
              "ticket_state_internal_label": "In progress",
              "ticket_state_external_label": "In progress"
            }
          }
        },
        {
          "path": "/tickets/id",
          "responseStatusCode": 200,
          "name": "Assignee Not Found",
          "pathParameters": {
            "id": "id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket",
              "id": "490",
              "ticket_id": "49",
              "ticket_attributes": {
                "_default_title_": "example",
                "_default_description_": "there is a problem"
              },
              "ticket_state": "in_progress",
              "ticket_type": {
                "type": "ticket_type",
                "id": "108",
                "name": "my-ticket-type-17",
                "description": "my ticket type description is awesome.",
                "icon": "🦁",
                "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                "archived": false,
                "created_at": 1719493050,
                "updated_at": 1719493050,
                "is_internal": false,
                "ticket_type_attributes": {
                  "type": "list",
                  "data": [
                    {
                      "type": "ticket_type_attribute",
                      "id": "257",
                      "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      "name": "_default_title_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 108,
                      "archived": false,
                      "created_at": 1719493050,
                      "updated_at": 1719493050
                    },
                    {
                      "type": "ticket_type_attribute",
                      "id": "258",
                      "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      "name": "_default_description_",
                      "description": "ola",
                      "data_type": "string",
                      "input_options": null,
                      "order": 0,
                      "required_to_create": true,
                      "required_to_create_for_contacts": false,
                      "visible_on_create": true,
                      "visible_to_contacts": false,
                      "default": false,
                      "ticket_type_id": 108,
                      "archived": false,
                      "created_at": 1719493050,
                      "updated_at": 1719493050
                    }
                  ]
                },
                "category": "Back-office"
              },
              "contacts": {
                "type": "contact.list",
                "contacts": [
                  {
                    "type": "contact",
                    "id": "667d61bb8a68186f43bafe8e",
                    "external_id": "test-uuid-replacement"
                  }
                ]
              },
              "admin_assignee_id": "991267885",
              "team_assignee_id": "0",
              "created_at": 1719493051,
              "updated_at": 1719493054,
              "ticket_parts": {
                "type": "ticket_part.list",
                "ticket_parts": [
                  {
                    "type": "ticket_part",
                    "id": "126",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "submitted",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493051,
                    "updated_at": 1719493051,
                    "author": {
                      "id": "991267883",
                      "type": "admin",
                      "name": "Ciaran419 Lee",
                      "email": "admin419@email.com"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "127",
                    "part_type": "ticket_attribute_updated_by_admin",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "128",
                    "part_type": "ticket_attribute_updated_by_admin",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "129",
                    "part_type": "ticket_state_updated_by_admin",
                    "ticket_state": "in_progress",
                    "previous_ticket_state": "submitted",
                    "created_at": 1719493053,
                    "updated_at": 1719493053,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "130",
                    "part_type": "assignment",
                    "created_at": 1719493054,
                    "updated_at": 1719493054,
                    "assigned_to": {
                      "type": "admin",
                      "id": "991267885"
                    },
                    "author": {
                      "id": "991267883",
                      "type": "admin",
                      "name": "Ciaran419 Lee",
                      "email": "admin419@email.com"
                    },
                    "attachments": [],
                    "redacted": false
                  },
                  {
                    "type": "ticket_part",
                    "id": "131",
                    "part_type": "snoozed",
                    "created_at": 1719493054,
                    "updated_at": 1719493054,
                    "author": {
                      "id": "991267884",
                      "type": "bot",
                      "name": "Operator",
                      "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                    },
                    "attachments": [],
                    "redacted": false
                  }
                ],
                "total_count": 6
              },
              "open": true,
              "snoozed_until": 1719590400,
              "linked_objects": {
                "type": "list",
                "data": [],
                "total_count": 0,
                "has_more": false
              },
              "category": "Back-office",
              "is_shared": false,
              "ticket_state_internal_label": "In progress",
              "ticket_state_external_label": "In progress"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_tickets.searchTickets": {
      "id": "endpoint_tickets.searchTickets",
      "description": "You can search for multiple tickets by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for tickets, you send a `POST` request to `https://api.intercom.io/tickets/search`.\n\nThis will accept a query object in the body which will define your filters.\n{% admonition type=\"warning\" name=\"Optimizing search queries\" %}\n  Search queries can be complex, so optimizing them can help the performance of your search.\n  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize\n  pagination to limit the number of results returned. The default is `20` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.\n{% /admonition %}\n\n### Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\nThere are some limitations to the amount of multiples there can be:\n- There's a limit of max 2 nested filters\n- There's a limit of max 15 filters for each AND or OR group\n\n### Accepted Fields\n\nMost keys listed as part of the Ticket model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `\"foobar\"`).\n\n| Field                                     | Type                                                                                     |\n| :---------------------------------------- | :--------------------------------------------------------------------------------------- |\n| id                                        | String                                                                                   |\n| created_at                                | Date (UNIX timestamp)                                                                    |\n| updated_at                                | Date (UNIX timestamp)                                                                    |\n| _default_title_                           | String                                                                                   |\n| _default_description_                     | String                                                                                   |\n| category                                  | String                                                                                   |\n| ticket_type_id                            | String                                                                                   |\n| contact_ids                               | String                                                                                   |\n| teammate_ids                              | String                                                                                   |\n| admin_assignee_id                         | String                                                                                   |\n| team_assignee_id                          | String                                                                                   |\n| open                                      | Boolean                                                                                  |\n| state                                     | String                                                                                   |\n| snoozed_until                             | Date (UNIX timestamp)                                                                    |\n| ticket_attribute.{id}                     | String or Boolean or Date (UNIX timestamp) or Float or Integer                           |\n\n### Accepted Operators\n\n{% admonition type=\"info\" name=\"Searching based on `created_at`\" %}\n  You may use the `<=` or `>=` operators to search by `created_at`.\n{% /admonition %}\n\nThe table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`\"=\"`). The operator has to be compatible with the field's type  (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).\n\n| Operator | Valid Types                    | Description                                                  |\n| :------- | :----------------------------- | :----------------------------------------------------------- |\n| =        | All                            | Equals                                                       |\n| !=       | All                            | Doesn't Equal                                                |\n| IN       | All                            | In  Shortcut for `OR` queries  Values most be in Array       |\n| NIN      | All                            | Not In  Shortcut for `OR !` queries  Values must be in Array |\n| >        | Integer  Date (UNIX Timestamp) | Greater (or equal) than                                      |\n| <       | Integer  Date (UNIX Timestamp) | Lower (or equal) than                                        |\n| ~        | String                         | Contains                                                     |\n| !~       | String                         | Doesn't Contain                                              |\n| ^        | String                         | Starts With                                                  |\n| $        | String                         | Ends With                                                    |\n",
      "namespace": [
        "Tickets"
      ],
      "displayName": "Search tickets",
      "operationId": "searchTickets",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "tickets"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "search"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "search_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ticket_list"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/tickets/search",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "ticket.list",
              "pages": {
                "type": "pages",
                "page": 1,
                "per_page": 5,
                "total_pages": 1
              },
              "total_count": 1,
              "tickets": [
                {
                  "type": "ticket",
                  "id": "494",
                  "ticket_id": "53",
                  "ticket_attributes": {
                    "_default_title_": "attribute_value",
                    "_default_description_": null
                  },
                  "ticket_state": "submitted",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "117",
                    "name": "my-ticket-type-26",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id667_that_should_be_at_least_",
                    "archived": false,
                    "created_at": 1719493065,
                    "updated_at": 1719493065,
                    "is_internal": false,
                    "ticket_type_attributes": {
                      "type": "list",
                      "data": [
                        {
                          "type": "ticket_type_attribute",
                          "id": "279",
                          "workspace_id": "this_is_an_id667_that_should_be_at_least_",
                          "name": "_default_title_",
                          "description": "ola",
                          "data_type": "string",
                          "input_options": null,
                          "order": 0,
                          "required_to_create": true,
                          "required_to_create_for_contacts": false,
                          "visible_on_create": true,
                          "visible_to_contacts": false,
                          "default": false,
                          "ticket_type_id": 117,
                          "archived": false,
                          "created_at": 1719493065,
                          "updated_at": 1719493065
                        },
                        {
                          "type": "ticket_type_attribute",
                          "id": "280",
                          "workspace_id": "this_is_an_id667_that_should_be_at_least_",
                          "name": "_default_description_",
                          "description": "ola",
                          "data_type": "string",
                          "input_options": null,
                          "order": 0,
                          "required_to_create": true,
                          "required_to_create_for_contacts": false,
                          "visible_on_create": true,
                          "visible_to_contacts": false,
                          "default": false,
                          "ticket_type_id": 117,
                          "archived": false,
                          "created_at": 1719493065,
                          "updated_at": 1719493065
                        }
                      ]
                    },
                    "category": "Back-office"
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61c98a68186f43bafe92",
                        "external_id": "test-uuid-replacement"
                      }
                    ]
                  },
                  "admin_assignee_id": "0",
                  "team_assignee_id": "0",
                  "created_at": 1719493065,
                  "updated_at": 1719493066,
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "135",
                        "part_type": "ticket_state_updated_by_admin",
                        "ticket_state": "submitted",
                        "previous_ticket_state": "submitted",
                        "created_at": 1719493066,
                        "updated_at": 1719493066,
                        "author": {
                          "id": "991267940",
                          "type": "admin",
                          "name": "Ciaran472 Lee",
                          "email": "admin472@email.com"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "open": true,
                  "linked_objects": {
                    "type": "list",
                    "data": [],
                    "total_count": 0,
                    "has_more": false
                  },
                  "category": "Back-office",
                  "is_shared": false,
                  "ticket_state_internal_label": "Submitted",
                  "ticket_state_external_label": "Submitted"
                }
              ]
            }
          }
        },
        {
          "path": "/tickets/search",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_visitors.retrieveVisitorWithUserId": {
      "id": "endpoint_visitors.retrieveVisitorWithUserId",
      "description": "You can fetch the details of a single visitor.",
      "namespace": [
        "Visitors"
      ],
      "displayName": "Retrieve a visitor with User ID",
      "operationId": "retrieveVisitorWithUserId",
      "method": "GET",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "visitors"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "queryParameters": [
        {
          "key": "user_id",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The user_id of the Visitor you want to retrieve."
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "visitor"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Visitor not found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Visitor Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Visitor Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/visitors",
          "responseStatusCode": 200,
          "name": "Successful",
          "queryParameters": {
            "user_id": "user_id"
          },
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "visitor",
              "id": "667d61ce8a68186f43bafe9b",
              "user_id": "test-uuid-replacement",
              "anonymous": true,
              "email": "",
              "phone": null,
              "name": null,
              "pseudonym": null,
              "avatar": {
                "type": "avatar",
                "image_url": null
              },
              "app_id": "this_is_an_id677_that_should_be_at_least_",
              "companies": {
                "type": "company.list",
                "companies": []
              },
              "location_data": {},
              "last_request_at": null,
              "created_at": 1719493070,
              "remote_created_at": 1719493070,
              "signed_up_at": 1719493070,
              "updated_at": 1719493070,
              "session_count": 0,
              "social_profiles": {
                "type": "social_profile.list",
                "social_profiles": []
              },
              "owner_id": null,
              "unsubscribed_from_emails": false,
              "marked_email_as_spam": false,
              "has_hard_bounced": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "custom_attributes": {},
              "referrer": null,
              "utm_campaign": null,
              "utm_content": null,
              "utm_medium": null,
              "utm_source": null,
              "utm_term": null,
              "do_not_track": null
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_visitors.updateVisitor": {
      "id": "endpoint_visitors.updateVisitor",
      "description": "Sending a PUT request to `/visitors` will result in an update of an existing Visitor.\n\n**Option 1.** You can update a visitor by passing in the `user_id` of the visitor in the Request body.\n\n**Option 2.** You can update a visitor by passing in the `id` of the visitor in the Request body.\n",
      "namespace": [
        "Visitors"
      ],
      "displayName": "Update a visitor",
      "operationId": "updateVisitor",
      "method": "PUT",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "visitors"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "update_visitor_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "visitor"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "statusCode": 404,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "visitor Not Found",
          "name": "Not Found",
          "examples": [
            {
              "name": "Visitor Not Found",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Visitor Not Found"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/visitors",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "visitor",
              "id": "667d61cc8a68186f43bafe95",
              "user_id": "test-uuid-replacement",
              "anonymous": true,
              "email": "",
              "phone": null,
              "name": "Gareth Bale",
              "pseudonym": "Indigo Ghost",
              "avatar": {
                "type": "avatar",
                "image_url": "https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png"
              },
              "app_id": "this_is_an_id671_that_should_be_at_least_",
              "companies": {
                "type": "company.list",
                "companies": []
              },
              "location_data": {},
              "last_request_at": null,
              "created_at": 1719493068,
              "remote_created_at": 1719493068,
              "signed_up_at": 1719493068,
              "updated_at": 1719493068,
              "session_count": 0,
              "social_profiles": {
                "type": "social_profile.list",
                "social_profiles": []
              },
              "owner_id": null,
              "unsubscribed_from_emails": false,
              "marked_email_as_spam": false,
              "has_hard_bounced": false,
              "tags": {
                "type": "tag.list",
                "tags": []
              },
              "segments": {
                "type": "segment.list",
                "segments": []
              },
              "custom_attributes": {},
              "referrer": null,
              "utm_campaign": null,
              "utm_content": null,
              "utm_medium": null,
              "utm_source": null,
              "utm_term": null,
              "do_not_track": null
            }
          }
        },
        {
          "path": "/visitors",
          "responseStatusCode": 200,
          "name": "Visitor Not Found",
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    },
    "endpoint_visitors.convertVisitor": {
      "id": "endpoint_visitors.convertVisitor",
      "description": "You can merge a Visitor to a Contact of role type `lead` or `user`.\n\n> 📘 What happens upon a visitor being converted?\n>\n> If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n",
      "namespace": [
        "Visitors"
      ],
      "displayName": "Convert a visitor",
      "operationId": "convertVisitor",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "visitors"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "convert"
        }
      ],
      "auth": [
        "bearerAuth"
      ],
      "defaultEnvironment": "https://api.intercom.io",
      "environments": [
        {
          "id": "https://api.intercom.io",
          "baseUrl": "https://api.intercom.io"
        },
        {
          "id": "https://api.eu.intercom.io",
          "baseUrl": "https://api.eu.intercom.io"
        },
        {
          "id": "https://api.au.intercom.io",
          "baseUrl": "https://api.au.intercom.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Intercom-Version",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "intercom_version",
                  "default": {
                    "type": "enum",
                    "value": "2.11"
                  }
                }
              }
            }
          }
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "convert_visitor_request"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "contact"
            }
          },
          "description": "successful"
        }
      ],
      "errors": [
        {
          "statusCode": 401,
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "error"
            }
          },
          "description": "Unauthorized",
          "name": "Unauthorized",
          "examples": [
            {
              "name": "Unauthorized",
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "error.list",
                  "request_id": "test-uuid-replacement",
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "path": "/visitors/convert",
          "responseStatusCode": 200,
          "name": "Successful",
          "headers": {
            "Intercom-Version": "2.11"
          },
          "responseBody": {
            "type": "json",
            "value": {
              "type": "contact",
              "id": "667d61d08a68186f43bafea2",
              "workspace_id": "this_is_an_id683_that_should_be_at_least_",
              "external_id": null,
              "role": "user",
              "email": "foo@bar.com",
              "phone": null,
              "name": null,
              "avatar": null,
              "owner_id": null,
              "social_profiles": {
                "type": "list",
                "data": []
              },
              "has_hard_bounced": false,
              "marked_email_as_spam": false,
              "unsubscribed_from_emails": false,
              "created_at": 1719493072,
              "updated_at": 1719493072,
              "signed_up_at": 1719493072,
              "last_seen_at": null,
              "last_replied_at": null,
              "last_contacted_at": null,
              "last_email_opened_at": null,
              "last_email_clicked_at": null,
              "language_override": null,
              "browser": null,
              "browser_version": null,
              "browser_language": null,
              "os": null,
              "location": {
                "type": "location",
                "country": null,
                "region": null,
                "city": null,
                "country_code": null,
                "continent_code": null
              },
              "android_app_name": null,
              "android_app_version": null,
              "android_device": null,
              "android_os_version": null,
              "android_sdk_version": null,
              "android_last_seen_at": null,
              "ios_app_name": null,
              "ios_app_version": null,
              "ios_device": null,
              "ios_os_version": null,
              "ios_sdk_version": null,
              "ios_last_seen_at": null,
              "custom_attributes": {},
              "tags": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d61d08a68186f43bafea2/tags",
                "total_count": 0,
                "has_more": false
              },
              "notes": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d61d08a68186f43bafea2/notes",
                "total_count": 0,
                "has_more": false
              },
              "companies": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d61d08a68186f43bafea2/companies",
                "total_count": 0,
                "has_more": false
              },
              "opted_out_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d61d08a68186f43bafea2/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "opted_in_subscription_types": {
                "type": "list",
                "data": [],
                "url": "/contacts/667d61d08a68186f43bafea2/subscriptions",
                "total_count": 0,
                "has_more": false
              },
              "utm_campaign": null,
              "utm_content": null,
              "utm_medium": null,
              "utm_source": null,
              "utm_term": null,
              "referrer": null
            }
          }
        },
        {
          "path": "/visitors/convert",
          "responseStatusCode": 200,
          "headers": {
            "Intercom-Version": "2.11"
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    }
  },
  "websockets": {},
  "webhooks": {},
  "types": {
    "activity_log": {
      "name": "Activity Log",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id representing the activity."
              },
              {
                "key": "performed_by",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "String representing the object's type. Always has the value `admin`."
                    },
                    {
                      "key": "id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The id representing the admin."
                    },
                    {
                      "key": "email",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The email of the admin."
                    },
                    {
                      "key": "ip",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The IP address of the admin."
                    }
                  ]
                },
                "description": "Details about the Admin involved in the activity."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "activity_log_metadata"
                  }
                }
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the activity was created."
              },
              {
                "key": "activity_type",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "admin_assignment_limit_change"
                    },
                    {
                      "value": "admin_away_mode_change"
                    },
                    {
                      "value": "admin_deletion"
                    },
                    {
                      "value": "admin_deprovisioned"
                    },
                    {
                      "value": "admin_impersonation_end"
                    },
                    {
                      "value": "admin_impersonation_start"
                    },
                    {
                      "value": "admin_invite_change"
                    },
                    {
                      "value": "admin_invite_creation"
                    },
                    {
                      "value": "admin_invite_deletion"
                    },
                    {
                      "value": "admin_login_failure"
                    },
                    {
                      "value": "admin_login_success"
                    },
                    {
                      "value": "admin_logout"
                    },
                    {
                      "value": "admin_password_reset_request"
                    },
                    {
                      "value": "admin_password_reset_success"
                    },
                    {
                      "value": "admin_permission_change"
                    },
                    {
                      "value": "admin_provisioned"
                    },
                    {
                      "value": "admin_two_factor_auth_change"
                    },
                    {
                      "value": "admin_unauthorized_sign_in_method"
                    },
                    {
                      "value": "app_admin_join"
                    },
                    {
                      "value": "app_authentication_method_change"
                    },
                    {
                      "value": "app_data_deletion"
                    },
                    {
                      "value": "app_data_export"
                    },
                    {
                      "value": "app_google_sso_domain_change"
                    },
                    {
                      "value": "app_identity_verification_change"
                    },
                    {
                      "value": "app_name_change"
                    },
                    {
                      "value": "app_outbound_address_change"
                    },
                    {
                      "value": "app_package_installation"
                    },
                    {
                      "value": "app_package_token_regeneration"
                    },
                    {
                      "value": "app_package_uninstallation"
                    },
                    {
                      "value": "app_team_creation"
                    },
                    {
                      "value": "app_team_deletion"
                    },
                    {
                      "value": "app_team_membership_modification"
                    },
                    {
                      "value": "app_timezone_change"
                    },
                    {
                      "value": "app_webhook_creation"
                    },
                    {
                      "value": "app_webhook_deletion"
                    },
                    {
                      "value": "articles_in_messenger_enabled_change"
                    },
                    {
                      "value": "bulk_delete"
                    },
                    {
                      "value": "bulk_export"
                    },
                    {
                      "value": "campaign_deletion"
                    },
                    {
                      "value": "campaign_state_change"
                    },
                    {
                      "value": "conversation_part_deletion"
                    },
                    {
                      "value": "conversation_topic_change"
                    },
                    {
                      "value": "conversation_topic_creation"
                    },
                    {
                      "value": "conversation_topic_deletion"
                    },
                    {
                      "value": "help_center_settings_change"
                    },
                    {
                      "value": "inbound_conversations_change"
                    },
                    {
                      "value": "inbox_access_change"
                    },
                    {
                      "value": "message_deletion"
                    },
                    {
                      "value": "message_state_change"
                    },
                    {
                      "value": "messenger_look_and_feel_change"
                    },
                    {
                      "value": "messenger_search_required_change"
                    },
                    {
                      "value": "messenger_spaces_change"
                    },
                    {
                      "value": "office_hours_change"
                    },
                    {
                      "value": "role_change"
                    },
                    {
                      "value": "role_creation"
                    },
                    {
                      "value": "role_deletion"
                    },
                    {
                      "value": "ruleset_activation_title_preview"
                    },
                    {
                      "value": "ruleset_creation"
                    },
                    {
                      "value": "ruleset_deletion"
                    },
                    {
                      "value": "search_browse_enabled_change"
                    },
                    {
                      "value": "search_browse_required_change"
                    },
                    {
                      "value": "seat_change"
                    },
                    {
                      "value": "seat_revoke"
                    },
                    {
                      "value": "security_settings_change"
                    },
                    {
                      "value": "temporary_expectation_change"
                    },
                    {
                      "value": "upfront_email_collection_change"
                    },
                    {
                      "value": "welcome_message_change"
                    }
                  ]
                }
              },
              {
                "key": "activity_description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A sentence or two describing the activity."
              }
            ]
          }
        }
      },
      "description": "Activities performed by Admins."
    },
    "activity_log_list": {
      "name": "Paginated Response",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "String representing the object's type. Always has the value `activity_log.list`."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          },
          {
            "key": "activity_logs",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "activity_log"
                  }
                }
              }
            },
            "description": "An array of activity logs"
          }
        ]
      },
      "description": "A paginated list of activity logs."
    },
    "activity_log_metadata": {
      "name": "Activity Log Metadata",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "sign_in_method",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The way the admin signed in."
              },
              {
                "key": "external_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The unique identifier for the contact which is provided by the Client."
              },
              {
                "key": "away_mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "The away mode status which is set to true when away and false when returned."
              },
              {
                "key": "away_status_reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The reason the Admin is away."
              },
              {
                "key": "reassign_conversations",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Indicates if conversations should be reassigned while an Admin is away."
              },
              {
                "key": "source",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The action that initiated the status change."
              },
              {
                "key": "auto_changed",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Indicates if the status was changed automatically or manually."
              },
              {
                "key": "update_by",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The ID of the Admin who initiated the activity."
              },
              {
                "key": "update_by_name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The name of the Admin who initiated the activity."
              }
            ]
          }
        }
      },
      "description": "Additional data provided about Admin activity."
    },
    "addressable_list": {
      "name": "Addressable List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "description": "The addressable object type"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the addressable object"
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "description": "Url to get more company resources for this contact"
          }
        ]
      },
      "description": "A list used to access other resources from a parent model."
    },
    "admin": {
      "name": "Admin",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "String representing the object's type. Always has the value `admin`."
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id representing the admin."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the admin."
              },
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The email of the admin."
              },
              {
                "key": "job_title",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The job title of the admin."
              },
              {
                "key": "away_mode_enabled",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this admin is currently set in away mode."
              },
              {
                "key": "away_mode_reassign",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox."
              },
              {
                "key": "has_inbox_seat",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them."
              },
              {
                "key": "team_ids",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "This object represents the avatar associated with the admin."
              },
              {
                "key": "avatar",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                },
                "description": "Image for the associated team or teammate"
              },
              {
                "key": "team_priority_level",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "team_priority_level"
                  }
                }
              }
            ]
          }
        }
      },
      "description": "Admins are teammate accounts that have access to a workspace."
    },
    "admin_list": {
      "name": "Admins",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "String representing the object's type. Always has the value `admin.list`."
          },
          {
            "key": "admins",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "admin"
                  }
                }
              }
            },
            "description": "A list of admins associated with a given workspace."
          }
        ]
      },
      "description": "A list of admins associated with a given workspace."
    },
    "admin_priority_level": {
      "name": "Admin Priority Level",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "primary_admin_ids",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The primary admin ids for the team"
              },
              {
                "key": "secondary_admin_ids",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The secondary admin ids for the team"
              }
            ]
          }
        }
      },
      "description": "Admin priority levels for the team"
    },
    "admin_reply_conversation_request": {
      "name": "Admin Reply",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "comment"
                },
                {
                  "value": "note"
                }
              ]
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "admin"
                }
              ]
            }
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types."
          },
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the admin who is authoring the comment."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The time the reply was created. If not provided, the current time will be used."
          },
          {
            "key": "attachment_urls",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs."
          },
          {
            "key": "attachment_files",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "conversation_attachment_files"
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of files that will be added as attachments. You can include up to 10 files"
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of an admin"
    },
    "admin_reply_ticket_request": {
      "name": "Admin Reply on ticket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "comment"
                },
                {
                  "value": "note"
                },
                {
                  "value": "quick_reply"
                }
              ]
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "admin"
                }
              ]
            }
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types."
          },
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the admin who is authoring the comment."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The time the reply was created. If not provided, the current time will be used."
          },
          {
            "key": "reply_options",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "object",
                      "extends": [],
                      "properties": [
                        {
                          "key": "text",
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "The text to display in this quick reply option."
                        },
                        {
                          "key": "uuid",
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "uuid"
                              }
                            }
                          },
                          "description": "A unique identifier for this quick reply option. This value will be available within the metadata of the comment ticket part that is created when a user clicks on this reply option."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "The quick reply options to display. Must be present for quick_reply message types."
          },
          {
            "key": "attachment_urls",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs."
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of an admin"
    },
    "admin_with_app": {
      "name": "Admin",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "String representing the object's type. Always has the value `admin`."
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id representing the admin."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the admin."
              },
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The email of the admin."
              },
              {
                "key": "job_title",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The job title of the admin."
              },
              {
                "key": "away_mode_enabled",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this admin is currently set in away mode."
              },
              {
                "key": "away_mode_reassign",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox."
              },
              {
                "key": "has_inbox_seat",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them."
              },
              {
                "key": "team_ids",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "This is a list of ids of the teams that this admin is part of."
              },
              {
                "key": "avatar",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "default": "avatar"
                          }
                        }
                      },
                      "description": "This is a string that identifies the type of the object. It will always have the value `avatar`."
                    },
                    {
                      "key": "image_url",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "nullable",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          }
                        }
                      },
                      "description": "This object represents the avatar associated with the admin."
                    }
                  ]
                },
                "description": "This object represents the avatar associated with the admin."
              },
              {
                "key": "email_verified",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Identifies if this admin's email is verified."
              },
              {
                "key": "app",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "app"
                      }
                    }
                  }
                },
                "description": "App that the admin belongs to."
              }
            ]
          }
        }
      },
      "description": "Admins are the teammate accounts that have access to a workspace"
    },
    "ai_agent": {
      "name": "AI Agent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "essentials_plan_setup"
                },
                {
                  "value": "profile"
                },
                {
                  "value": "workflow"
                },
                {
                  "value": "workflow_preview"
                },
                {
                  "value": "fin_preview"
                }
              ]
            },
            "description": "The type of the source that triggered AI Agent involvement in the conversation."
          },
          {
            "key": "source_title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The title of the source that triggered AI Agent involvement in the conversation. If this is `essentials_plan_setup` then it will return `null`."
          },
          {
            "key": "last_answer_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "enum",
                  "values": []
                }
              }
            },
            "description": "The type of the last answer delivered by AI Agent. If no answer was delivered then this will return `null`"
          },
          {
            "key": "resolution_state",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "assumed_resolution"
                    },
                    {
                      "value": "confirmed_resolution"
                    },
                    {
                      "value": "routed_to_team"
                    },
                    {
                      "value": "abandoned"
                    }
                  ]
                }
              }
            },
            "description": "The resolution state of AI Agent. If no AI or custom answer has been delivered then this will return `null`."
          },
          {
            "key": "rating",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The customer satisfaction rating given to AI Agent, from 1-5."
          },
          {
            "key": "rating_remark",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The customer satisfaction rating remark given to AI Agent."
          },
          {
            "key": "content_sources",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "content_sources_list"
              }
            }
          }
        ]
      },
      "description": "Data related to AI Agent involvement in the conversation."
    },
    "app": {
      "name": "App",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "default": "app"
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "id_code",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id of the app."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the app."
              },
              {
                "key": "region",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The Intercom region the app is located in."
              },
              {
                "key": "timezone",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The timezone of the region where the app is located."
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "When the app was created."
              },
              {
                "key": "identity_verification",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether or not the app uses identity verification."
              }
            ]
          }
        }
      },
      "description": "App is a workspace on Intercom"
    },
    "article": {
      "name": "Article",
      "shape": {
        "type": "object",
        "extends": [
          "article_list_item"
        ],
        "properties": [
          {
            "key": "statistics",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_statistics"
                  }
                }
              }
            }
          }
        ]
      },
      "description": "The Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone."
    },
    "article_content": {
      "name": "Article Content",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "enum",
                      "values": []
                    }
                  }
                },
                "description": "The type of object - `article_content` ."
              },
              {
                "key": "title",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The title of the article."
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The description of the article."
              },
              {
                "key": "body",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The body of the article."
              },
              {
                "key": "author_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The ID of the author of the article."
              },
              {
                "key": "state",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "published"
                    },
                    {
                      "value": "draft"
                    }
                  ]
                },
                "description": "Whether the article is `published` or is a `draft` ."
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time when the article was created (seconds)."
              },
              {
                "key": "updated_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time when the article was last updated (seconds)."
              },
              {
                "key": "url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The URL of the article."
              }
            ]
          }
        }
      },
      "description": "The Content of an Article."
    },
    "article_list": {
      "name": "Articles",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object - `list`."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "A count of the total number of articles."
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_list_item"
                  }
                }
              }
            },
            "description": "An array of Article objects"
          }
        ]
      },
      "description": "This will return a list of articles for the App."
    },
    "article_list_item": {
      "name": "Articles",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "article"
                }
              ],
              "default": "article"
            },
            "description": "The type of object - `article`."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the article which is given by Intercom."
          },
          {
            "key": "workspace_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the workspace which the article belongs to."
          },
          {
            "key": "title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The title of the article. For multilingual articles, this will be the title of the default language's content."
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The description of the article. For multilingual articles, this will be the description of the default language's content."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The body of the article in HTML. For multilingual articles, this will be the body of the default language's content."
          },
          {
            "key": "author_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace."
          },
          {
            "key": "state",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "published"
                },
                {
                  "value": "draft"
                }
              ],
              "default": "draft"
            },
            "description": "Whether the article is `published` or is a `draft`. For multilingual articles, this will be the state of the default language's content."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time when the article was created. For multilingual articles, this will be the timestamp of creation of the default language's content in seconds."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time when the article was last updated. For multilingual articles, this will be the timestamp of last update of the default language's content in seconds."
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The URL of the article. For multilingual articles, this will be the URL of the default language's content."
          },
          {
            "key": "parent_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The id of the article's parent collection or section. An article without this field stands alone."
          },
          {
            "key": "parent_ids",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The ids of the article's parent collections or sections. An article without this field stands alone."
          },
          {
            "key": "parent_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The type of parent, which can either be a `collection` or `section`."
          },
          {
            "key": "default_locale",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The default locale of the help center. This field is only returned for multilingual help centers."
          },
          {
            "key": "translated_content",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_translated_content"
                  }
                }
              }
            }
          }
        ]
      },
      "description": "The data returned about your articles when you list them."
    },
    "article_search_highlights": {
      "name": "Article Search Highlights",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "article_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the corresponding article."
          },
          {
            "key": "highlighted_title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "enum",
                        "values": [
                          {
                            "value": "highlight"
                          },
                          {
                            "value": "plain"
                          }
                        ]
                      },
                      "description": "The type of text - `highlight` or `plain`."
                    },
                    {
                      "key": "text",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The text of the title."
                    }
                  ]
                }
              }
            },
            "description": "An Article title highlighted."
          },
          {
            "key": "highlighted_summary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "object",
                      "extends": [],
                      "properties": [
                        {
                          "key": "type",
                          "valueShape": {
                            "type": "enum",
                            "values": [
                              {
                                "value": "highlight"
                              },
                              {
                                "value": "plain"
                              }
                            ]
                          },
                          "description": "The type of text - `highlight` or `plain`."
                        },
                        {
                          "key": "text",
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "The text of the title."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "An Article description and body text highlighted."
          }
        ]
      },
      "description": "The highlighted results of an Article search. In the examples provided my search query is always \"my query\"."
    },
    "article_search_response": {
      "name": "Article Search Response",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object - `list`."
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The total number of Articles matching the search query"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "articles",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "article"
                        }
                      }
                    }
                  },
                  "description": "An array of Article objects"
                },
                {
                  "key": "highlights",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "article_search_highlights"
                        }
                      }
                    }
                  },
                  "description": "A corresponding array of highlighted Article content"
                }
              ]
            },
            "description": "An object containing the results of the search."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          }
        ]
      },
      "description": "The results of an Article search"
    },
    "article_statistics": {
      "name": "Article Statistics",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "article_statistics"
                    }
                  ],
                  "default": "article_statistics"
                },
                "description": "The type of object - `article_statistics`."
              },
              {
                "key": "views",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The number of total views the article has received."
              },
              {
                "key": "conversions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The number of conversations started from the article."
              },
              {
                "key": "reactions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The number of total reactions the article has received."
              },
              {
                "key": "happy_reaction_percentage",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                "description": "The percentage of happy reactions the article has received against other types of reaction."
              },
              {
                "key": "neutral_reaction_percentage",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                "description": "The percentage of neutral reactions the article has received against other types of reaction."
              },
              {
                "key": "sad_reaction_percentage",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                "description": "The percentage of sad reactions the article has received against other types of reaction."
              }
            ]
          }
        }
      },
      "description": "The statistics of an article."
    },
    "article_translated_content": {
      "name": "Article Translated Content",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "enum",
                      "values": []
                    }
                  }
                },
                "description": "The type of object - article_translated_content."
              },
              {
                "key": "ar",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Arabic"
              },
              {
                "key": "bg",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Bulgarian"
              },
              {
                "key": "bs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Bosnian"
              },
              {
                "key": "ca",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Catalan"
              },
              {
                "key": "cs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Czech"
              },
              {
                "key": "da",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Danish"
              },
              {
                "key": "de",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in German"
              },
              {
                "key": "el",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Greek"
              },
              {
                "key": "en",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in English"
              },
              {
                "key": "es",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Spanish"
              },
              {
                "key": "et",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Estonian"
              },
              {
                "key": "fi",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Finnish"
              },
              {
                "key": "fr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in French"
              },
              {
                "key": "he",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Hebrew"
              },
              {
                "key": "hr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Croatian"
              },
              {
                "key": "hu",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Hungarian"
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Indonesian"
              },
              {
                "key": "it",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Italian"
              },
              {
                "key": "ja",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Japanese"
              },
              {
                "key": "ko",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Korean"
              },
              {
                "key": "lt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Lithuanian"
              },
              {
                "key": "lv",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Latvian"
              },
              {
                "key": "mn",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Mongolian"
              },
              {
                "key": "nb",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Norwegian"
              },
              {
                "key": "nl",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Dutch"
              },
              {
                "key": "pl",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Polish"
              },
              {
                "key": "pt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Portuguese (Portugal)"
              },
              {
                "key": "ro",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Romanian"
              },
              {
                "key": "ru",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Russian"
              },
              {
                "key": "sl",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Slovenian"
              },
              {
                "key": "sr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Serbian"
              },
              {
                "key": "sv",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Swedish"
              },
              {
                "key": "tr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Turkish"
              },
              {
                "key": "vi",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Vietnamese"
              },
              {
                "key": "pt-BR",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Portuguese (Brazil)"
              },
              {
                "key": "zh-CN",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Chinese (China)"
              },
              {
                "key": "zh-TW",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_content"
                  }
                },
                "description": "The content of the article in Chinese (Taiwan)"
              }
            ]
          }
        }
      },
      "description": "The Translated Content of an Article. The keys are the locale codes and the values are the translated content of the article."
    },
    "assign_conversation_request": {
      "name": "Assign Conversation Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "assignment"
                }
              ]
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "admin"
                },
                {
                  "value": "team"
                }
              ]
            }
          },
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the admin who is performing the action."
          },
          {
            "key": "assignee_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The `id` of the `admin` or `team` which will be assigned the conversation. A conversation can be assigned both an admin and a team.\\nSet `0` if you want this assign to no admin or team (ie. Unassigned)."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optionally you can send a response in the conversation when it is assigned."
          }
        ]
      },
      "description": "Payload of the request to assign a conversation"
    },
    "attach_contact_to_conversation_request": {
      "name": "Assign Conversation Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The `id` of the admin who is adding the new participant."
          },
          {
            "key": "customer",
            "valueShape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "displayName": "Intercom User ID",
                  "shape": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "intercom_user_id",
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "The identifier for the contact as given by Intercom."
                      },
                      {
                        "key": "customer",
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "id",
                                "id": "customer_request"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "displayName": "User ID",
                  "shape": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "user_id",
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "The external_id you have defined for the contact who is being added as a participant."
                      },
                      {
                        "key": "customer",
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "id",
                                "id": "customer_request"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "displayName": "Email",
                  "shape": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "email",
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "The email you have defined for the contact who is being added as a participant."
                      },
                      {
                        "key": "customer",
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "id",
                                "id": "customer_request"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      },
      "description": "Payload of the request to assign a conversation"
    },
    "close_conversation_request": {
      "name": "Close Conversation Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "close"
                }
              ]
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "admin"
                }
              ]
            }
          },
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the admin who is performing the action."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optionally you can leave a message in the conversation to provide additional context to the user and other teammates."
          }
        ]
      },
      "description": "Payload of the request to close a conversation"
    },
    "collection": {
      "name": "Collection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the collection which is given by Intercom."
          },
          {
            "key": "workspace_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the workspace which the collection belongs to."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content."
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The description of the collection. For multilingual help centers, this will be the description of the collection for the default language."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time when the article was created (seconds). For multilingual articles, this will be the timestamp of creation of the default language's content."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time when the article was last updated (seconds). For multilingual articles, this will be the timestamp of last update of the default language's content."
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The URL of the collection. For multilingual help centers, this will be the URL of the collection for the default language."
          },
          {
            "key": "icon",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The icon of the collection."
          },
          {
            "key": "order",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The order of the section in relation to others sections within a collection. Values go from `0` upwards. `0` is the default if there's no order."
          },
          {
            "key": "default_locale",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The default locale of the help center. This field is only returned for multilingual help centers."
          },
          {
            "key": "translated_content",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_translated_content"
                  }
                }
              }
            }
          },
          {
            "key": "parent_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The id of the parent collection. If `null` then it is the first level collection."
          },
          {
            "key": "help_center_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The id of the help center the collection is in."
          }
        ]
      },
      "description": "Collections are top level containers for Articles within the Help Center."
    },
    "collection_list": {
      "name": "Collections",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object - `list`."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "A count of the total number of collections."
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "collection"
                  }
                }
              }
            },
            "description": "An array of collection objects"
          }
        ]
      },
      "description": "This will return a list of Collections for the App."
    },
    "company": {
      "name": "Company",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "company"
                }
              ]
            },
            "description": "Value is `company`"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Intercom defined id representing the company."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the company."
          },
          {
            "key": "app_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Intercom defined code of the workspace the company is associated to."
          },
          {
            "key": "plan",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Value is always \"plan\""
                },
                {
                  "key": "id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The id of the plan"
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The name of the plan"
                }
              ]
            }
          },
          {
            "key": "company_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The company id you have defined for the company."
          },
          {
            "key": "remote_created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the company was created by you."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the company was added in Intercom."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The last time the company was updated."
          },
          {
            "key": "last_request_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the company last recorded making a request."
          },
          {
            "key": "size",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The number of employees in the company."
          },
          {
            "key": "website",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The URL for the company website."
          },
          {
            "key": "industry",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The industry that the company operates in."
          },
          {
            "key": "monthly_spend",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "How much revenue the company generates for your business."
          },
          {
            "key": "session_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "How many sessions the company has recorded."
          },
          {
            "key": "user_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The number of users in the company."
          },
          {
            "key": "custom_attributes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The custom attributes you have set on the company."
          },
          {
            "key": "tags",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "enum",
                    "values": [
                      {
                        "value": "tag.list"
                      }
                    ]
                  },
                  "description": "The type of the object"
                },
                {
                  "key": "tags",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "description": "The list of tags associated with the company"
          },
          {
            "key": "segments",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "enum",
                    "values": [
                      {
                        "value": "segment.list"
                      }
                    ]
                  },
                  "description": "The type of the object"
                },
                {
                  "key": "segments",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "segment"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "description": "The list of segments associated with the company"
          }
        ]
      },
      "description": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies."
    },
    "company_attached_contacts": {
      "name": "Company Attached Contacts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of object - `list`"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "contact"
                  }
                }
              }
            },
            "description": "An array containing Contact Objects"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The total number of contacts"
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          }
        ]
      },
      "description": "A list of Contact Objects"
    },
    "company_attached_segments": {
      "name": "Company Attached Segments",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of object - `list`"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "segment"
                  }
                }
              }
            },
            "description": "An array containing Segment Objects"
          }
        ]
      },
      "description": "A list of Segment Objects"
    },
    "company_list": {
      "name": "Companies",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of object - `list`."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The total number of companies."
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "company"
                  }
                }
              }
            },
            "description": "An array containing Company Objects."
          }
        ]
      },
      "description": "This will return a list of companies for the App."
    },
    "company_scroll": {
      "name": "Company Scroll",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "list"
                    }
                  ]
                },
                "description": "The type of object - `list`"
              },
              {
                "key": "data",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "company"
                      }
                    }
                  }
                }
              },
              {
                "key": "pages",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "cursor_pages"
                  }
                }
              },
              {
                "key": "total_count",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The total number of companies"
              },
              {
                "key": "scroll_param",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The scroll parameter to use in the next request to fetch the next page of results."
              }
            ]
          }
        }
      },
      "description": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies."
    },
    "contact": {
      "name": "Contact",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of object."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the contact which is given by Intercom."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The unique identifier for the contact which is provided by the Client."
          },
          {
            "key": "workspace_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the workspace which the contact belongs to."
          },
          {
            "key": "role",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The role of the contact."
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The contact's email."
          },
          {
            "key": "email_domain",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The contact's email domain."
          },
          {
            "key": "phone",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The contacts phone."
          },
          {
            "key": "formatted_phone",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The contacts phone number normalized to the E164 format"
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The contacts name."
          },
          {
            "key": "owner_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The id of an admin that has been assigned account ownership of the contact."
          },
          {
            "key": "has_hard_bounced",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the contact has had an email sent to them hard bounce."
          },
          {
            "key": "marked_email_as_spam",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the contact has marked an email sent to them as spam."
          },
          {
            "key": "unsubscribed_from_emails",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the contact is unsubscribed from emails."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact was last updated."
          },
          {
            "key": "signed_up_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The time specified for when a contact signed up."
          },
          {
            "key": "last_seen_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)."
          },
          {
            "key": "last_replied_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact last messaged in."
          },
          {
            "key": "last_contacted_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact was last messaged."
          },
          {
            "key": "last_email_opened_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact last opened an email."
          },
          {
            "key": "last_email_clicked_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact last clicked a link in an email."
          },
          {
            "key": "language_override",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change."
          },
          {
            "key": "browser",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The name of the browser which the contact is using."
          },
          {
            "key": "browser_version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The version of the browser which the contact is using."
          },
          {
            "key": "browser_language",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The language set by the browser which the contact is using."
          },
          {
            "key": "os",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The operating system which the contact is using."
          },
          {
            "key": "android_app_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The name of the Android app which the contact is using."
          },
          {
            "key": "android_app_version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The version of the Android app which the contact is using."
          },
          {
            "key": "android_device",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The Android device which the contact is using."
          },
          {
            "key": "android_os_version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The version of the Android OS which the contact is using."
          },
          {
            "key": "android_sdk_version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The version of the Android SDK which the contact is using."
          },
          {
            "key": "android_last_seen_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The time when the contact was last seen on an Android device."
          },
          {
            "key": "ios_app_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The name of the iOS app which the contact is using."
          },
          {
            "key": "ios_app_version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The version of the iOS app which the contact is using."
          },
          {
            "key": "ios_device",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The iOS device which the contact is using."
          },
          {
            "key": "ios_os_version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The version of iOS which the contact is using."
          },
          {
            "key": "ios_sdk_version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The version of the iOS SDK which the contact is using."
          },
          {
            "key": "ios_last_seen_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "(UNIX timestamp) The last time the contact used the iOS app."
          },
          {
            "key": "custom_attributes",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": []
            },
            "description": "The custom attributes which are set for the contact."
          },
          {
            "key": "avatar",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The type of object"
                    },
                    {
                      "key": "image_url",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "nullable",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          }
                        }
                      },
                      "description": "An image URL containing the avatar of a contact."
                    }
                  ]
                }
              }
            }
          },
          {
            "key": "tags",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_tags"
              }
            }
          },
          {
            "key": "notes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_notes"
              }
            }
          },
          {
            "key": "companies",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_companies"
              }
            }
          },
          {
            "key": "location",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_location"
              }
            }
          },
          {
            "key": "social_profiles",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_social_profiles"
              }
            }
          }
        ]
      },
      "description": "Contact are the objects that represent your leads and users in Intercom."
    },
    "contact_archived": {
      "name": "Contact Archived",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact"
                }
              ]
            },
            "description": "always contact"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the contact which is given by Intercom."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The unique identifier for the contact which is provided by the Client."
          },
          {
            "key": "archived",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the contact is archived or not."
          }
        ]
      },
      "description": "archived contact object"
    },
    "contact_attached_companies": {
      "name": "Contact Attached Companies",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of object"
          },
          {
            "key": "companies",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "company"
                  }
                }
              }
            },
            "description": "An array containing Company Objects"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The total number of companies associated to this contact"
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "pages_link"
              }
            }
          }
        ]
      },
      "description": "A list of Company Objects"
    },
    "contact_companies": {
      "name": "Contact companies",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "description": "Url to get more company resources for this contact"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Int representing the total number of companyies attached to this contact"
          },
          {
            "key": "has_more",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all"
          }
        ]
      },
      "description": "An object containing companies meta data about the companies that a contact has. Up to 10 will be displayed here. Use the url to get more."
    },
    "contact_deleted": {
      "name": "Contact Deleted",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact"
                }
              ]
            },
            "description": "always contact"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the contact which is given by Intercom."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The unique identifier for the contact which is provided by the Client."
          },
          {
            "key": "deleted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the contact is deleted or not."
          }
        ]
      },
      "description": "deleted contact object"
    },
    "contact_list": {
      "name": "Contact List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "Always list"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "contact"
                  }
                }
              }
            },
            "description": "The list of contact objects"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "A count of the total number of objects."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          }
        ]
      },
      "description": "Contacts are your users in Intercom."
    },
    "contact_location": {
      "name": "Contact Location",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Always location"
          },
          {
            "key": "country",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The country that the contact is located in"
          },
          {
            "key": "region",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The overal region that the contact is located in"
          },
          {
            "key": "city",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The city that the contact is located in"
          }
        ]
      },
      "description": "An object containing location meta data about a Intercom contact."
    },
    "contact_notes": {
      "name": "Contact notes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "addressable_list"
                  }
                }
              }
            },
            "description": "This object represents the notes attached to a contact."
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "description": "Url to get more company resources for this contact"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Int representing the total number of companyies attached to this contact"
          },
          {
            "key": "has_more",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all"
          }
        ]
      },
      "description": "An object containing notes meta data about the notes that a contact has. Up to 10 will be displayed here. Use the url to get more."
    },
    "contact_reference": {
      "name": "Contact Reference",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact"
                }
              ]
            },
            "description": "always contact"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the contact which is given by Intercom."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The unique identifier for the contact which is provided by the Client."
          }
        ]
      },
      "description": "reference to contact object"
    },
    "contact_reply_base_request": {
      "name": "Contact Reply Base Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "comment"
                }
              ]
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "user"
                }
              ]
            }
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The text body of the comment."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The time the reply was created. If not provided, the current time will be used."
          },
          {
            "key": "attachment_urls",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs."
          }
        ]
      }
    },
    "contact_reply_conversation_request": {
      "name": "Contact Reply",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_intercom_user_id_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_email_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_user_id_request"
              }
            }
          }
        ]
      }
    },
    "contact_reply_email_request": {
      "name": "Email",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The email you have defined for the user."
          },
          {
            "key": "attachment_files",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "conversation_attachment_files"
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of files that will be added as attachments."
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of a contact using their `email`"
    },
    "contact_reply_intercom_user_id_request": {
      "name": "Intercom User ID",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "key": "intercom_user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The identifier for the contact as given by Intercom."
          },
          {
            "key": "attachment_files",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "conversation_attachment_files"
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of files that will be added as attachments."
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`"
    },
    "contact_reply_ticket_email_request": {
      "name": "Email",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The email you have defined for the user."
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of a contact using their `email`"
    },
    "contact_reply_ticket_intercom_user_id_request": {
      "name": "Intercom User ID",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "key": "intercom_user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The identifier for the contact as given by Intercom."
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`"
    },
    "contact_reply_ticket_request": {
      "name": "Contact Reply on ticket",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_ticket_intercom_user_id_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_ticket_user_id_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_ticket_email_request"
              }
            }
          }
        ]
      }
    },
    "contact_reply_ticket_user_id_request": {
      "name": "User ID",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The external_id you have defined for the contact."
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of a contact using their `user_id`"
    },
    "contact_reply_user_id_request": {
      "name": "User ID",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The external_id you have defined for the contact."
          },
          {
            "key": "attachment_files",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "conversation_attachment_files"
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of files that will be added as attachments. You can include up to 10 files."
          }
        ]
      },
      "description": "Payload of the request to reply on behalf of a contact using their `user_id`"
    },
    "contact_segments": {
      "name": "Segments",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "segment"
                  }
                }
              }
            },
            "description": "Segment objects associated with the contact."
          }
        ]
      },
      "description": "A list of segments objects attached to a specific contact."
    },
    "contact_social_profiles": {
      "name": "Social Profile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "social_profile"
                  }
                }
              }
            },
            "description": "A list of social profiles objects associated with the contact."
          }
        ]
      },
      "description": "An object containing social profiles that a contact has."
    },
    "contact_subscription_types": {
      "name": "Contact Subscription Types",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "addressable_list"
                  }
                }
              }
            },
            "description": "This object represents the subscriptions attached to a contact."
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "description": "Url to get more subscription type resources for this contact"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Int representing the total number of subscription types attached to this contact"
          },
          {
            "key": "has_more",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all"
          }
        ]
      },
      "description": "An object containing Subscription Types meta data about the SubscriptionTypes that a contact has."
    },
    "contact_tags": {
      "name": "Contact Tags",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "data",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "addressable_list"
                      }
                    }
                  }
                },
                "description": "This object represents the tags attached to a contact."
              },
              {
                "key": "url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                },
                "description": "url to get more tag resources for this contact"
              },
              {
                "key": "total_count",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Int representing the total number of tags attached to this contact"
              },
              {
                "key": "has_more",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all"
              }
            ]
          }
        }
      },
      "description": "An object containing tags meta data about the tags that a contact has. Up to 10 will be displayed here. Use the url to get more."
    },
    "contact_unarchived": {
      "name": "Contact Unarchived",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact"
                }
              ]
            },
            "description": "always contact"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the contact which is given by Intercom."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The unique identifier for the contact which is provided by the Client."
          },
          {
            "key": "archived",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the contact is archived or not."
          }
        ]
      },
      "description": "unarchived contact object"
    },
    "content_source": {
      "name": "Content Source",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "content_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "file"
                },
                {
                  "value": "article"
                },
                {
                  "value": "external_content"
                },
                {
                  "value": "content_snippet"
                },
                {
                  "value": "workflow_connector_action"
                }
              ]
            },
            "description": "The type of the content source."
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The internal URL linking to the content source for teammates."
          },
          {
            "key": "title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The title of the content source."
          },
          {
            "key": "locale",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ISO 639 language code of the content source."
          }
        ]
      },
      "description": "The content source used by AI Agent in the conversation."
    },
    "content_sources_list": {
      "name": "Content Source List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "content_source.list"
                }
              ]
            }
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The total number of content sources used by AI Agent in the conversation."
          },
          {
            "key": "content_sources",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "content_source"
                  }
                }
              }
            },
            "description": "The content sources used by AI Agent in the conversation."
          }
        ]
      }
    },
    "conversation": {
      "name": "Conversation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Always conversation."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id representing the conversation."
          },
          {
            "key": "title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The title given to the conversation."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the conversation was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The last time the conversation was updated."
          },
          {
            "key": "waiting_since",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The last time a Contact responded to an Admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an Admin."
          },
          {
            "key": "snoozed_until",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "If set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time. i.e. it will be in a snoozed state until this time."
          },
          {
            "key": "open",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Indicates whether a conversation is open (true) or closed (false)."
          },
          {
            "key": "state",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "open"
                },
                {
                  "value": "closed"
                },
                {
                  "value": "snoozed"
                }
              ]
            },
            "description": "Can be set to \"open\", \"closed\" or \"snoozed\"."
          },
          {
            "key": "read",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Indicates whether a conversation has been read."
          },
          {
            "key": "priority",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "priority"
                },
                {
                  "value": "not_priority"
                }
              ]
            },
            "description": "If marked as priority, it will return priority or else not_priority."
          },
          {
            "key": "admin_assignee_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The id of the admin assigned to the conversation. If it's not assigned to an admin it will return null."
          },
          {
            "key": "team_assignee_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The id of the team assigned to the conversation. If it's not assigned to a team it will return null."
          },
          {
            "key": "tags",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "tags"
              }
            }
          },
          {
            "key": "conversation_rating",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_rating"
              }
            }
          },
          {
            "key": "source",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_source"
              }
            }
          },
          {
            "key": "contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_contacts"
              }
            }
          },
          {
            "key": "teammates",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_teammates"
              }
            }
          },
          {
            "key": "custom_attributes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "custom_attributes"
              }
            }
          },
          {
            "key": "first_contact_reply",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_first_contact_reply"
              }
            }
          },
          {
            "key": "sla_applied",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "sla_applied"
              }
            }
          },
          {
            "key": "statistics",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_statistics"
              }
            }
          },
          {
            "key": "conversation_parts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_parts"
              }
            }
          },
          {
            "key": "linked_objects",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "linked_object_list"
              }
            }
          },
          {
            "key": "ai_agent_participated",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Indicates whether the AI Agent participated in the conversation."
          },
          {
            "key": "ai_agent",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ai_agent"
                  }
                }
              }
            }
          }
        ]
      },
      "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact."
    },
    "conversation_attachment_files": {
      "name": "Conversation attachment files",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "content_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The content type of the file"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The base64 encoded file data."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the file."
          }
        ]
      },
      "description": "Properties of the attachment files in a conversation part"
    },
    "conversation_contacts": {
      "name": "Contacts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact.list"
                }
              ]
            },
            "description": ""
          },
          {
            "key": "contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "contact_reference"
                  }
                }
              }
            },
            "description": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature."
          }
        ]
      },
      "description": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature."
    },
    "conversation_first_contact_reply": {
      "name": "First contact reply",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": ""
              }
            ]
          }
        }
      },
      "description": "An object containing information on the first users message. For a contact initiated message this will represent the users original message."
    },
    "conversation_list": {
      "name": "Conversation List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "conversation.list"
                }
              ]
            },
            "description": "Always conversation.list"
          },
          {
            "key": "conversations",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "conversation"
                  }
                }
              }
            },
            "description": "The list of conversation objects"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "A count of the total number of objects."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          }
        ]
      },
      "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact."
    },
    "conversation_part": {
      "name": "Conversation Part",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Always conversation_part"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id representing the conversation part."
          },
          {
            "key": "part_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of conversation part."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the conversation part was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The last time the conversation part was updated."
          },
          {
            "key": "notified_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the user was notified with the conversation part."
          },
          {
            "key": "assigned_to",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "reference"
                  }
                }
              }
            },
            "description": "The id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)"
          },
          {
            "key": "author",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_part_author"
              }
            }
          },
          {
            "key": "attachments",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "part_attachment"
                  }
                }
              }
            },
            "description": "A list of attachments for the part."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The external id of the conversation part"
          },
          {
            "key": "redacted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether or not the conversation part has been redacted."
          }
        ]
      },
      "description": "A Conversation Part represents a message in the conversation."
    },
    "conversation_part_author": {
      "name": "Conversation part author",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of the author"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the author"
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the author"
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            },
            "description": "The email of the author"
          }
        ]
      },
      "description": "The object who initiated the conversation, which can be a Contact, Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams. For Twitter, this will be blank."
    },
    "conversation_parts": {
      "name": "Conversation Parts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "conversation_part.list"
                }
              ]
            },
            "description": ""
          },
          {
            "key": "conversation_parts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "conversation_part"
                  }
                }
              }
            },
            "description": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts."
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": ""
          }
        ]
      },
      "description": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts."
    },
    "conversation_rating": {
      "name": "Conversation Rating",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "rating",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The rating, between 1 and 5, for the conversation."
              },
              {
                "key": "remark",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "An optional field to add a remark to correspond to the number rating"
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the rating was requested in the conversation being rated."
              },
              {
                "key": "contact",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "contact_reference"
                  }
                }
              },
              {
                "key": "teammate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "reference"
                  }
                }
              }
            ]
          }
        }
      },
      "description": "The Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation."
    },
    "conversation_source": {
      "name": "Conversation source",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "This includes conversation, email, facebook, instagram, phone_call, phone_switch, push, sms, twitter and whatsapp."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id representing the message."
          },
          {
            "key": "delivered_as",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The conversation's initiation type. Possible values are customer_initiated, campaigns_initiated (legacy campaigns), operator_initiated (Custom bot), automated (Series and other outbounds with dynamic audience message) and admin_initiated (fixed audience message, ticket initiated by an admin, group email)."
          },
          {
            "key": "subject",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Optional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured."
          },
          {
            "key": "author",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "conversation_part_author"
              }
            }
          },
          {
            "key": "attachments",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "part_attachment"
                  }
                }
              }
            },
            "description": "A list of attachments for the part."
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The URL where the conversation was started. For Twitter, Email, and Bots, this will be blank."
          },
          {
            "key": "redacted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether or not the source message has been redacted. Only applicable for contact initiated messages."
          }
        ]
      },
      "description": "The Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated."
    },
    "conversation_statistics": {
      "name": "Conversation statistics",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "time_to_assignment",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Duration until last assignment before first admin reply. In seconds."
              },
              {
                "key": "time_to_admin_reply",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Duration until first admin reply. Subtracts out of business hours. In seconds."
              },
              {
                "key": "time_to_first_close",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Duration until conversation was closed first time. Subtracts out of business hours. In seconds."
              },
              {
                "key": "time_to_last_close",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Duration until conversation was closed last time. Subtracts out of business hours. In seconds."
              },
              {
                "key": "median_time_to_reply",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Median based on all admin replies after a contact reply. Subtracts out of business hours. In seconds."
              },
              {
                "key": "first_contact_reply_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of first text conversation part from a contact."
              },
              {
                "key": "first_assignment_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of first assignment after first_contact_reply_at."
              },
              {
                "key": "first_admin_reply_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of first admin reply after first_contact_reply_at."
              },
              {
                "key": "first_close_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of first close after first_contact_reply_at."
              },
              {
                "key": "last_assignment_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of last assignment after first_contact_reply_at."
              },
              {
                "key": "last_assignment_admin_reply_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of first admin reply since most recent assignment."
              },
              {
                "key": "last_contact_reply_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of the last conversation part from a contact."
              },
              {
                "key": "last_admin_reply_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of the last conversation part from an admin."
              },
              {
                "key": "last_close_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Time of the last conversation close."
              },
              {
                "key": "last_closed_by_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The last admin who closed the conversation. Returns a reference to an Admin object."
              },
              {
                "key": "count_reopens",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Number of reopens after first_contact_reply_at."
              },
              {
                "key": "count_assignments",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Number of assignments after first_contact_reply_at."
              },
              {
                "key": "count_conversation_parts",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Total number of conversation parts."
              }
            ]
          }
        }
      },
      "description": "A Statistics object containing all information required for reporting, with timestamps and calculated metrics."
    },
    "conversation_teammates": {
      "name": "Conversation teammates",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The type of the object - `admin.list`."
              },
              {
                "key": "teammates",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "reference"
                      }
                    }
                  }
                },
                "description": "The list of teammates who participated in the conversation (wrote at least one conversation part)."
              }
            ]
          }
        }
      },
      "description": "The list of teammates who participated in the conversation (wrote at least one conversation part)."
    },
    "convert_conversation_to_ticket_request": {
      "name": "Convert Ticket Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ticket_type_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the type of ticket you want to convert the conversation to"
          },
          {
            "key": "attributes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_request_custom_attributes"
                  }
                }
              }
            }
          }
        ]
      },
      "description": "You can convert a Conversation to a Ticket"
    },
    "convert_visitor_request": {
      "name": "Convert Visitor Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Represents the role of the Contact model. Accepts `lead` or `user`."
          },
          {
            "key": "user",
            "valueShape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            },
            "description": "The unique identifiers retained after converting or merging."
          },
          {
            "key": "visitor",
            "valueShape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            },
            "description": "The unique identifiers to convert a single Visitor."
          }
        ]
      },
      "description": "You can merge a Visitor to a Contact of role type lead or user."
    },
    "create_article_request": {
      "name": "Create Article Request Payload",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "title",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The title of the article.For multilingual articles, this will be the title of the default language's content."
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The description of the article. For multilingual articles, this will be the description of the default language's content."
              },
              {
                "key": "body",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The content of the article. For multilingual articles, this will be the body of the default language's content."
              },
              {
                "key": "author_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace."
              },
              {
                "key": "state",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "enum",
                      "values": [
                        {
                          "value": "published"
                        },
                        {
                          "value": "draft"
                        }
                      ]
                    }
                  }
                },
                "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content."
              },
              {
                "key": "parent_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The id of the article's parent collection or section. An article without this field stands alone."
              },
              {
                "key": "parent_type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The type of parent, which can either be a `collection` or `section`."
              },
              {
                "key": "translated_content",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "article_translated_content"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "description": "You can create an Article"
    },
    "create_collection_request": {
      "name": "Create Collection Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content."
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The description of the collection. For multilingual collections, this will be the description of the default language's content."
          },
          {
            "key": "translated_content",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "group_translated_content"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "key": "parent_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "The id of the parent collection. If `null` then it will be created as the first level collection."
          },
          {
            "key": "help_center_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "The id of the help center where the collection will be created. If `null` then it will be created in the default help center."
          }
        ]
      },
      "description": "You can create a collection"
    },
    "create_contact_request": {
      "name": "Create Contact Request Payload",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "displayName": "Create contact with email",
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          },
          {
            "displayName": "Create contact with external_id",
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          },
          {
            "displayName": "Create contact with role",
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ]
      },
      "description": "Payload to create a contact"
    },
    "create_conversation_request": {
      "name": "Create Conversation Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "from",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "enum",
                    "values": [
                      {
                        "value": "lead"
                      },
                      {
                        "value": "user"
                      },
                      {
                        "value": "contact"
                      }
                    ]
                  },
                  "description": "The role associated to the contact - user or lead."
                },
                {
                  "key": "id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid",
                        "minLength": 24,
                        "maxLength": 24
                      }
                    }
                  },
                  "description": "The identifier for the contact which is given by Intercom."
                }
              ]
            }
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The content of the message. HTML is not supported."
          }
        ]
      },
      "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact."
    },
    "create_data_attribute_request": {
      "name": "Create Data Attribute Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the data attribute."
          },
          {
            "key": "model",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact"
                },
                {
                  "value": "company"
                }
              ]
            },
            "description": "The model that the data attribute belongs to."
          },
          {
            "key": "data_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "string"
                },
                {
                  "value": "integer"
                },
                {
                  "value": "float"
                },
                {
                  "value": "boolean"
                },
                {
                  "value": "datetime"
                },
                {
                  "value": "date"
                }
              ]
            },
            "description": "The type of data stored for this attribute."
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The readable description you see in the UI for the attribute."
          },
          {
            "key": "options",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`."
          },
          {
            "key": "messenger_writable",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Can this attribute be updated by the Messenger"
          }
        ]
      },
      "description": ""
    },
    "create_data_event_request": {
      "name": "Create Data Event Request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "displayName": "id required",
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          },
          {
            "displayName": "user_id required",
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          },
          {
            "displayName": "email required",
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ]
      },
      "description": ""
    },
    "create_data_event_summaries_request": {
      "name": "Create Data Event Summaries Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Your identifier for the user."
          },
          {
            "key": "event_summaries",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "event_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The name of the event that occurred. A good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`."
                },
                {
                  "key": "count",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "The number of times the event occurred."
                },
                {
                  "key": "first",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "The first time the event was sent"
                },
                {
                  "key": "last",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "description": "The last time the event was sent"
                }
              ]
            },
            "description": "A list of event summaries for the user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`."
          }
        ]
      },
      "description": "You can send a list of event summaries for a user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense \"verb-noun\" combination, to improve readability, for example `updated-plan`."
    },
    "create_data_exports_request": {
      "name": "Create Data Export Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "created_at_after",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The start date that you request data for. It must be formatted as a unix timestamp."
          },
          {
            "key": "created_at_before",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The end date that you request data for. It must be formatted as a unix timestamp."
          }
        ]
      },
      "description": "Request for creating a data export"
    },
    "create_message_request": {
      "name": "Create Message Request Payload",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "displayName": "message_type: `email`.",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "unknown"
                  }
                }
              },
              {
                "displayName": "message_type: `inapp`.",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "unknown"
                  }
                }
              }
            ]
          }
        }
      },
      "description": "You can create a message"
    },
    "create_or_update_company_request": {
      "name": "Create Or Update Company Request Payload",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the Company"
              },
              {
                "key": "company_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The company id you have defined for the company. Can't be updated"
              },
              {
                "key": "plan",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the plan you have associated with the company."
              },
              {
                "key": "size",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The number of employees in this company."
              },
              {
                "key": "website",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The URL for this company's website. Please note that the value specified here is not validated. Accepts any string."
              },
              {
                "key": "industry",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The industry that this company operates in."
              },
              {
                "key": "custom_attributes",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A hash of key/value pairs containing any other data about the company you want Intercom to store."
              },
              {
                "key": "remote_created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the company was created by you."
              },
              {
                "key": "monthly_spend",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "How much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647.."
              }
            ]
          }
        }
      },
      "description": "You can create or update a Company"
    },
    "create_or_update_tag_request": {
      "name": "Create or Update Tag Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The id of tag to updates."
          }
        ]
      },
      "description": "You can create or update an existing tag."
    },
    "create_phone_switch_request": {
      "name": "Create Phone Switch Request Payload",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "phone",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Phone number in E.164 format, that will receive the SMS to continue the conversation in the Messenger."
              },
              {
                "key": "custom_attributes",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "custom_attributes"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "description": "You can create an phone switch"
    },
    "create_ticket_reply_with_comment_request": {
      "name": "Create Ticket Reply Request Payload",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_ticket_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "admin_reply_ticket_request"
              }
            }
          }
        ]
      }
    },
    "create_ticket_request": {
      "name": "Create Ticket Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ticket_type_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the type of ticket you want to create"
          },
          {
            "key": "contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "undiscriminatedUnion",
                  "variants": [
                    {
                      "displayName": "ID",
                      "shape": {
                        "type": "object",
                        "extends": [],
                        "properties": [
                          {
                            "key": "id",
                            "valueShape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "The identifier for the contact as given by Intercom."
                          }
                        ]
                      }
                    },
                    {
                      "displayName": "External ID",
                      "shape": {
                        "type": "object",
                        "extends": [],
                        "properties": [
                          {
                            "key": "external_id",
                            "valueShape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "The external_id you have defined for the contact who is being added as a participant."
                          }
                        ]
                      }
                    },
                    {
                      "displayName": "Email",
                      "shape": {
                        "type": "object",
                        "extends": [],
                        "properties": [
                          {
                            "key": "email",
                            "valueShape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "The email you have defined for the contact who is being added as a participant. If a contact with this email does not exist, one will be created."
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "description": "The list of contacts (users or leads) affected by this ticket. Currently only one is allowed"
          },
          {
            "key": "company_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the company that the ticket is associated with. The ID that you set upon company creation."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The time the ticket was created. If not provided, the current time will be used."
          },
          {
            "key": "ticket_attributes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_request_custom_attributes"
                  }
                }
              }
            }
          }
        ]
      },
      "description": "You can create a Ticket"
    },
    "create_ticket_type_attribute_request": {
      "name": "Create Ticket Type Attribute Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the ticket type attribute"
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The description of the attribute presented to the teammate or contact"
          },
          {
            "key": "data_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "string"
                },
                {
                  "value": "list"
                },
                {
                  "value": "integer"
                },
                {
                  "value": "decimal"
                },
                {
                  "value": "boolean"
                },
                {
                  "value": "datetime"
                },
                {
                  "value": "files"
                }
              ]
            },
            "description": "The data type of the attribute"
          },
          {
            "key": "required_to_create",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            },
            "description": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox."
          },
          {
            "key": "required_to_create_for_contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            },
            "description": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger."
          },
          {
            "key": "visible_on_create",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              }
            },
            "description": "Whether the attribute is visible to teammates when creating a ticket in Inbox."
          },
          {
            "key": "visible_to_contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              }
            },
            "description": "Whether the attribute is visible to contacts when creating a ticket in Messenger."
          },
          {
            "key": "multiline",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether the attribute allows multiple lines of text (only applicable to string attributes)"
          },
          {
            "key": "list_items",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A comma delimited list of items for the attribute value (only applicable to list attributes)"
          },
          {
            "key": "allow_multiple_values",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)"
          }
        ]
      },
      "description": "You can create a Ticket Type Attribute"
    },
    "create_ticket_type_request": {
      "name": "Create Ticket Type Request Payload",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the ticket type."
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The description of the ticket type."
              },
              {
                "key": "category",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "enum",
                      "values": [
                        {
                          "value": "Customer"
                        },
                        {
                          "value": "Back-office"
                        },
                        {
                          "value": "Tracker"
                        }
                      ]
                    }
                  }
                },
                "description": "Category of the Ticket Type."
              },
              {
                "key": "icon",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "default": "🎟️"
                        }
                      }
                    }
                  }
                },
                "description": "The icon of the ticket type."
              },
              {
                "key": "is_internal",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  }
                },
                "description": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute."
              }
            ]
          }
        }
      },
      "description": "The request payload for creating a ticket type.\n  You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n"
    },
    "cursor_pages": {
      "name": "Cursor based pages",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "pages"
                    }
                  ]
                },
                "description": "the type of object `pages`."
              },
              {
                "key": "page",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The current page"
              },
              {
                "key": "next",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "starting_after_paging"
                  }
                }
              },
              {
                "key": "per_page",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Number of results per page"
              },
              {
                "key": "total_pages",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "Total number of pages"
              }
            ]
          }
        }
      },
      "description": "Cursor-based pagination is a technique used in the Intercom API to navigate through large amounts of data.\nA \"cursor\" or pointer is used to keep track of the current position in the result set, allowing the API to return the data in small chunks or \"pages\" as needed.\n"
    },
    "custom_attributes": {
      "name": "Custom Attributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      },
      "description": "An object containing the different custom attributes associated to the conversation as key-value pairs. For relationship attributes the value will be a list of custom object instance models."
    },
    "custom_object_instance": {
      "name": "Custom Object Instance",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The Intercom defined id representing the custom object instance."
              },
              {
                "key": "external_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id you have defined for the custom object instance."
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The identifier of the custom object type that defines the structure of the custom object instance."
              },
              {
                "key": "custom_attributes",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The custom attributes you have set on the custom object instance."
              }
            ]
          }
        }
      },
      "description": "A Custom Object Instance represents an instance of a custom object type. This allows you to create and set custom attributes to store data about your customers that is not already captured by Intercom. The parent object includes recommended default attributes and you can add your own custom attributes."
    },
    "customer_request": {
      "name": "customer_request",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "undiscriminatedUnion",
            "variants": [
              {
                "displayName": "Intercom User ID",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "intercom_user_id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The identifier for the contact as given by Intercom."
                    }
                  ]
                }
              },
              {
                "displayName": "User ID",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "user_id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The external_id you have defined for the contact who is being added as a participant."
                    }
                  ]
                }
              },
              {
                "displayName": "Email",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "email",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The email you have defined for the contact who is being added as a participant."
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "data_attribute": {
      "name": "Data Attribute",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "data_attribute"
                }
              ]
            },
            "description": "Value is `data_attribute`."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The unique identifier for the data attribute which is given by Intercom. Only available for custom attributes."
          },
          {
            "key": "model",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact"
                },
                {
                  "value": "company"
                }
              ]
            },
            "description": "Value is `contact` for user/lead attributes and `company` for company attributes."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Name of the attribute."
          },
          {
            "key": "full_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Full name of the attribute. Should match the name unless it's a nested attribute. We can split full_name on `.` to access nested user object values."
          },
          {
            "key": "label",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Readable name of the attribute (i.e. name you see in the UI)"
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Readable description of the attribute."
          },
          {
            "key": "data_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "string"
                },
                {
                  "value": "integer"
                },
                {
                  "value": "float"
                },
                {
                  "value": "boolean"
                },
                {
                  "value": "date"
                }
              ]
            },
            "description": "The data type of the attribute."
          },
          {
            "key": "options",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "List of predefined options for attribute value."
          },
          {
            "key": "api_writable",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Can this attribute be updated through API"
          },
          {
            "key": "messenger_writable",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Can this attribute be updated by the Messenger"
          },
          {
            "key": "ui_writable",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Can this attribute be updated in the UI"
          },
          {
            "key": "custom",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Set to true if this is a CDA"
          },
          {
            "key": "archived",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Is this attribute archived. (Only applicable to CDAs)"
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the attribute was created as a UTC Unix timestamp"
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the attribute was last updated as a UTC Unix timestamp"
          },
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Teammate who created the attribute. Only applicable to CDAs"
          }
        ]
      },
      "description": "Data Attributes are metadata used to describe your contact, company and conversation models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes."
    },
    "data_attribute_list": {
      "name": "Data Attribute List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "data_attribute"
                  }
                }
              }
            },
            "description": "A list of data attributes"
          }
        ]
      },
      "description": "A list of all data attributes belonging to a workspace for contacts, companies or conversations."
    },
    "data_event": {
      "name": "Data Event",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "event"
                    }
                  ]
                }
              }
            },
            "description": "The type of the object"
          },
          {
            "key": "event_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the event occurred as a UTC Unix timestamp"
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Your identifier for the user."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Your identifier for a lead or a user."
          },
          {
            "key": "intercom_user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The Intercom identifier for the user."
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "An email address for your user. An email should only be used where your application uses email to uniquely identify users."
          },
          {
            "key": "metadata",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Optional metadata about the event."
          }
        ]
      },
      "description": "Data events are used to notify Intercom of changes to your data."
    },
    "data_event_list": {
      "name": "Data Event List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "event.list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "events",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "data_event"
                  }
                }
              }
            },
            "description": "A list of data events"
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "next",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "since",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            },
            "description": "Pagination"
          }
        ]
      },
      "description": "This will return a list of data events for the App."
    },
    "data_event_summary": {
      "name": "Data Event Summary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "event.summary"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The email address of the user"
          },
          {
            "key": "intercom_user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The Intercom user ID of the user"
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The user ID of the user"
          },
          {
            "key": "events",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "data_event_summary_item"
                  }
                }
              }
            },
            "description": "A summary of data events"
          }
        ]
      },
      "description": "This will return a summary of data events for the App."
    },
    "data_event_summary_item": {
      "name": "Data Event Summary Item",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the event"
              },
              {
                "key": "first",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The first time the event was sent"
              },
              {
                "key": "last",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The last time the event was sent"
              },
              {
                "key": "count",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The number of times the event was sent"
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The description of the event"
              }
            ]
          }
        }
      },
      "description": "This will return a summary of a data event for the App."
    },
    "data_export": {
      "name": "Data Export",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "job_identfier",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The identifier for your job."
          },
          {
            "key": "status",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "pending"
                },
                {
                  "value": "in_progress"
                },
                {
                  "value": "failed"
                },
                {
                  "value": "completed"
                },
                {
                  "value": "no_data"
                },
                {
                  "value": "canceled"
                }
              ]
            },
            "description": "The current state of your job."
          },
          {
            "key": "download_expires_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The time after which you will not be able to access the data."
          },
          {
            "key": "download_url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The location where you can download your data."
          }
        ]
      },
      "description": "The data export api is used to view all message sent & viewed in a given timeframe."
    },
    "data_export_csv": {
      "name": "Data Export CSV",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The user_id of the user who was sent the message."
          },
          {
            "key": "user_external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The external_user_id of the user who was sent the message"
          },
          {
            "key": "company_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The company ID of the user in relation to the message that was sent. Will return -1 if no company is present."
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The users email who was sent the message."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The full name of the user receiving the message"
          },
          {
            "key": "ruleset_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the message."
          },
          {
            "key": "content_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The specific content that was received. In an A/B test each version has its own Content ID."
          },
          {
            "key": "content_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Email, Chat, Post etc."
          },
          {
            "key": "content_title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The title of the content you see in your Intercom workspace."
          },
          {
            "key": "ruleset_version_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "As you edit content we record new versions. This ID can help you determine which version of a piece of content that was received."
          },
          {
            "key": "receipt_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID for this receipt. Will be included with any related stats in other files to identify this specific delivery of a message."
          },
          {
            "key": "received_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Timestamp for when the receipt was recorded."
          },
          {
            "key": "series_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the series that this content is part of. Will return -1 if not part of a series."
          },
          {
            "key": "series_title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The title of the series that this content is part of."
          },
          {
            "key": "node_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the series node that this ruleset is associated with. Each block in a series has a corresponding node_id."
          },
          {
            "key": "first_reply",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time a user replied to this message if the content was able to receive replies."
          },
          {
            "key": "first_completion",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time a user completed this message if the content was able to be completed e.g. Tours, Surveys."
          },
          {
            "key": "first_series_completion",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the series this message was a part of was completed by the user."
          },
          {
            "key": "first_series_disengagement",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the series this message was a part of was disengaged by the user."
          },
          {
            "key": "first_series_exit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the series this message was a part of was exited by the user."
          },
          {
            "key": "first_goal_success",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the user met this messages associated goal if one exists."
          },
          {
            "key": "first_open",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the user opened this message."
          },
          {
            "key": "first_click",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the series the user clicked on a link within this message."
          },
          {
            "key": "first_dismisall",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the series the user dismissed this message."
          },
          {
            "key": "first_unsubscribe",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time the user unsubscribed from this message."
          },
          {
            "key": "first_hard_bounce",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The first time this message hard bounced for this user"
          }
        ]
      },
      "description": "A CSV output file"
    },
    "deleted_article_object": {
      "name": "Deleted Article Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the article which you provided in the URL."
          },
          {
            "key": "object",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "article"
                }
              ]
            },
            "description": "The type of object which was deleted. - article"
          },
          {
            "key": "deleted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the article was deleted successfully or not."
          }
        ]
      },
      "description": "Response returned when an object is deleted"
    },
    "deleted_collection_object": {
      "name": "Deleted Collection Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the collection which you provided in the URL."
          },
          {
            "key": "object",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "collection"
                }
              ]
            },
            "description": "The type of object which was deleted. - `collection`"
          },
          {
            "key": "deleted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the collection was deleted successfully or not."
          }
        ]
      },
      "description": "Response returned when an object is deleted"
    },
    "deleted_company_object": {
      "name": "Deleted Company Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the company which is given by Intercom."
          },
          {
            "key": "object",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "company"
                }
              ]
            },
            "description": "The type of object which was deleted. - `company`"
          },
          {
            "key": "deleted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the company was deleted successfully or not."
          }
        ]
      },
      "description": "Response returned when an object is deleted"
    },
    "deleted_object": {
      "name": "Deleted Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the news item which you provided in the URL."
          },
          {
            "key": "object",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "news-item"
                }
              ]
            },
            "description": "The type of object which was deleted - news-item."
          },
          {
            "key": "deleted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the news item was deleted successfully or not."
          }
        ]
      },
      "description": "Response returned when an object is deleted"
    },
    "detach_contact_from_conversation_request": {
      "name": "detach_contact_from_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The `id` of the admin who is performing the action."
          }
        ]
      }
    },
    "error": {
      "name": "Error",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type is error.list"
          },
          {
            "key": "request_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          {
            "key": "errors",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "code",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "A string indicating the kind of error, used to further qualify the HTTP response code"
                    },
                    {
                      "key": "message",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "nullable",
                              "shape": {
                                "type": "alias",
                                "value": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Optional. Human readable description of the error."
                    },
                    {
                      "key": "field",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "nullable",
                              "shape": {
                                "type": "alias",
                                "value": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Optional. Used to identify a particular field or query parameter that was in error."
                    }
                  ]
                }
              }
            },
            "description": "An array of one or more error objects"
          }
        ]
      },
      "description": "The API will return an Error List for a failed request, which will contain one or more Error objects."
    },
    "file_attribute": {
      "name": "File",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the file"
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The url of the file. This is a temporary URL and will expire after 30 minutes."
          },
          {
            "key": "content_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of file"
          },
          {
            "key": "filesize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The size of the file in bytes"
          },
          {
            "key": "width",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The width of the file in pixels, if applicable"
          },
          {
            "key": "height",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The height of the file in pixels, if applicable"
          }
        ]
      },
      "description": "The value describing a file upload set for a custom attribute"
    },
    "group_content": {
      "name": "Group Content",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "enum",
                      "values": []
                    }
                  }
                },
                "description": "The type of object - `group_content` ."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the collection or section."
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The description of the collection. Only available for collections."
              }
            ]
          }
        }
      },
      "description": "The Content of a Group."
    },
    "group_translated_content": {
      "name": "Group Translated Content",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "enum",
                      "values": []
                    }
                  }
                },
                "description": "The type of object - group_translated_content."
              },
              {
                "key": "ar",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Arabic"
              },
              {
                "key": "bg",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Bulgarian"
              },
              {
                "key": "bs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Bosnian"
              },
              {
                "key": "ca",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Catalan"
              },
              {
                "key": "cs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Czech"
              },
              {
                "key": "da",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Danish"
              },
              {
                "key": "de",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in German"
              },
              {
                "key": "el",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Greek"
              },
              {
                "key": "en",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in English"
              },
              {
                "key": "es",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Spanish"
              },
              {
                "key": "et",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Estonian"
              },
              {
                "key": "fi",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Finnish"
              },
              {
                "key": "fr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in French"
              },
              {
                "key": "he",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Hebrew"
              },
              {
                "key": "hr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Croatian"
              },
              {
                "key": "hu",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Hungarian"
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Indonesian"
              },
              {
                "key": "it",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Italian"
              },
              {
                "key": "ja",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Japanese"
              },
              {
                "key": "ko",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Korean"
              },
              {
                "key": "lt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Lithuanian"
              },
              {
                "key": "lv",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Latvian"
              },
              {
                "key": "mn",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Mongolian"
              },
              {
                "key": "nb",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Norwegian"
              },
              {
                "key": "nl",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Dutch"
              },
              {
                "key": "pl",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Polish"
              },
              {
                "key": "pt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Portuguese (Portugal)"
              },
              {
                "key": "ro",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Romanian"
              },
              {
                "key": "ru",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Russian"
              },
              {
                "key": "sl",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Slovenian"
              },
              {
                "key": "sr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Serbian"
              },
              {
                "key": "sv",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Swedish"
              },
              {
                "key": "tr",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Turkish"
              },
              {
                "key": "vi",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Vietnamese"
              },
              {
                "key": "pt-BR",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Portuguese (Brazil)"
              },
              {
                "key": "zh-CN",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Chinese (China)"
              },
              {
                "key": "zh-TW",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_content"
                  }
                },
                "description": "The content of the group in Chinese (Taiwan)"
              }
            ]
          }
        }
      },
      "description": "The Translated Content of an Group. The keys are the locale codes and the values are the translated content of the Group."
    },
    "help_center": {
      "name": "Help Center",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the Help Center which is given by Intercom."
          },
          {
            "key": "workspace_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the workspace which the Help Center belongs to."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time when the Help Center was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time when the Help Center was last updated."
          },
          {
            "key": "identifier",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The identifier of the Help Center. This is used in the URL of the Help Center."
          },
          {
            "key": "website_turned_on",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the Help Center is turned on or not. This is controlled in your Help Center settings."
          },
          {
            "key": "display_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The display name of the Help Center only seen by teammates."
          }
        ]
      },
      "description": "Help Centers contain collections"
    },
    "help_center_list": {
      "name": "Help Centers",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object - `list`."
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "help_center"
                  }
                }
              }
            },
            "description": "An array of Help Center objects"
          }
        ]
      },
      "description": "A list of Help Centers belonging to the App"
    },
    "intercom_version": {
      "name": "intercom_version",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "1.0"
          },
          {
            "value": "1.1"
          },
          {
            "value": "1.2"
          },
          {
            "value": "1.3"
          },
          {
            "value": "1.4"
          },
          {
            "value": "2.0"
          },
          {
            "value": "2.1"
          },
          {
            "value": "2.2"
          },
          {
            "value": "2.3"
          },
          {
            "value": "2.4"
          },
          {
            "value": "2.5"
          },
          {
            "value": "2.6"
          },
          {
            "value": "2.7"
          },
          {
            "value": "2.8"
          },
          {
            "value": "2.9"
          },
          {
            "value": "2.10"
          },
          {
            "value": "2.11"
          },
          {
            "value": "Unstable"
          }
        ],
        "default": "2.11"
      },
      "description": "Intercom API version.</br>By default, it's equal to the version set in the app package."
    },
    "linked_object": {
      "name": "Linked Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "ticket"
                },
                {
                  "value": "conversation"
                }
              ]
            },
            "description": "ticket or conversation"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the linked object"
          },
          {
            "key": "category",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "Customer"
                    },
                    {
                      "value": "Back-office"
                    },
                    {
                      "value": "Tracker"
                    }
                  ]
                }
              }
            },
            "description": "Category of the Linked Ticket Object."
          }
        ]
      },
      "description": "A linked conversation or ticket."
    },
    "linked_object_list": {
      "name": "Linked Objects",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "Always list."
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The total number of linked objects."
          },
          {
            "key": "has_more",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether or not there are more linked objects than returned."
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "linked_object"
                  }
                }
              }
            },
            "description": "An array containing the linked conversations and linked tickets."
          }
        ]
      },
      "description": "An object containing metadata about linked conversations and linked tickets. Up to 1000 can be returned."
    },
    "merge_contacts_request": {
      "name": "Merge contact data",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "from",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the contact to merge away from. Must be a lead."
          },
          {
            "key": "into",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the contact to merge into. Must be a user."
          }
        ]
      },
      "description": "Merge contact data."
    },
    "message": {
      "name": "Message",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of the message"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id representing the message."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the conversation was created."
          },
          {
            "key": "subject",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The subject of the message. Only present if message_type: email."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The message body, which may contain HTML."
          },
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "email"
                },
                {
                  "value": "inapp"
                },
                {
                  "value": "facebook"
                },
                {
                  "value": "twitter"
                }
              ]
            },
            "description": "The type of message that was sent. Can be email, inapp, facebook or twitter."
          },
          {
            "key": "conversation_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The associated conversation_id"
          }
        ]
      },
      "description": "Message are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact."
    },
    "multiple_filter_search_request": {
      "name": "Multiple Filter Search Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "operator",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "AND"
                },
                {
                  "value": "OR"
                }
              ]
            },
            "description": "An operator to allow boolean inspection between multiple fields."
          },
          {
            "key": "value",
            "valueShape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "displayName": "multiple filter search request",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "multiple_filter_search_request"
                        }
                      }
                    }
                  },
                  "description": "Add mutiple filters."
                },
                {
                  "displayName": "single filter search request",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "single_filter_search_request"
                        }
                      }
                    }
                  },
                  "description": "Add a single filter field."
                }
              ]
            }
          }
        ]
      },
      "description": "Search using Intercoms Search APIs with more than one filter."
    },
    "news_item": {
      "name": "News Item",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "news-item"
                }
              ]
            },
            "description": "The type of object."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the news item which is given by Intercom."
          },
          {
            "key": "workspace_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the workspace which the news item belongs to."
          },
          {
            "key": "title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The title of the news item."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The news item body, which may contain HTML."
          },
          {
            "key": "sender_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The id of the sender of the news item. Must be a teammate on the workspace."
          },
          {
            "key": "state",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "draft"
                },
                {
                  "value": "live"
                }
              ]
            },
            "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live."
          },
          {
            "key": "newsfeed_assignments",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "newsfeed_assignment"
                  }
                }
              }
            },
            "description": "A list of newsfeed_assignments to assign to the specified newsfeed."
          },
          {
            "key": "labels",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Label names displayed to users to categorize the news item."
          },
          {
            "key": "cover_image_url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            },
            "description": "URL of the image used as cover. Must have .jpg or .png extension."
          },
          {
            "key": "reactions",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled."
          },
          {
            "key": "deliver_silently",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "When set to true, the news item will appear in the messenger newsfeed without showing a notification badge."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Timestamp for when the news item was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Timestamp for when the news item was last updated."
          }
        ]
      },
      "description": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers."
    },
    "news_item_request": {
      "name": "Create News Item Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The title of the news item."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The news item body, which may contain HTML."
          },
          {
            "key": "sender_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The id of the sender of the news item. Must be a teammate on the workspace."
          },
          {
            "key": "state",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "draft"
                    },
                    {
                      "value": "live"
                    }
                  ]
                }
              }
            },
            "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live."
          },
          {
            "key": "deliver_silently",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "When set to `true`, the news item will appear in the messenger newsfeed without showing a notification badge."
          },
          {
            "key": "labels",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Label names displayed to users to categorize the news item."
          },
          {
            "key": "reactions",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "nullable",
                        "shape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled."
          },
          {
            "key": "newsfeed_assignments",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "newsfeed_assignment"
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of newsfeed_assignments to assign to the specified newsfeed."
          }
        ]
      },
      "description": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers."
    },
    "newsfeed": {
      "name": "Newsfeed",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the newsfeed which is given by Intercom."
          },
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "newsfeed"
                }
              ]
            },
            "description": "The type of object."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the newsfeed. This name will never be visible to your users."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Timestamp for when the newsfeed was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Timestamp for when the newsfeed was last updated."
          }
        ]
      },
      "description": "A newsfeed is a collection of news items, targeted to a specific audience.\n\nNewsfeeds currently cannot be edited through the API, please refer to [this article](https://www.intercom.com/help/en/articles/6362267-getting-started-with-news) to set up your newsfeeds in Intercom.\n"
    },
    "newsfeed_assignment": {
      "name": "Newsfeed Assignment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "newsfeed_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The unique identifier for the newsfeed which is given by Intercom. Publish dates cannot be in the future, to schedule news items use the dedicated feature in app (see this article)."
          },
          {
            "key": "published_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Publish date of the news item on the newsfeed, use this field if you want to set a publish date in the past (e.g. when importing existing news items). On write, this field will be ignored if the news item state is \"draft\"."
          }
        ]
      },
      "description": "Assigns a news item to a newsfeed."
    },
    "note": {
      "name": "Note",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "String representing the object's type. Always has the value `note`."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the note."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the note was created."
          },
          {
            "key": "contact",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "String representing the object's type. Always has the value `contact`."
                    },
                    {
                      "key": "id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The id of the contact."
                    }
                  ]
                }
              }
            },
            "description": "Represents the contact that the note was created about."
          },
          {
            "key": "author",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "admin"
              }
            },
            "description": "Optional. Represents the Admin that created the note."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The body text of the note."
          }
        ]
      },
      "description": "Notes allow you to annotate and comment on your contacts."
    },
    "note_list": {
      "name": "Paginated Response",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "String representing the object's type. Always has the value `list`."
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "note"
                  }
                }
              }
            },
            "description": "An array of notes."
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "A count of the total number of notes."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          }
        ]
      },
      "description": "A paginated list of notes associated with a contact."
    },
    "open_conversation_request": {
      "name": "Open Conversation Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "open"
                }
              ]
            }
          },
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the admin who is performing the action."
          }
        ]
      },
      "description": "Payload of the request to open a conversation"
    },
    "pages_link": {
      "name": "Pagination Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "pages"
                }
              ]
            }
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "next",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            },
            "description": "A link to the next page of results. A response that does not contain a next link does not have further data to fetch."
          },
          {
            "key": "per_page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "total_pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      },
      "description": "The majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n"
    },
    "paginated_response": {
      "name": "Paginated Response",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                },
                {
                  "value": "conversation.list"
                }
              ]
            },
            "description": "The type of object"
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "A count of the total number of objects."
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "undiscriminatedUnion",
                  "variants": [
                    {
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "news_item"
                        }
                      }
                    },
                    {
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "newsfeed"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "description": "An array of Objects"
          }
        ]
      },
      "description": "Paginated Response"
    },
    "part_attachment": {
      "name": "Part attachment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of attachment"
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the attachment"
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The URL of the attachment"
          },
          {
            "key": "content_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The content type of the attachment"
          },
          {
            "key": "filesize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The size of the attachment"
          },
          {
            "key": "width",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The width of the attachment"
          },
          {
            "key": "height",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The height of the attachment"
          }
        ]
      },
      "description": "The file attached to a part"
    },
    "phone_switch": {
      "name": "Phone Switch",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "phone_call_redirect"
                    }
                  ],
                  "default": "phone_call_redirect"
                },
                "description": ""
              },
              {
                "key": "phone",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Phone number in E.164 format, that has received the SMS to continue the conversation in the Messenger."
              }
            ]
          }
        }
      },
      "description": "Phone Switch Response"
    },
    "redact_conversation_request": {
      "name": "redact_conversation_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "displayName": "Redact Conversation Part Request",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "enum",
                    "values": [
                      {
                        "value": "conversation_part"
                      }
                    ]
                  },
                  "description": "The type of resource being redacted."
                },
                {
                  "key": "conversation_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The id of the conversation."
                },
                {
                  "key": "conversation_part_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The id of the conversation_part."
                }
              ]
            },
            "description": "Payload of the request to redact a conversation part"
          },
          {
            "displayName": "Redact Conversation Source Request",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "enum",
                    "values": [
                      {
                        "value": "source"
                      }
                    ]
                  },
                  "description": "The type of resource being redacted."
                },
                {
                  "key": "conversation_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The id of the conversation."
                },
                {
                  "key": "source_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The id of the source."
                }
              ]
            },
            "description": "Payload of the request to redact a conversation source"
          }
        ]
      }
    },
    "reference": {
      "name": "Reference",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": ""
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          }
        ]
      },
      "description": "reference to another object"
    },
    "reply_conversation_request": {
      "name": "reply_conversation_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_conversation_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "admin_reply_conversation_request"
              }
            }
          }
        ]
      }
    },
    "search_request": {
      "name": "Search data",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueShape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "single_filter_search_request"
                    }
                  }
                },
                {
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "multiple_filter_search_request"
                    }
                  }
                }
              ]
            }
          },
          {
            "key": "pagination",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "starting_after_paging"
                  }
                }
              }
            }
          }
        ]
      },
      "description": "Search using Intercoms Search APIs."
    },
    "segment": {
      "name": "Segment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "segment"
                }
              ]
            },
            "description": "The type of object."
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier representing the segment."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the segment."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the segment was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the segment was updated."
          },
          {
            "key": "person_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact"
                },
                {
                  "value": "user"
                }
              ]
            },
            "description": "Type of the contact: contact (lead) or user."
          },
          {
            "key": "count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of items in the user segment. It's returned when `include_count=true` is included in the request."
          }
        ]
      },
      "description": "A segment is a group of your contacts defined by the rules that you set."
    },
    "segment_list": {
      "name": "Segment List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "segment.list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "segments",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "segment"
                  }
                }
              }
            },
            "description": "A list of Segment objects"
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": []
            },
            "description": "A pagination object, which may be empty, indicating no further pages to fetch."
          }
        ]
      },
      "description": "This will return a list of Segment Objects. The result may also have a pages object if the response is paginated."
    },
    "single_filter_search_request": {
      "name": "Single Filter Search Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "field",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The accepted field that you want to search on."
          },
          {
            "key": "operator",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "="
                },
                {
                  "value": "!="
                },
                {
                  "value": "IN"
                },
                {
                  "value": "NIN"
                },
                {
                  "value": "<"
                },
                {
                  "value": ">"
                },
                {
                  "value": "~"
                },
                {
                  "value": "!~"
                },
                {
                  "value": "^"
                },
                {
                  "value": "$"
                }
              ]
            },
            "description": "The accepted operators you can use to define how you want to search for the value."
          },
          {
            "key": "value",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The value that you want to search on."
          }
        ]
      },
      "description": "Search using Intercoms Search APIs with a single filter."
    },
    "sla_applied": {
      "name": "Applied SLA",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "object type"
              },
              {
                "key": "sla_name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the SLA as given by the teammate when it was created."
              },
              {
                "key": "sla_status",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "hit"
                    },
                    {
                      "value": "missed"
                    },
                    {
                      "value": "cancelled"
                    },
                    {
                      "value": "active"
                    }
                  ]
                },
                "description": "SLA statuses:\n            - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.\n            - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.\n            - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events."
              }
            ]
          }
        }
      },
      "description": "The SLA Applied object contains the details for which SLA has been applied to this conversation.\nImportant: if there are any canceled sla_events for the conversation - meaning an SLA has been manually removed from a conversation, the sla_status will always be returned as null.\n"
    },
    "snooze_conversation_request": {
      "name": "Snooze Conversation Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "snoozed"
                }
              ]
            }
          },
          {
            "key": "admin_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the admin who is performing the action."
          },
          {
            "key": "snoozed_until",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time you want the conversation to reopen."
          }
        ]
      },
      "description": "Payload of the request to snooze a conversation"
    },
    "social_profile": {
      "name": "Social Profile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "value is \"social_profile\""
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the Social media profile"
          },
          {
            "key": "url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "description": "The name of the Social media profile"
          }
        ]
      },
      "description": "A Social Profile allows you to label your contacts, companies, and conversations and list them using that Social Profile."
    },
    "starting_after_paging": {
      "name": "Pagination: Starting After",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "per_page",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The number of results to fetch per page."
              },
              {
                "key": "starting_after",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The cursor to use in the next request to get the next page of results."
              }
            ]
          }
        }
      }
    },
    "subscription_type": {
      "name": "Subscription Types",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of the object - subscription"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier representing the subscription type."
          },
          {
            "key": "state",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "live"
                },
                {
                  "value": "draft"
                },
                {
                  "value": "archived"
                }
              ]
            },
            "description": "The state of the subscription type."
          },
          {
            "key": "default_translation",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "translation"
              }
            }
          },
          {
            "key": "translations",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "translation"
                  }
                }
              }
            },
            "description": "An array of translations objects with the localised version of the subscription type in each available locale within your translation settings."
          },
          {
            "key": "consent_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "opt_out"
                },
                {
                  "value": "opt_in"
                }
              ]
            },
            "description": "Describes the type of consent."
          },
          {
            "key": "content_types",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "email"
                    },
                    {
                      "value": "sms_message"
                    }
                  ]
                }
              }
            },
            "description": "The message types that this subscription supports - can contain `email` or `sms_message`."
          }
        ]
      },
      "description": "A subscription type lets customers easily opt out of non-essential communications without missing what's important to them."
    },
    "subscription_type_list": {
      "name": "Subscription Types",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "subscription_type"
                  }
                }
              }
            },
            "description": "A list of subscription type objects associated with the workspace ."
          }
        ]
      },
      "description": "A list of subscription type objects."
    },
    "tag": {
      "name": "Tag",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "value is \"tag\""
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the tag"
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the tag"
          },
          {
            "key": "applied_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time when the tag was applied to the object"
          },
          {
            "key": "applied_by",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "reference"
              }
            }
          }
        ]
      },
      "description": "A tag allows you to label your contacts, companies, and conversations and list them using that tag."
    },
    "tag_company_request": {
      "name": "Tag Company Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the tag, which will be created if not found."
          },
          {
            "key": "companies",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The Intercom defined id representing the company."
                    },
                    {
                      "key": "company_id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The company id you have defined for the company."
                    }
                  ]
                }
              }
            },
            "description": "The id or company_id of the company can be passed as input parameters."
          }
        ]
      },
      "description": "You can tag a single company or a list of companies."
    },
    "tag_list": {
      "name": "Tags",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "data",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "tag"
                  }
                }
              }
            },
            "description": "A list of tags objects associated with the workspace ."
          }
        ]
      },
      "description": "A list of tags objects in the workspace."
    },
    "tag_multiple_users_request": {
      "name": "Tag Users Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the tag, which will be created if not found."
          },
          {
            "key": "users",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The Intercom defined id representing the user."
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "description": "You can tag a list of users."
    },
    "tags": {
      "name": "Tags",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "tag.list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "tags",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "tag"
                  }
                }
              }
            },
            "description": "A list of tags objects associated with the conversation."
          }
        ]
      },
      "description": "A list of tags objects associated with a conversation"
    },
    "team": {
      "name": "Team",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Value is always \"team\""
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the team"
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the team"
          },
          {
            "key": "admin_ids",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The list of admin IDs that are a part of the team."
          },
          {
            "key": "admin_priority_level",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "admin_priority_level"
              }
            }
          }
        ]
      },
      "description": "Teams are groups of admins in Intercom."
    },
    "team_list": {
      "name": "Team List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "team.list"
                }
              ]
            },
            "description": "The type of the object"
          },
          {
            "key": "teams",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "team"
                  }
                }
              }
            },
            "description": "A list of team objects"
          }
        ]
      },
      "description": "This will return a list of team objects for the App."
    },
    "team_priority_level": {
      "name": "Team Priority Level",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "primary_team_ids",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The primary team ids for the team"
              },
              {
                "key": "secondary_team_ids",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The secondary team ids for the team"
              }
            ]
          }
        }
      },
      "description": "Admin priority levels for teams"
    },
    "ticket": {
      "name": "Ticket",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "ticket"
                    }
                  ],
                  "default": "ticket"
                },
                "description": "Always ticket"
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the ticket which is given by Intercom."
              },
              {
                "key": "ticket_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The ID of the Ticket used in the Intercom Inbox and Messenger. Do not use ticket_id for API queries."
              },
              {
                "key": "category",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "Customer"
                    },
                    {
                      "value": "Back-office"
                    },
                    {
                      "value": "Tracker"
                    }
                  ]
                },
                "description": "Category of the Ticket."
              },
              {
                "key": "ticket_attributes",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_custom_attributes"
                  }
                }
              },
              {
                "key": "ticket_state",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "submitted"
                    },
                    {
                      "value": "in_progress"
                    },
                    {
                      "value": "waiting_on_customer"
                    },
                    {
                      "value": "resolved"
                    }
                  ]
                },
                "description": "The state the ticket is currently in"
              },
              {
                "key": "ticket_type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_type"
                  }
                }
              },
              {
                "key": "contacts",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_contacts"
                  }
                }
              },
              {
                "key": "admin_assignee_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id representing the admin assigned to the ticket."
              },
              {
                "key": "team_assignee_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id representing the team assigned to the ticket."
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the ticket was created as a UTC Unix timestamp."
              },
              {
                "key": "updated_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The last time the ticket was updated as a UTC Unix timestamp."
              },
              {
                "key": "open",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether or not the ticket is open. If false, the ticket is closed."
              },
              {
                "key": "snoozed_until",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the ticket will be snoozed until as a UTC Unix timestamp. If null, the ticket is not currently snoozed."
              },
              {
                "key": "linked_objects",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "linked_object_list"
                  }
                }
              },
              {
                "key": "ticket_parts",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_parts"
                  }
                }
              },
              {
                "key": "is_shared",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether or not the ticket is shared with the customer."
              },
              {
                "key": "ticket_state_internal_label",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The state the ticket is currently in, in a human readable form - visible in Intercom"
              },
              {
                "key": "ticket_state_external_label",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The state the ticket is currently in, in a human readable form - visible to customers, in the messenger, email and tickets portal."
              }
            ]
          }
        }
      },
      "description": "Tickets are how you track requests from your users."
    },
    "ticket_contacts": {
      "name": "Contacts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "contact.list"
                }
              ]
            },
            "description": "always contact.list"
          },
          {
            "key": "contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "contact_reference"
                  }
                }
              }
            },
            "description": "The list of contacts affected by this ticket."
          }
        ]
      },
      "description": "The list of contacts affected by a ticket."
    },
    "ticket_custom_attributes": {
      "name": "Ticket Attributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      },
      "description": "An object containing the different attributes associated to the ticket as key-value pairs. For the default title and description attributes, the keys are `_default_title_` and `_default_description_`."
    },
    "ticket_list": {
      "name": "Ticket List",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "ticket.list"
                }
              ]
            },
            "description": "Always ticket.list"
          },
          {
            "key": "tickets",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket"
                  }
                }
              }
            },
            "description": "The list of ticket objects"
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "A count of the total number of objects."
          },
          {
            "key": "pages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "cursor_pages"
              }
            }
          }
        ]
      },
      "description": "Tickets are how you track requests from your users."
    },
    "ticket_part": {
      "name": "Ticket Part",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Always ticket_part"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id representing the ticket part."
          },
          {
            "key": "part_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The type of ticket part."
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The message body, which may contain HTML."
          },
          {
            "key": "previous_ticket_state",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "submitted"
                },
                {
                  "value": "in_progress"
                },
                {
                  "value": "waiting_on_customer"
                },
                {
                  "value": "resolved"
                }
              ]
            },
            "description": "The previous state of the ticket."
          },
          {
            "key": "ticket_state",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "submitted"
                },
                {
                  "value": "in_progress"
                },
                {
                  "value": "waiting_on_customer"
                },
                {
                  "value": "resolved"
                }
              ]
            },
            "description": "The state of the ticket."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the ticket part was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The last time the ticket part was updated."
          },
          {
            "key": "assigned_to",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "reference"
                  }
                }
              }
            },
            "description": "The id of the admin that was assigned the ticket by this ticket_part (null if there has been no change in assignment.)"
          },
          {
            "key": "author",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "ticket_part_author"
              }
            }
          },
          {
            "key": "attachments",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "part_attachment"
                  }
                }
              }
            },
            "description": "A list of attachments for the part."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The external id of the ticket part"
          },
          {
            "key": "redacted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether or not the ticket part has been redacted."
          }
        ]
      },
      "description": "A Ticket Part represents a message in the ticket."
    },
    "ticket_part_author": {
      "name": "Ticket part author",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "admin"
                },
                {
                  "value": "bot"
                },
                {
                  "value": "team"
                },
                {
                  "value": "user"
                }
              ]
            },
            "description": "The type of the author"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id of the author"
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The name of the author"
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            },
            "description": "The email of the author"
          }
        ]
      },
      "description": "The author that wrote or triggered the part. Can be a bot, admin, team or user."
    },
    "ticket_parts": {
      "name": "Ticket Parts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "ticket_part.list"
                }
              ]
            },
            "description": ""
          },
          {
            "key": "ticket_parts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_part"
                  }
                }
              }
            },
            "description": "A list of Ticket Part objects for each ticket. There is a limit of 500 parts."
          },
          {
            "key": "total_count",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": ""
          }
        ]
      },
      "description": "A list of Ticket Part objects for each note and event in the ticket. There is a limit of 500 parts."
    },
    "ticket_reply": {
      "name": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "ticket_part"
                }
              ]
            },
            "description": "Always ticket_part"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The id representing the part."
          },
          {
            "key": "part_type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "note"
                },
                {
                  "value": "comment"
                },
                {
                  "value": "quick_reply"
                }
              ]
            },
            "description": "Type of the part"
          },
          {
            "key": "body",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The message body, which may contain HTML."
          },
          {
            "key": "created_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time the note was created."
          },
          {
            "key": "updated_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The last time the note was updated."
          },
          {
            "key": "author",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "ticket_part_author"
              }
            }
          },
          {
            "key": "attachments",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "part_attachment"
                  }
                }
              }
            },
            "description": "A list of attachments for the part."
          },
          {
            "key": "redacted",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether or not the ticket part has been redacted."
          }
        ]
      },
      "description": "A Ticket Part representing a note, comment, or quick_reply on a ticket"
    },
    "ticket_request_custom_attributes": {
      "name": "Ticket Attributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      },
      "description": "The attributes set on the ticket. When setting the default title and description attributes, the attribute keys that should be used are `_default_title_` and `_default_description_`. When setting ticket type attributes of the list attribute type, the key should be the attribute name and the value of the attribute should be the list item id, obtainable by [listing the ticket type](ref:get_ticket-types). For example, if the ticket type has an attribute called `priority` of type `list`, the key should be `priority` and the value of the attribute should be the guid of the list item (e.g. `de1825a0-0164-4070-8ca6-13e22462fa7e`)."
    },
    "ticket_type": {
      "name": "Ticket Type",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "String representing the object's type. Always has the value `ticket_type`."
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id representing the ticket type."
              },
              {
                "key": "category",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "Customer"
                    },
                    {
                      "value": "Back-office"
                    },
                    {
                      "value": "Tracker"
                    }
                  ]
                },
                "description": "Category of the Ticket Type."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the ticket type"
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The description of the ticket type"
              },
              {
                "key": "icon",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The icon of the ticket type"
              },
              {
                "key": "workspace_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id of the workspace that the ticket type belongs to."
              },
              {
                "key": "ticket_type_attributes",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_type_attribute_list"
                  }
                }
              },
              {
                "key": "archived",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether the ticket type is archived or not."
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The date and time the ticket type was created."
              },
              {
                "key": "updated_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The date and time the ticket type was last updated."
              }
            ]
          }
        }
      },
      "description": "A ticket type, used to define the data fields to be captured in a ticket."
    },
    "ticket_type_attribute": {
      "name": "Ticket Type Attribute",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "String representing the object's type. Always has the value `ticket_type_attribute`."
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id representing the ticket type attribute."
              },
              {
                "key": "workspace_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id of the workspace that the ticket type attribute belongs to."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the ticket type attribute"
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The description of the ticket type attribute"
              },
              {
                "key": "data_type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The type of the data attribute (allowed values: \"string list integer decimal boolean datetime files\")"
              },
              {
                "key": "input_options",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": []
                },
                "description": "Input options for the attribute"
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The order of the attribute against other attributes"
              },
              {
                "key": "required_to_create",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "description": "Whether the attribute is required or not for teammates."
              },
              {
                "key": "required_to_create_for_contacts",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "description": "Whether the attribute is required or not for contacts."
              },
              {
                "key": "visible_on_create",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                },
                "description": "Whether the attribute is visible or not to teammates."
              },
              {
                "key": "visible_to_contacts",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                },
                "description": "Whether the attribute is visible or not to contacts."
              },
              {
                "key": "default",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether the attribute is built in or not."
              },
              {
                "key": "ticket_type_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The id of the ticket type that the attribute belongs to."
              },
              {
                "key": "archived",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether the ticket type attribute is archived or not."
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The date and time the ticket type attribute was created."
              },
              {
                "key": "updated_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The date and time the ticket type attribute was last updated."
              }
            ]
          }
        }
      },
      "description": "Ticket type attribute, used to define each data field to be captured in a ticket."
    },
    "ticket_type_attribute_list": {
      "name": "Ticket Type Attributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "String representing the object's type. Always has the value `ticket_type_attributes.list`."
          },
          {
            "key": "ticket_type_attributes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_type_attribute"
                  }
                }
              }
            },
            "description": "A list of ticket type attributes associated with a given ticket type."
          }
        ]
      },
      "description": "A list of attributes associated with a given ticket type."
    },
    "ticket_type_list": {
      "name": "Ticket Types",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "String representing the object's type. Always has the value `ticket_type.list`."
          },
          {
            "key": "ticket_types",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "ticket_type"
                  }
                }
              }
            },
            "description": "A list of ticket_types associated with a given workspace."
          }
        ]
      },
      "description": "A list of ticket types associated with a given workspace."
    },
    "translation": {
      "name": "Translation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The localised name of the subscription type."
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The localised description of the subscription type."
          },
          {
            "key": "locale",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The two character identifier for the language of the translation object."
          }
        ]
      },
      "description": "A translation object contains the localised details of a subscription type."
    },
    "untag_company_request": {
      "name": "Untag Company Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the tag which will be untagged from the company"
          },
          {
            "key": "companies",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The Intercom defined id representing the company."
                    },
                    {
                      "key": "company_id",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The company id you have defined for the company."
                    },
                    {
                      "key": "untag",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      "description": "Always set to true"
                    }
                  ]
                }
              }
            },
            "description": "The id or company_id of the company can be passed as input parameters."
          }
        ]
      },
      "description": "You can tag a single company or a list of companies."
    },
    "update_article_request": {
      "name": "Update Article Request Payload",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "title",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The title of the article.For multilingual articles, this will be the title of the default language's content."
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The description of the article. For multilingual articles, this will be the description of the default language's content."
              },
              {
                "key": "body",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The content of the article. For multilingual articles, this will be the body of the default language's content."
              },
              {
                "key": "author_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace."
              },
              {
                "key": "state",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "published"
                    },
                    {
                      "value": "draft"
                    }
                  ]
                },
                "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content."
              },
              {
                "key": "parent_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id of the article's parent collection or section. An article without this field stands alone."
              },
              {
                "key": "parent_type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The type of parent, which can either be a `collection` or `section`."
              },
              {
                "key": "translated_content",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "article_translated_content"
                  }
                }
              }
            ]
          }
        }
      },
      "description": "You can Update an Article"
    },
    "update_collection_request": {
      "name": "Update Collection Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content."
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The description of the collection. For multilingual collections, this will be the description of the default language's content."
          },
          {
            "key": "translated_content",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "group_translated_content"
                  }
                }
              }
            }
          },
          {
            "key": "parent_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The id of the parent collection. If `null` then it will be updated as the first level collection."
          }
        ]
      },
      "description": "You can update a collection"
    },
    "update_contact_request": {
      "name": "Update Contact Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "role",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The role of the contact."
          },
          {
            "key": "external_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A unique identifier for the contact which is given to Intercom"
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The contacts email"
          },
          {
            "key": "phone",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The contacts phone"
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The contacts name"
          },
          {
            "key": "avatar",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "An image URL containing the avatar of a contact"
          },
          {
            "key": "signed_up_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The time specified for when a contact signed up"
          },
          {
            "key": "last_seen_at",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)"
          },
          {
            "key": "owner_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The id of an admin that has been assigned account ownership of the contact"
          },
          {
            "key": "unsubscribed_from_emails",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether the contact is unsubscribed from emails"
          },
          {
            "key": "custom_attributes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "nullable",
                "shape": {
                  "type": "object",
                  "extends": [],
                  "properties": []
                }
              }
            },
            "description": "The custom attributes which are set for the contact"
          }
        ]
      },
      "description": "You can update a contact"
    },
    "update_conversation_request": {
      "name": "Update Conversation Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "read",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Mark a conversation as read within Intercom."
          },
          {
            "key": "custom_attributes",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "custom_attributes"
              }
            }
          }
        ]
      },
      "description": "Payload of the request to update a conversation"
    },
    "update_data_attribute_request": {
      "name": "Update Data Attribute Request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "archived",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the attribute is to be archived or not."
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The readable description you see in the UI for the attribute."
          },
          {
            "key": "options",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`."
          },
          {
            "key": "messenger_writable",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Can this attribute be updated by the Messenger"
          }
        ]
      },
      "description": ""
    },
    "update_ticket_request": {
      "name": "Update Ticket Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "ticket_attributes",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": []
            },
            "description": "The attributes set on the ticket."
          },
          {
            "key": "state",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "in_progress"
                },
                {
                  "value": "waiting_on_customer"
                },
                {
                  "value": "resolved"
                }
              ]
            },
            "description": "The state of the ticket."
          },
          {
            "key": "open",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Specify if a ticket is open. Set to false to close a ticket. Closing a ticket will also unsnooze it."
          },
          {
            "key": "is_shared",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Specify whether the ticket is visible to users."
          },
          {
            "key": "snoozed_until",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "The time you want the ticket to reopen."
          },
          {
            "key": "assignment",
            "valueShape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "admin_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The ID of the admin performing the action."
                },
                {
                  "key": "assignee_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The ID of the admin or team to which the ticket is assigned. Set this 0 to unassign it."
                }
              ]
            }
          }
        ]
      },
      "description": "You can update a Ticket"
    },
    "update_ticket_type_attribute_request": {
      "name": "Update Ticket Type Attribute Request Payload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The name of the ticket type attribute"
          },
          {
            "key": "description",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The description of the attribute presented to the teammate or contact"
          },
          {
            "key": "required_to_create",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "description": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox."
          },
          {
            "key": "required_to_create_for_contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "description": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger."
          },
          {
            "key": "visible_on_create",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "description": "Whether the attribute is visible to teammates when creating a ticket in Inbox."
          },
          {
            "key": "visible_to_contacts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "description": "Whether the attribute is visible to contacts when creating a ticket in Messenger."
          },
          {
            "key": "multiline",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the attribute allows multiple lines of text (only applicable to string attributes)"
          },
          {
            "key": "list_items",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A comma delimited list of items for the attribute value (only applicable to list attributes)"
          },
          {
            "key": "allow_multiple_values",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)"
          },
          {
            "key": "archived",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether the attribute should be archived and not shown during creation of the ticket (it will still be present on previously created tickets)"
          }
        ]
      },
      "description": "You can update a Ticket Type Attribute"
    },
    "update_ticket_type_request": {
      "name": "Update Ticket Type Request Payload",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the ticket type."
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The description of the ticket type."
              },
              {
                "key": "category",
                "valueShape": {
                  "type": "enum",
                  "values": [
                    {
                      "value": "Customer"
                    },
                    {
                      "value": "Back-office"
                    },
                    {
                      "value": "Tracker"
                    }
                  ]
                },
                "description": "Category of the Ticket Type."
              },
              {
                "key": "icon",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "default": "🎟️"
                    }
                  }
                },
                "description": "The icon of the ticket type."
              },
              {
                "key": "archived",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "The archived status of the ticket type."
              },
              {
                "key": "is_internal",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "description": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute."
              }
            ]
          }
        }
      },
      "description": "The request payload for updating a ticket type.\nYou can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n"
    },
    "update_visitor_request": {
      "name": "Update Visitor Request Payload",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ]
      },
      "description": "Update an existing visitor."
    },
    "visitor": {
      "name": "Visitor",
      "shape": {
        "type": "alias",
        "value": {
          "type": "nullable",
          "shape": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "default": "visitor"
                    }
                  }
                },
                "description": "Value is 'visitor'"
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The Intercom defined id representing the Visitor."
              },
              {
                "key": "user_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Automatically generated identifier for the Visitor."
              },
              {
                "key": "anonymous",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this visitor is anonymous."
              },
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "email"
                    }
                  }
                },
                "description": "The email of the visitor."
              },
              {
                "key": "phone",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The phone number of the visitor."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The name of the visitor."
              },
              {
                "key": "pseudonym",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The pseudonym of the visitor."
              },
              {
                "key": "avatar",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "default": "avatar"
                          }
                        }
                      },
                      "description": ""
                    },
                    {
                      "key": "image_url",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "nullable",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          }
                        }
                      },
                      "description": "This object represents the avatar associated with the visitor."
                    }
                  ]
                }
              },
              {
                "key": "app_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The id of the app the visitor is associated with."
              },
              {
                "key": "companies",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "enum",
                        "values": [
                          {
                            "value": "company.list"
                          }
                        ]
                      },
                      "description": "The type of the object"
                    },
                    {
                      "key": "companies",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "company"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "key": "location_data",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "default": "location_data"
                          }
                        }
                      },
                      "description": ""
                    },
                    {
                      "key": "city_name",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The city name of the visitor."
                    },
                    {
                      "key": "continent_code",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The continent code of the visitor."
                    },
                    {
                      "key": "country_code",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The country code of the visitor."
                    },
                    {
                      "key": "country_name",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The country name of the visitor."
                    },
                    {
                      "key": "postal_code",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The postal code of the visitor."
                    },
                    {
                      "key": "region_name",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The region name of the visitor."
                    },
                    {
                      "key": "timezone",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "The timezone of the visitor."
                    }
                  ]
                }
              },
              {
                "key": "las_request_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the Lead last recorded making a request."
              },
              {
                "key": "created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the Visitor was added to Intercom."
              },
              {
                "key": "remote_created_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the Visitor was added to Intercom."
              },
              {
                "key": "signed_up_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The time the Visitor signed up for your product."
              },
              {
                "key": "updated_at",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The last time the Visitor was updated."
              },
              {
                "key": "session_count",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The number of sessions the Visitor has had."
              },
              {
                "key": "social_profiles",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "enum",
                        "values": [
                          {
                            "value": "social_profile.list"
                          }
                        ]
                      },
                      "description": "The type of the object"
                    },
                    {
                      "key": "social_profiles",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "key": "owner_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The id of the admin that owns the Visitor."
              },
              {
                "key": "unsubscribed_from_emails",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Whether the Visitor is unsubscribed from emails."
              },
              {
                "key": "marked_email_as_spam",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this visitor has marked an email as spam."
              },
              {
                "key": "has_hard_bounced",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                "description": "Identifies if this visitor has had a hard bounce."
              },
              {
                "key": "tags",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "enum",
                        "values": [
                          {
                            "value": "tag.list"
                          }
                        ]
                      },
                      "description": "The type of the object"
                    },
                    {
                      "key": "tags",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "object",
                            "extends": [],
                            "properties": [
                              {
                                "key": "type",
                                "valueShape": {
                                  "type": "enum",
                                  "values": [
                                    {
                                      "value": "tag"
                                    }
                                  ]
                                },
                                "description": "The type of the object"
                              },
                              {
                                "key": "id",
                                "valueShape": {
                                  "type": "alias",
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "description": "The id of the tag."
                              },
                              {
                                "key": "name",
                                "valueShape": {
                                  "type": "alias",
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "description": "The name of the tag."
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "key": "segments",
                "valueShape": {
                  "type": "object",
                  "extends": [],
                  "properties": [
                    {
                      "key": "type",
                      "valueShape": {
                        "type": "enum",
                        "values": [
                          {
                            "value": "segment.list"
                          }
                        ]
                      },
                      "description": "The type of the object"
                    },
                    {
                      "key": "segments",
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "key": "custom_attributes",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The custom attributes you have set on the Visitor."
              },
              {
                "key": "referrer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The referer of the visitor."
              },
              {
                "key": "utm_campaign",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The utm_campaign of the visitor."
              },
              {
                "key": "utm_content",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The utm_content of the visitor."
              },
              {
                "key": "utm_medium",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The utm_medium of the visitor."
              },
              {
                "key": "utm_source",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The utm_source of the visitor."
              },
              {
                "key": "utm_term",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The utm_term of the visitor."
              },
              {
                "key": "do_not_track",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "nullable",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Identifies if this visitor has do not track enabled."
              }
            ]
          }
        }
      },
      "description": "Visitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform. The Visitors resource provides methods to fetch, update, convert and delete."
    },
    "visitor_deleted_object": {
      "name": "Visitor Deleted Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the visitor which is given by Intercom."
          },
          {
            "key": "type",
            "valueShape": {
              "type": "enum",
              "values": [
                {
                  "value": "visitor"
                }
              ]
            },
            "description": "The type of object which was deleted"
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Automatically generated identifier for the Visitor."
          }
        ]
      },
      "description": "Response returned when an object is deleted"
    },
    "postConversationsIdPartsJsonRequest": {
      "name": "postConversationsIdPartsJsonRequest",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "close_conversation_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "snooze_conversation_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "open_conversation_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "assign_conversation_request"
              }
            }
          }
        ]
      }
    },
    "postTagsJsonRequest": {
      "name": "postTagsJsonRequest",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "create_or_update_tag_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "tag_company_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "untag_company_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "tag_multiple_users_request"
              }
            }
          }
        ]
      }
    },
    "postTicketsIdReplyJsonRequest": {
      "name": "postTicketsIdReplyJsonRequest",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "contact_reply_ticket_request"
              }
            }
          },
          {
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "admin_reply_ticket_request"
              }
            }
          }
        ]
      }
    }
  },
  "subpackages": {
    "admins": {
      "id": "admins",
      "name": "Admins",
      "displayName": "Admins"
    },
    "articles": {
      "id": "articles",
      "name": "Articles",
      "displayName": "Articles"
    },
    "helpCenter": {
      "id": "helpCenter",
      "name": "Help Center",
      "displayName": "Help Center"
    },
    "companies": {
      "id": "companies",
      "name": "Companies",
      "displayName": "Companies"
    },
    "contacts": {
      "id": "contacts",
      "name": "Contacts",
      "displayName": "Contacts"
    },
    "notes": {
      "id": "notes",
      "name": "Notes",
      "displayName": "Notes"
    },
    "segments": {
      "id": "segments",
      "name": "Segments",
      "displayName": "Segments"
    },
    "subscriptionTypes": {
      "id": "subscriptionTypes",
      "name": "Subscription Types",
      "displayName": "Subscription Types"
    },
    "tags": {
      "id": "tags",
      "name": "Tags",
      "displayName": "Tags"
    },
    "conversations": {
      "id": "conversations",
      "name": "Conversations",
      "displayName": "Conversations"
    },
    "dataAttributes": {
      "id": "dataAttributes",
      "name": "Data Attributes",
      "displayName": "Data Attributes"
    },
    "dataEvents": {
      "id": "dataEvents",
      "name": "Data Events",
      "displayName": "Data Events"
    },
    "dataExport": {
      "id": "dataExport",
      "name": "Data Export",
      "displayName": "Data Export"
    },
    "messages": {
      "id": "messages",
      "name": "Messages",
      "displayName": "Messages"
    },
    "news": {
      "id": "news",
      "name": "News",
      "displayName": "News"
    },
    "switch": {
      "id": "switch",
      "name": "Switch",
      "displayName": "Switch"
    },
    "teams": {
      "id": "teams",
      "name": "Teams",
      "displayName": "Teams"
    },
    "ticketTypeAttributes": {
      "id": "ticketTypeAttributes",
      "name": "Ticket Type Attributes",
      "displayName": "Ticket Type Attributes"
    },
    "ticketTypes": {
      "id": "ticketTypes",
      "name": "Ticket Types",
      "displayName": "Ticket Types"
    },
    "tickets": {
      "id": "tickets",
      "name": "Tickets",
      "displayName": "Tickets"
    },
    "visitors": {
      "id": "visitors",
      "name": "Visitors",
      "displayName": "Visitors"
    }
  },
  "auths": {
    "bearerAuth": {
      "type": "bearerAuth"
    }
  }
}