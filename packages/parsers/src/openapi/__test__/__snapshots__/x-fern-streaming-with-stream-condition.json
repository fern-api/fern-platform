{
  "id": "test-uuid-replacement",
  "endpoints": {
    "endpoint_chats.chat": {
      "id": "endpoint_chats.chat",
      "description": "Create a chat while specifying the default retrieval parameters used by the prompt.",
      "namespace": [
        "Chats"
      ],
      "displayName": "Start a chat",
      "operationId": "createChat",
      "method": "POST",
      "path": [
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "v2"
        },
        {
          "type": "literal",
          "value": "/"
        },
        {
          "type": "literal",
          "value": "chats"
        }
      ],
      "defaultEnvironment": "https://api.streamingtest.io",
      "environments": [
        {
          "id": "https://api.streamingtest.io",
          "baseUrl": "https://api.streamingtest.io"
        }
      ],
      "requestHeaders": [
        {
          "key": "Request-Timeout",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          },
          "description": "The API will make a best effort to complete the request in the specified seconds or time out."
        },
        {
          "key": "Request-Timeout-Millis",
          "valueShape": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          },
          "description": "The API will make a best effort to complete the request in the specified milliseconds or time out."
        }
      ],
      "requests": [
        {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ChatRequest"
            }
          }
        }
      ],
      "responses": [
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ChatFullResponse"
            }
          },
          "description": "A response to a chat request."
        },
        {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "ChatStreamedResponse"
            }
          },
          "description": "A response to a chat request."
        }
      ],
      "errors": [],
      "examples": [
        {
          "path": "/v2/chats",
          "responseStatusCode": 200,
          "headers": {
            "Request-Timeout": 0,
            "Request-Timeout-Millis": 0
          },
          "responseBody": {
            "type": "json",
            "value": {
              "chat_id": "chat_id",
              "turn_id": "turn_id",
              "answer": "answer"
            }
          }
        },
        {
          "path": "/v2/chats",
          "responseStatusCode": 200,
          "headers": {
            "Request-Timeout": 0,
            "Request-Timeout-Millis": 0
          },
          "responseBody": {
            "type": "json",
            "value": {
              "chunk": "Hello, how can I help you today?"
            }
          }
        },
        {
          "path": "/v2/chats",
          "responseStatusCode": 200,
          "headers": {
            "Request-Timeout": 0,
            "Request-Timeout-Millis": 0
          },
          "responseBody": {
            "type": "json",
            "value": {
              "chat_id": "chat_id",
              "turn_id": "turn_id",
              "answer": "answer"
            }
          }
        },
        {
          "path": "/v2/chats",
          "responseStatusCode": 200,
          "headers": {
            "Request-Timeout": 0,
            "Request-Timeout-Millis": 0
          },
          "responseBody": {
            "type": "json",
            "value": {
              "chunk": "Hello, how can I help you today?"
            }
          }
        }
      ],
      "protocol": {
        "type": "rest"
      }
    }
  },
  "websockets": {},
  "webhooks": {},
  "types": {
    "ChatRequest": {
      "name": "ChatRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The chat message or question."
          },
          {
            "key": "stream_response",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            },
            "description": "Indicates whether the response should be streamed or not."
          }
        ]
      }
    },
    "ChatFullResponse": {
      "name": "ChatFullResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "chat_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "If the chat response was stored, the ID of the chat."
          },
          {
            "key": "turn_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "If the chat response was stored, the ID of the turn."
          },
          {
            "key": "answer",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The message from the chat model for the chat message."
          }
        ]
      },
      "description": "Full response to a chat question when the result is not streamed."
    },
    "ChatStreamedResponse": {
      "name": "ChatStreamedResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "chunk",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The chunk of the response."
          }
        ]
      },
      "description": "An individual event when the response is streamed."
    }
  },
  "subpackages": {
    "chats": {
      "id": "chats",
      "name": "Chats",
      "displayName": "Chats"
    }
  },
  "auths": {}
}