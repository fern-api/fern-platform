# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  property: property.yml
  commons: commons.yml
  records: records.yml

service:
  auth: true
  base-path: /sheets/{sheetId}/cells
  audiences:
    - public
  path-parameters:
    sheetId:
      docs: ID of sheet
      type: commons.SheetId
  endpoints:
    getValues:
      path: ""
      method: GET
      docs: Returns record cell values grouped by all fields in the sheet
      display-name: Get record cells by field
      request:
        name: GetFieldValuesRequest
        query-parameters:
          fieldKey:
            docs: |
              Returns results from the given field only. Otherwise all field cells are returned
            type: string
          sortField:
            type: optional<commons.SortField>
          sortDirection:
            type: optional<commons.SortDirection>
          filter:
            docs: Options to filter records
            type: optional<commons.Filter>
          filterField:
            docs: Name of field by which to filter records
            type: optional<string>
          pageSize:
            docs: >-
              Number of records to return in a page (default 1000 if pageNumber
              included)
            type: optional<integer>
          pageNumber:
            docs: Based on pageSize, which page of records to return
            type: optional<integer>
          distinct:
            docs: When true, excludes duplicate values
            type: optional<boolean>
          includeCounts:
            docs: When both distinct and includeCounts are true, the count of distinct field values will be returned
            type: optional<boolean>
          searchValue:
            docs: A value to find for a given field in a sheet. Wrap the value in "" for exact match
            type: optional<string>
      response: CellsResponse

types:
  CellsResponse:
    properties:
      data: CellsResponseData

  CellsResponseData:
    docs: Cell values grouped by field key
    type: map<string, list<CellValueWithCounts>>

  CellValueWithCounts:
    extends: records.CellValue
    properties:
      counts: optional<records.RecordCounts>
